/* Generated by the Nim Compiler v1.4.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1194651 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI5635232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI5890011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1188011 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI10205029 = {size: 0,kind: 19,base: null,node: null,finalizer: null};
var NTI1194621 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13531025 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13531021 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13605359 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10631269 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12480107 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12480104 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12480101 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13930217 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1188050 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI11832408 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI1194635 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1188048 = {size: 0,kind: 33,base: null,node: null,finalizer: null};
var NTI12885526 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1194653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2335020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13531015 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI13621261 = {size: 0,kind: 33,base: null,node: null,finalizer: null};
var NTI13621265 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13621465 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10897211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10416096 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10416097 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10465076 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10465074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10462240 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10465030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10465018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10465039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10465037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10462028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10465031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10465022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853472 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853468 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853464 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853291 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1854628 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1854619 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1854618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1853385 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1854626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1853387 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853269 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853267 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853661 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853273 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853271 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853659 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853657 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853655 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853653 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853275 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853651 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853675 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853281 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853279 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1188044 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1853767 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853285 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853283 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1188064 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1853231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853243 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853239 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853233 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1853614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853612 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853610 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1853237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1853235 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10897207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10897209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1853293 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194649 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194619 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194633 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194637 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194728 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1188013 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1188015 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1194723 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1194617 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
NTI1194723.base = NTI1194617;
NTI1194728.base = NTI1194617;
var NNI1194617 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1194723, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1188013, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1188013, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1194728, name: "up", sons: null}]};
NTI1194617.node = NNI1194617;
var NNI1194408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194408.node = NNI1194408;
NTI1194617.base = NTI1194408;
var NNI1194637 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194637.node = NNI1194637;
var NNI1194633 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194633.node = NNI1194633;
var NNI1194619 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194619.node = NNI1194619;
NTI1194619.base = NTI1194617;
NTI1194633.base = NTI1194619;
NTI1194637.base = NTI1194633;
var NNI1194641 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194641.node = NNI1194641;
NTI1194641.base = NTI1194619;
var NNI1194649 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194649.node = NNI1194649;
NTI1194649.base = NTI1194619;
var NNI1853293 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI1188015, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI1188015, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI1188015, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI1188015, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI1188015, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI1188015, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI1188015, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI1188015, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI1188015, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI1188015, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI1188015, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI1188015, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI1188015, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI1188015, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI1188015, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI1188015, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI1188015, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI1188015, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI1188015, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI1188015, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI1188015, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI1188015, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI1188015, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI1188015, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI1188015, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI1188015, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI1188015, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI1188015, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI1188015, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI1188015, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI1188015, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI1188015, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI1188015, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI1188015, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI1188015, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI1188015, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI1188015, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI1188015, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI1188015, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI1188015, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI1188015, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI1188015, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI1188015, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI1188015, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI1188015, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI1188015, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI1188015, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI1188015, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI1188015, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI1188015, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI1188015, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI1188015, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI1188015, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI1188015, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI1188015, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI1188015, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI1188015, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI1188015, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI1188015, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI1188015, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI1188015, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI1188015, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI1188015, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI1188015, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI1188015, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI1188015, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI1188015, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI1188015, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI1188015, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI1188015, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI1188015, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI1188015, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI1188015, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI1188015, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI1188015, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI1188015, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI1188015, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI1188015, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI1188015, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI1188015, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI1188015, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI1188015, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI1188015, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI1188015, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI1188015, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI1188015, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI1188015, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI1188015, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI1188015, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI1188015, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI1188015, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI1188015, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI1188015, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI1188015, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI1188015, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI1188015, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI1188015, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI1188015, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI1188015, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI1188015, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI1188015, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI1188015, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI1188015, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI1188015, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI1188015, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI1188015, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI1188015, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI1188015, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI1188015, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI1188015, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI1188015, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI1188015, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1188015, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI1188015, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI1188015, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI1188015, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI1188015, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI1188015, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI1188015, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI1188015, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI1188015, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI1188015, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI1188015, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI1188015, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI1188015, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI1188015, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI1188015, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI1188015, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI1188015, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI1188015, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI1188015, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI1188015, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI1188015, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI1188015, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI1188015, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI1188015, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI1188015, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI1188015, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI1188015, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI1188015, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI1188015, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI1188015, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI1188015, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI1188015, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI1188015, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI1188015, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI1188015, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI1188015, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI1188015, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI1188015, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI1188015, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI1188015, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI1188015, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI1188015, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI1188015, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI1188015, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI1188015, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI1188015, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI1188015, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI1188015, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI1188015, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI1188015, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI1188015, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI1188015, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI1188015, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI1188015, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1188015, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI1188015, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI1188015, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI1188015, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI1188015, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI1188015, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI1188015, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI1188015, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI1188015, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI1188015, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI1188015, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI1188015, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI1188015, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI1188015, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI1188015, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI1188015, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI1188015, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI1188015, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI1188015, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI1188015, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI1188015, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI1188015, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI1188015, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI1188015, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI1188015, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI1188015, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI1188015, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI1188015, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI1188015, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI1188015, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI1188015, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI1188015, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI1188015, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI1188015, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI1188015, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI1188015, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI1188015, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI1188015, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI1188015, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI1188015, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI1188015, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI1188015, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI1188015, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI1188015, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI1188015, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI1188015, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI1188015, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI1188015, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI1188015, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI1188015, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI1188015, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI1188015, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI1188015, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI1188015, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI1188015, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI1188015, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI1188015, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI1188015, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI1188015, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI1188015, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI1188015, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI1188015, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI1188015, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI1188015, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI1188015, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI1188015, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI1188015, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI1188015, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI1188015, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI1188015, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI1188015, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI1188015, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI1188015, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI1188015, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI1188015, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI1188015, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI1188015, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI1188015, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI1188015, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI1188015, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI1188015, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI1188015, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI1188015, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI1188015, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI1188015, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI1188015, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI1188015, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI1188015, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI1188015, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI1188015, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI1188015, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI1188015, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI1188015, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI1188015, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI1188015, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI1188015, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI1188015, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI1188015, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI1188015, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI1188015, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI1188015, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI1188015, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI1188015, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI1188015, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI1188015, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI1188015, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI1188015, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI1188015, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI1188015, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI1188015, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI1188015, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI1188015, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1188015, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI1188015, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI1188015, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI1188015, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI1188015, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI1188015, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI1188015, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI1188015, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI1188015, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI1188015, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI1188015, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI1188015, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI1188015, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI1188015, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI1188015, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI1188015, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI1188015, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI1188015, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI1188015, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI1188015, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI1188015, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI1188015, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI1188015, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI1188015, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI1188015, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI1188015, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI1188015, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI1188015, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI1188015, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI1188015, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI1188015, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI1188015, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI1188015, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI1188015, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI1188015, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI1188015, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI1188015, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI1188015, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI1188015, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI1188015, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI1188015, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI1188015, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI1188015, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI1188015, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI1188015, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI1188015, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI1188015, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI1188015, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI1188015, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI1188015, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI1188015, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI1188015, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI1188015, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI1188015, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI1188015, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI1188015, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI1188015, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI1188015, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI1188015, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI1188015, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI1188015, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI1188015, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI1188015, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI1188015, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI1188015, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI1188015, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI1188015, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI1188015, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI1188015, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI1188015, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI1188015, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI1188015, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI1188015, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI1188015, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI1188015, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI1188015, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI1188015, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI1188015, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI1188015, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI1188015, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI1188015, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI1188015, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI1188015, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI1188015, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188015, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI1188015, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI1188015, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI1188015, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI1188015, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI1188015, name: "zIndex", sons: null}]};
NTI1853293.node = NNI1853293;
NTI1853293.base = NTI1194408;
var NNI10897207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI10897207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10897207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10897207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10897207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10897207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10897207, name: "pkSame", len: 0, sons: null}}};
NTI10897207.node = NNI10897207;
NTI1853610.base = NTI1853235;
NTI1853612.base = NTI1853235;
NTI1853614.base = NTI1853235;
var NNI1853233 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1853233, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1853233, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1853233, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1853233, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1853233, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1853233, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1853233, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1853233, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1853233, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1853233, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1853233, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1853233, name: "NotationNode", len: 0, sons: null}}};
NTI1853233.node = NNI1853233;
var NNI1853231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1853231.node = NNI1853231;
NTI1853231.base = NTI1194408;
NTI1853229.base = NTI1853231;
NTI1853767.base = NTI1853243;
var NNI1853285 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI1188015, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI1188015, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI1188015, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1853767, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI1188015, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI1188015, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI1188044, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI1188015, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI1188064, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1188015, name: "target", sons: null}]};
NTI1853285.node = NNI1853285;
NTI1853285.base = NTI1853245;
NTI1853283.base = NTI1853285;
var NNI1853281 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI1188064, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI1188064, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI1188044, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI1188015, name: "value", sons: null}]};
NTI1853281.node = NNI1853281;
NTI1853281.base = NTI1853245;
NTI1853279.base = NTI1853281;
NTI1853673.base = NTI1853279;
NTI1853675.base = NTI1853279;
var NNI1853245 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI1188015, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1853229, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI1188064, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI1188064, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI1188015, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI1188064, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1853283, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI1188064, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1853673, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1853675, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI1188044, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI1188044, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI1188015, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI1188064, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI1188015, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI1188044, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI1188044, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI1188044, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI1188044, name: "offsetTop", sons: null}]};
NTI1853245.node = NNI1853245;
NTI1853245.base = NTI1853237;
NTI1853243.base = NTI1853245;
var NNI1853277 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1188044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1188044, name: "y", sons: null}]};
NTI1853277.node = NNI1853277;
NTI1853277.base = NTI1853245;
NTI1853275.base = NTI1853277;
NTI1853651.base = NTI1853275;
NTI1853653.base = NTI1853283;
var NNI1853289 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI1188044, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI1188064, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1188044, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI1188044, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI1188015, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI1188015, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI1188044, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188044, name: "width", sons: null}]};
NTI1853289.node = NNI1853289;
NTI1853289.base = NTI1853245;
NTI1853287.base = NTI1853289;
NTI1853655.base = NTI1853287;
NTI1853657.base = NTI1853243;
var NNI1853273 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI1188044, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI1188044, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI1188015, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188044, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI1188015, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI1188044, name: "vspace", sons: null}]};
NTI1853273.node = NNI1853273;
NTI1853273.base = NTI1853245;
NTI1853271.base = NTI1853273;
NTI1853659.base = NTI1853271;
var NNI1853269 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI1188015, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1188044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1188044, name: "y", sons: null}]};
NTI1853269.node = NNI1853269;
NTI1853269.base = NTI1853245;
NTI1853267.base = NTI1853269;
NTI1853661.base = NTI1853267;
var NNI1854618 = {kind: 1, offset: "then", len: 0, typ: NTI1854619, name: "then", sons: null};
NTI1854618.node = NNI1854618;
NTI1853385.base = NTI1854618;
var NNI1854626 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1853385, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1854628, name: "onloadingdone", sons: null}]};
NTI1854626.node = NNI1854626;
NTI1853387.base = NTI1854626;
var NNI1853241 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1853243, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1853243, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI1188015, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI1188015, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1853243, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI1188015, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI1188015, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI1188015, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI1188015, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1853243, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI1188015, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI1188015, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI1188015, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI1188015, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI1188015, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI1188015, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1853651, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1853653, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1853655, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1853657, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1853659, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1853661, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1853387, name: "fonts", sons: null}]};
NTI1853241.node = NNI1853241;
NTI1853241.base = NTI1853237;
NTI1853239.base = NTI1853241;
NTI1853291.base = NTI1853293;
var NNI1853237 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1853610, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1853612, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1853614, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1188015, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1853235, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1853235, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1853235, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI1188015, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1853233, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI1188015, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1853235, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1853235, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1853235, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1853239, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI1188015, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI1188015, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI1188015, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI1188015, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1853291, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI1188015, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1853243, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI1188064, name: "isConnected", sons: null}]};
NTI1853237.node = NNI1853237;
var NNI1853205 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1853388, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1853392, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1853396, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1853400, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1853404, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1853408, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1853412, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1853416, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1853420, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1853424, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1853428, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1853432, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1853436, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1853440, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1853444, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1853448, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1853452, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1853456, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1853460, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1853464, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1853468, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1853472, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1853476, name: "onloadend", sons: null}]};
NTI1853205.node = NNI1853205;
NTI1853205.base = NTI1194408;
NTI1853237.base = NTI1853205;
NTI1853235.base = NTI1853237;
var NNI10462028 = {kind: 2, offset: 0, typ: null, name: null, len: 208, sons: {"0": {kind: 1, offset: 0, typ: NTI10462028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10462028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10462028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10462028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10462028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10462028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10462028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI10462028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI10462028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI10462028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI10462028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI10462028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI10462028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI10462028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI10462028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI10462028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI10462028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI10462028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI10462028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI10462028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI10462028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI10462028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI10462028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI10462028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI10462028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI10462028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI10462028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI10462028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI10462028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI10462028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI10462028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI10462028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI10462028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI10462028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI10462028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI10462028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI10462028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI10462028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI10462028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI10462028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI10462028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI10462028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI10462028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI10462028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI10462028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI10462028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI10462028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI10462028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI10462028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI10462028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI10462028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI10462028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI10462028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI10462028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI10462028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI10462028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI10462028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI10462028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI10462028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI10462028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI10462028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI10462028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI10462028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI10462028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI10462028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI10462028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI10462028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI10462028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI10462028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI10462028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI10462028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI10462028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI10462028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI10462028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI10462028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI10462028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI10462028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI10462028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI10462028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI10462028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI10462028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI10462028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI10462028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI10462028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI10462028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI10462028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI10462028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI10462028, name: "animate", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI10462028, name: "animateMotion", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI10462028, name: "animateTransform", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI10462028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI10462028, name: "clipPath", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI10462028, name: "defs", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI10462028, name: "desc", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI10462028, name: "discard", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI10462028, name: "ellipse", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI10462028, name: "feBlend", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI10462028, name: "feColorMatrix", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI10462028, name: "feComponentTransfer", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI10462028, name: "feComposite", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI10462028, name: "feConvolveMatrix", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI10462028, name: "feDiffuseLighting", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI10462028, name: "feDisplacementMap", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI10462028, name: "feDistantLight", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI10462028, name: "feDropShadow", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI10462028, name: "feFlood", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI10462028, name: "feFuncA", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI10462028, name: "feFuncB", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI10462028, name: "feFuncG", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI10462028, name: "feFuncR", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI10462028, name: "feGaussianBlur", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI10462028, name: "feImage", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI10462028, name: "feMerge", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI10462028, name: "feMergeNode", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI10462028, name: "feMorphology", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI10462028, name: "feOffset", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI10462028, name: "fePointLight", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI10462028, name: "feSpecularLighting", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI10462028, name: "feSpotLight", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI10462028, name: "feTile", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI10462028, name: "feTurbulence", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI10462028, name: "filter", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI10462028, name: "foreignObject", len: 0, sons: null}, 
"123": {kind: 1, offset: 123, typ: NTI10462028, name: "g", len: 0, sons: null}, 
"124": {kind: 1, offset: 124, typ: NTI10462028, name: "image", len: 0, sons: null}, 
"125": {kind: 1, offset: 125, typ: NTI10462028, name: "line", len: 0, sons: null}, 
"126": {kind: 1, offset: 126, typ: NTI10462028, name: "linearGradient", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI10462028, name: "marker", len: 0, sons: null}, 
"128": {kind: 1, offset: 128, typ: NTI10462028, name: "mask", len: 0, sons: null}, 
"129": {kind: 1, offset: 129, typ: NTI10462028, name: "metadata", len: 0, sons: null}, 
"130": {kind: 1, offset: 130, typ: NTI10462028, name: "mpath", len: 0, sons: null}, 
"131": {kind: 1, offset: 131, typ: NTI10462028, name: "path", len: 0, sons: null}, 
"132": {kind: 1, offset: 132, typ: NTI10462028, name: "pattern", len: 0, sons: null}, 
"133": {kind: 1, offset: 133, typ: NTI10462028, name: "polygon", len: 0, sons: null}, 
"134": {kind: 1, offset: 134, typ: NTI10462028, name: "polyline", len: 0, sons: null}, 
"135": {kind: 1, offset: 135, typ: NTI10462028, name: "radialGradient", len: 0, sons: null}, 
"136": {kind: 1, offset: 136, typ: NTI10462028, name: "rect", len: 0, sons: null}, 
"137": {kind: 1, offset: 137, typ: NTI10462028, name: "set", len: 0, sons: null}, 
"138": {kind: 1, offset: 138, typ: NTI10462028, name: "stop", len: 0, sons: null}, 
"139": {kind: 1, offset: 139, typ: NTI10462028, name: "svg", len: 0, sons: null}, 
"140": {kind: 1, offset: 140, typ: NTI10462028, name: "switch", len: 0, sons: null}, 
"141": {kind: 1, offset: 141, typ: NTI10462028, name: "symbol", len: 0, sons: null}, 
"142": {kind: 1, offset: 142, typ: NTI10462028, name: "text", len: 0, sons: null}, 
"143": {kind: 1, offset: 143, typ: NTI10462028, name: "textPath", len: 0, sons: null}, 
"144": {kind: 1, offset: 144, typ: NTI10462028, name: "tspan", len: 0, sons: null}, 
"145": {kind: 1, offset: 145, typ: NTI10462028, name: "unknown", len: 0, sons: null}, 
"146": {kind: 1, offset: 146, typ: NTI10462028, name: "use", len: 0, sons: null}, 
"147": {kind: 1, offset: 147, typ: NTI10462028, name: "view", len: 0, sons: null}, 
"148": {kind: 1, offset: 148, typ: NTI10462028, name: "maction", len: 0, sons: null}, 
"149": {kind: 1, offset: 149, typ: NTI10462028, name: "math", len: 0, sons: null}, 
"150": {kind: 1, offset: 150, typ: NTI10462028, name: "menclose", len: 0, sons: null}, 
"151": {kind: 1, offset: 151, typ: NTI10462028, name: "merror", len: 0, sons: null}, 
"152": {kind: 1, offset: 152, typ: NTI10462028, name: "mfenced", len: 0, sons: null}, 
"153": {kind: 1, offset: 153, typ: NTI10462028, name: "mfrac", len: 0, sons: null}, 
"154": {kind: 1, offset: 154, typ: NTI10462028, name: "mglyph", len: 0, sons: null}, 
"155": {kind: 1, offset: 155, typ: NTI10462028, name: "mi", len: 0, sons: null}, 
"156": {kind: 1, offset: 156, typ: NTI10462028, name: "mlabeledtr", len: 0, sons: null}, 
"157": {kind: 1, offset: 157, typ: NTI10462028, name: "mmultiscripts", len: 0, sons: null}, 
"158": {kind: 1, offset: 158, typ: NTI10462028, name: "mn", len: 0, sons: null}, 
"159": {kind: 1, offset: 159, typ: NTI10462028, name: "mo", len: 0, sons: null}, 
"160": {kind: 1, offset: 160, typ: NTI10462028, name: "mover", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI10462028, name: "mpadded", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI10462028, name: "mphantom", len: 0, sons: null}, 
"163": {kind: 1, offset: 163, typ: NTI10462028, name: "mroot", len: 0, sons: null}, 
"164": {kind: 1, offset: 164, typ: NTI10462028, name: "mrow", len: 0, sons: null}, 
"165": {kind: 1, offset: 165, typ: NTI10462028, name: "ms", len: 0, sons: null}, 
"166": {kind: 1, offset: 166, typ: NTI10462028, name: "mspace", len: 0, sons: null}, 
"167": {kind: 1, offset: 167, typ: NTI10462028, name: "msqrt", len: 0, sons: null}, 
"168": {kind: 1, offset: 168, typ: NTI10462028, name: "mstyle", len: 0, sons: null}, 
"169": {kind: 1, offset: 169, typ: NTI10462028, name: "msub", len: 0, sons: null}, 
"170": {kind: 1, offset: 170, typ: NTI10462028, name: "msubsup", len: 0, sons: null}, 
"171": {kind: 1, offset: 171, typ: NTI10462028, name: "msup", len: 0, sons: null}, 
"172": {kind: 1, offset: 172, typ: NTI10462028, name: "mtable", len: 0, sons: null}, 
"173": {kind: 1, offset: 173, typ: NTI10462028, name: "mtd", len: 0, sons: null}, 
"174": {kind: 1, offset: 174, typ: NTI10462028, name: "mtext", len: 0, sons: null}, 
"175": {kind: 1, offset: 175, typ: NTI10462028, name: "mtr", len: 0, sons: null}, 
"176": {kind: 1, offset: 176, typ: NTI10462028, name: "munder", len: 0, sons: null}, 
"177": {kind: 1, offset: 177, typ: NTI10462028, name: "munderover", len: 0, sons: null}, 
"178": {kind: 1, offset: 178, typ: NTI10462028, name: "semantics", len: 0, sons: null}, 
"179": {kind: 1, offset: 179, typ: NTI10462028, name: "table", len: 0, sons: null}, 
"180": {kind: 1, offset: 180, typ: NTI10462028, name: "caption", len: 0, sons: null}, 
"181": {kind: 1, offset: 181, typ: NTI10462028, name: "colgroup", len: 0, sons: null}, 
"182": {kind: 1, offset: 182, typ: NTI10462028, name: "col", len: 0, sons: null}, 
"183": {kind: 1, offset: 183, typ: NTI10462028, name: "tbody", len: 0, sons: null}, 
"184": {kind: 1, offset: 184, typ: NTI10462028, name: "thead", len: 0, sons: null}, 
"185": {kind: 1, offset: 185, typ: NTI10462028, name: "tfoot", len: 0, sons: null}, 
"186": {kind: 1, offset: 186, typ: NTI10462028, name: "tr", len: 0, sons: null}, 
"187": {kind: 1, offset: 187, typ: NTI10462028, name: "td", len: 0, sons: null}, 
"188": {kind: 1, offset: 188, typ: NTI10462028, name: "th", len: 0, sons: null}, 
"189": {kind: 1, offset: 189, typ: NTI10462028, name: "form", len: 0, sons: null}, 
"190": {kind: 1, offset: 190, typ: NTI10462028, name: "fieldset", len: 0, sons: null}, 
"191": {kind: 1, offset: 191, typ: NTI10462028, name: "legend", len: 0, sons: null}, 
"192": {kind: 1, offset: 192, typ: NTI10462028, name: "label", len: 0, sons: null}, 
"193": {kind: 1, offset: 193, typ: NTI10462028, name: "input", len: 0, sons: null}, 
"194": {kind: 1, offset: 194, typ: NTI10462028, name: "button", len: 0, sons: null}, 
"195": {kind: 1, offset: 195, typ: NTI10462028, name: "select", len: 0, sons: null}, 
"196": {kind: 1, offset: 196, typ: NTI10462028, name: "datalist", len: 0, sons: null}, 
"197": {kind: 1, offset: 197, typ: NTI10462028, name: "optgroup", len: 0, sons: null}, 
"198": {kind: 1, offset: 198, typ: NTI10462028, name: "option", len: 0, sons: null}, 
"199": {kind: 1, offset: 199, typ: NTI10462028, name: "textarea", len: 0, sons: null}, 
"200": {kind: 1, offset: 200, typ: NTI10462028, name: "keygen", len: 0, sons: null}, 
"201": {kind: 1, offset: 201, typ: NTI10462028, name: "output", len: 0, sons: null}, 
"202": {kind: 1, offset: 202, typ: NTI10462028, name: "progress", len: 0, sons: null}, 
"203": {kind: 1, offset: 203, typ: NTI10462028, name: "meter", len: 0, sons: null}, 
"204": {kind: 1, offset: 204, typ: NTI10462028, name: "details", len: 0, sons: null}, 
"205": {kind: 1, offset: 205, typ: NTI10462028, name: "summary", len: 0, sons: null}, 
"206": {kind: 1, offset: 206, typ: NTI10462028, name: "command", len: 0, sons: null}, 
"207": {kind: 1, offset: 207, typ: NTI10462028, name: "menu", len: 0, sons: null}}};
NTI10462028.node = NNI10462028;
NTI10465037.base = NTI10465022;
NTI10465039.base = NTI1188015;
var NNI10462240 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI10462240, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10462240, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10462240, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10462240, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10462240, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10462240, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10462240, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI10462240, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI10462240, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI10462240, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI10462240, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI10462240, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI10462240, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI10462240, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI10462240, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI10462240, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI10462240, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI10462240, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI10462240, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI10462240, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI10462240, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI10462240, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI10462240, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI10462240, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI10462240, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI10462240, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI10462240, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI10462240, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI10462240, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI10462240, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI10462240, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI10462240, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI10462240, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI10462240, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI10462240, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI10462240, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI10462240, name: "onwheel", len: 0, sons: null}}};
NTI10462240.node = NNI10462240;
var NNI10465030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10462240, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10465074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI10465076, name: "Field2", sons: null}]};
NTI10465030.node = NNI10465030;
NTI10465018.base = NTI10465030;
var NNI10416096 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10416096.node = NNI10416096;
NTI10416097.base = NTI10416096;
var NNI10465031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI10462028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI1188044, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI1188015, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1188015, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI10465037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI10465039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI10465018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI10416097, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI1853235, name: "dom", sons: null}]};
NTI10465031.node = NNI10465031;
NTI10465031.base = NTI1194408;
NTI10465022.base = NTI10465031;
var NNI10897209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI10897207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI1853235, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI1853235, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI10465022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI10465022, name: "oldNode", sons: null}]};
NTI10897209.node = NNI10897209;
var NNI10897211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI10465022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI10465022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI1188044, name: "pos", sons: null}]};
NTI10897211.node = NNI10897211;
var NNI2335020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1188044, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188044, name: "b", sons: null}]};
NTI2335020.node = NNI2335020;
var NNI13621265 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI13621261, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI13531015, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2335020, name: "Field2", sons: null}]};
NTI13621265.node = NNI13621265;
NTI13621465.base = NTI13621265;
var NNI1194653 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194653.node = NNI1194653;
NTI1194653.base = NTI1194619;
NTI12885526.base = NTI1188048;
var NNI1194635 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194635.node = NNI1194635;
NTI1194635.base = NTI1194633;
NTI11832408.base = NTI1188050;
var NNI13930217 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI13531015, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2335020, name: "Field1", sons: null}]};
NTI13930217.node = NNI13930217;
var NNI12480107 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10631269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188013, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1188048, name: "Field3", sons: null}]};
NTI12480107.node = NNI12480107;
NTI12480104.base = NTI12480107;
var NNI12480101 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12480104, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI1188044, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI1188044, name: "last", sons: null}]};
NTI12480101.node = NNI12480101;
NTI13531025.base = NTI2335020;
NTI13531021.base = NTI13531025;
var NNI13605359 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "captures", len: 0, typ: NTI13531021, name: "captures", sons: null}, 
{kind: 1, offset: "namedGroups", len: 0, typ: NTI12480101, name: "namedGroups", sons: null}, 
{kind: 1, offset: "boundaries", len: 0, typ: NTI2335020, name: "boundaries", sons: null}]};
NTI13605359.node = NNI13605359;
var NNI1194643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194643.node = NNI1194643;
var NNI1194621 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194621.node = NNI1194621;
NTI1194621.base = NTI1194617;
NTI1194643.base = NTI1194621;
NTI10205029.base = NTI1188011;
var NNI5890011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI5635232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188044, name: "b", sons: null}]};
NTI5890011.node = NNI5890011;
var NNI1194651 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194651.node = NNI1194651;
NTI1194651.base = NTI1194619;
function makeNimstrLit(c_1455062) {
      var ln = c_1455062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1455062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_1455079) {
      var ln = c_1455079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1455079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1455079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function toJSStr(s_1455096) {
                    var Tmp5;
            var Tmp7;

  var result_1455097 = null;

    var res_1455170 = newSeq_1455128((s_1455096).length);
    var i_1455172 = 0;
    var j_1455174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1455172 < (s_1455096).length)) break L2;
          var c_1455175 = s_1455096[i_1455172];
          if ((c_1455175 < 128)) {
          res_1455170[j_1455174] = String.fromCharCode(c_1455175);
          i_1455172 += 1;
          }
          else {
            var helper_1455198 = newSeq_1455128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1455199 = c_1455175.toString(16);
                  if ((((code_1455199) == null ? 0 : (code_1455199).length) == 1)) {
                  helper_1455198.push("%0");;
                  }
                  else {
                  helper_1455198.push("%");;
                  }
                  
                  helper_1455198.push(code_1455199);;
                  i_1455172 += 1;
                    if (((s_1455096).length <= i_1455172)) Tmp5 = true; else {                      Tmp5 = (s_1455096[i_1455172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1455175 = s_1455096[i_1455172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1455170[j_1455174] = decodeURIComponent(helper_1455198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1455170[j_1455174] = helper_1455198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1455174 += 1;
        }
    } while(false);
    if (res_1455170.length < j_1455174) { for (var i=res_1455170.length;i<j_1455174;++i) res_1455170.push(null); }
               else { res_1455170.length = j_1455174; };
    result_1455097 = res_1455170.join("");

  return result_1455097;

}
function raiseException(e_1420218, ename_1420219) {
    e_1420218.name = ename_1420219;
    if ((excHandler == 0)) {
    unhandledException(e_1420218);
    }
    
    throw e_1420218;

  
}
function addInt(a_1460419, b_1460420) {
        var result = a_1460419 + b_1460420;
    checkOverflowInt(result);
    return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1470023, src_1470024, ti_1470025) {
  var result_1475219 = null;

    switch (ti_1470025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_1465401(ti_1470025))) {
      result_1475219 = src_1470024;
      }
      else {
        result_1475219 = [src_1470024[0], src_1470024[1]];
      }
      
      break;
    case 19:
            if (dest_1470023 === null || dest_1470023 === undefined) {
        dest_1470023 = {};
      }
      else {
        for (var key in dest_1470023) { delete dest_1470023[key]; }
      }
      for (var key in src_1470024) { dest_1470023[key] = src_1470024[key]; }
      result_1475219 = dest_1470023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1470025.base == null))) {
      result_1475219 = nimCopy(dest_1470023, src_1470024, ti_1470025.base);
      }
      else {
      if ((ti_1470025.kind == 17)) {
      result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {m_type: ti_1470025} : dest_1470023;
      }
      else {
        result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {} : dest_1470023;
      }
      }
      nimCopyAux(result_1475219, src_1470024, ti_1470025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1470024 === null) {
        result_1475219 = null;
      }
      else {
        if (dest_1470023 === null || dest_1470023 === undefined) {
          dest_1470023 = new Array(src_1470024.length);
        }
        else {
          dest_1470023.length = src_1470024.length;
        }
        result_1475219 = dest_1470023;
        for (var i = 0; i < src_1470024.length; ++i) {
          result_1475219[i] = nimCopy(result_1475219[i], src_1470024[i], ti_1470025.base);
        }
      }
    
      break;
    case 28:
            if (src_1470024 !== null) {
        result_1475219 = src_1470024.slice(0);
      }
    
      break;
    default: 
      result_1475219 = src_1470024;
      break;
    }

  return result_1475219;

}
      var toTag_10465006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "ANIMATE", "ANIMATEMOTION", "ANIMATETRANSFORM", "CIRCLE", "CLIPPATH", "DEFS", "DESC", "DISCARD", "ELLIPSE", "FEBLEND", "FECOLORMATRIX", "FECOMPONENTTRANSFER", "FECOMPOSITE", "FECONVOLVEMATRIX", "FEDIFFUSELIGHTING", "FEDISPLACEMENTMAP", "FEDISTANTLIGHT", "FEDROPSHADOW", "FEFLOOD", "FEFUNCA", "FEFUNCB", "FEFUNCG", "FEFUNCR", "FEGAUSSIANBLUR", "FEIMAGE", "FEMERGE", "FEMERGENODE", "FEMORPHOLOGY", "FEOFFSET", "FEPOINTLIGHT", "FESPECULARLIGHTING", "FESPOTLIGHT", "FETILE", "FETURBULENCE", "FILTER", "FOREIGNOBJECT", "G", "IMAGE", "LINE", "LINEARGRADIENT", "MARKER", "MASK", "METADATA", "MPATH", "PATH", "PATTERN", "POLYGON", "POLYLINE", "RADIALGRADIENT", "RECT", "SET", "STOP", "SVG", "SWITCH", "SYMBOL", "TEXT", "TEXTPATH", "TSPAN", "UNKNOWN", "USE", "VIEW", "MACTION", "MATH", "MENCLOSE", "MERROR", "MFENCED", "MFRAC", "MGLYPH", "MI", "MLABELEDTR", "MMULTISCRIPTS", "MN", "MO", "MOVER", "MPADDED", "MPHANTOM", "MROOT", "MROW", "MS", "MSPACE", "MSQRT", "MSTYLE", "MSUB", "MSUBSUP", "MSUP", "MTABLE", "MTD", "MTEXT", "MTR", "MUNDER", "MUNDEROVER", "SEMANTICS", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
function chckIndx(i_1480086, a_1480087, b_1480088) {
      var Tmp1;

  var result_1480089 = 0;

  BeforeRet: do {
      if (!(a_1480087 <= i_1480086)) Tmp1 = false; else {        Tmp1 = (i_1480086 <= b_1480088);      }    if (Tmp1) {
    result_1480089 = i_1480086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1480086, a_1480087, b_1480088);
    }
    
  } while (false);

  return result_1480089;

}
function subInt(a_1460437, b_1460438) {
        var result = a_1460437 - b_1460438;
    checkOverflowInt(result);
    return result;
  

  
}
      var toEventName_10465012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];
function nimMin(a_1460803, b_1460804) {
    var Tmp1;

  var result_1460805 = 0;

  BeforeRet: do {
    if ((a_1460803 <= b_1460804)) {
    Tmp1 = a_1460803;
    }
    else {
    Tmp1 = b_1460804;
    }
    
    result_1460805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460805;

}
              var linkDefinitionRe_17413641 = {nfa: [{kind: 44, cp: 35, next: [1], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 0, cp: 91, next: [2], isGreedy: false, uid: 3, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 26, cp: 46, next: [3, 2], isGreedy: false, uid: 4, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 0, cp: 93, next: [4], isGreedy: false, uid: 6, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 0, cp: 58, next: [5], isGreedy: false, uid: 8, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 0, cp: 32, next: [6], isGreedy: false, uid: 9, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 26, cp: 46, next: [6, 7], isGreedy: false, uid: 11, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 45, cp: 35, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], transitions: {allZ: [[0], [-1], [-1, -1], [1], [-1], [2], [-1, 3], []], z: [[{kind: 12, cp: 94, next: [6], isGreedy: false, uid: 1, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 3, cp: 40, next: [2], isGreedy: false, uid: 2, idx: 0, isCapturing: true, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], [{kind: 4, cp: 41, next: [8], isGreedy: false, uid: 7, idx: 0, isCapturing: true, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], [{kind: 3, cp: 40, next: [10], isGreedy: false, uid: 10, idx: 1, isCapturing: true, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], [{kind: 4, cp: 41, next: [14], isGreedy: false, uid: 13, idx: 1, isCapturing: true, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 13, cp: 36, next: [0], isGreedy: false, uid: 14, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}]]}, groupsCount: 2, namedGroups: {data: [{Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}], counter: 0, first: -1, last: -1}, litOpt: {lit: 91, nfa: [{kind: 44, cp: 35, next: [1], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 45, cp: 35, next: [], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], tns: {allZ: [[0], []], z: [[{kind: 3, cp: 40, next: [1], isGreedy: true, uid: 2, idx: 0, isCapturing: true, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 12, cp: 94, next: [0], isGreedy: true, uid: 1, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}]]}}};
function chckRange(i_1485016, a_1485017, b_1485018) {
      var Tmp1;

  var result_1485019 = 0;

  BeforeRet: do {
      if (!(a_1485017 <= i_1485016)) Tmp1 = false; else {        Tmp1 = (i_1485016 <= b_1485018);      }    if (Tmp1) {
    result_1485019 = i_1485016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1485019;

}
function nimMax(a_1460821, b_1460822) {
    var Tmp1;

  var result_1460823 = 0;

  BeforeRet: do {
    if ((b_1460822 <= a_1460821)) {
    Tmp1 = a_1460821;
    }
    else {
    Tmp1 = b_1460822;
    }
    
    result_1460823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460823;

}
function mulInt(a_1460455, b_1460456) {
        var result = a_1460455 * b_1460456;
    checkOverflowInt(result);
    return result;
  

  
}
    var typesOffsets_13116675 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30, 31, 32, 33, 34, 12, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 12, 62, 63, 64, 12, 12, 12, 12, 12, 65, 66, 67, 68, 69, 70, 71, 72, 12, 12, 12, 12, 12, 12, 12, 12, 73, 74, 75, 76, 77, 12, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 12, 91, 92, 93, 94, 95, 96, 97, 98, 98, 98, 99, 100, 100, 101, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 114, 115, 116, 113, 113, 113, 113, 113, 113, 113, 113, 113, 117, 118, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 119, 120, 100, 121, 122, 123, 124, 125, 126, 113, 113, 113, 113, 113, 113, 113, 127, 72, 128, 129, 130, 12, 131, 132, 133, 134, 135, 113, 113, 113, 113, 113, 136, 12, 137, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 138, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 139, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 113, 140, 141, 142, 143, 139, 144, 12, 12, 12, 12, 12, 12, 145, 146, 12, 12, 12, 12, 12, 12, 12, 147, 12, 148, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 149, 12, 12, 12, 12, 12, 12, 12, 150, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 151, 12, 152, 153, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 154, 12, 155, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 156, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 157, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 158, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 154, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 157, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 159, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 160, 12, 144, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 161, 162, 12, 163, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 164, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 165, 166, 12, 12, 12, 12, 167, 168, 169, 170, 171, 172, 173, 174, 175, 93, 12, 176, 177, 178, 12, 179, 180, 181, 12, 182, 183, 184, 98, 185, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 186, 187, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 188, 189, 190, 12, 191, 12, 192, 193, 194, 29, 195, 12, 12, 12, 12, 196, 27, 197, 198, 199, 200, 12, 164, 201, 202, 203, 204, 205, 206, 12, 207, 208, 209, 210, 211, 113, 113, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 113, 113, 12, 12, 12, 12, 180, 224, 113, 113, 225, 226, 227, 228, 229, 113, 230, 231, 232, 233, 234, 235, 82, 236, 237, 113, 12, 238, 239, 240, 241, 113, 113, 113, 113, 242, 243, 113, 244, 245, 132, 246, 12, 247, 207, 248, 249, 250, 12, 251, 252, 113, 253, 254, 255, 256, 113, 113, 12, 257, 12, 258, 113, 113, 259, 260, 12, 261, 80, 262, 263, 113, 113, 113, 207, 113, 264, 265, 266, 267, 268, 269, 203, 270, 271, 80, 113, 113, 113, 113, 272, 273, 274, 113, 275, 276, 277, 113, 113, 113, 113, 278, 113, 113, 279, 280, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 192, 113, 281, 282, 12, 12, 12, 283, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 284, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 12, 12, 12, 12, 12, 12, 12, 285, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 12, 12, 12, 12, 12, 12, 80, 286, 113, 287, 180, 288, 289, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 290, 291, 113, 12, 292, 293, 294, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 94, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 295, 238, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 12, 12, 296, 297, 12, 12, 12, 12, 12, 298, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 299, 300, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 301, 302, 113, 113, 303, 113, 304, 113, 305, 113, 113, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 113, 113, 113, 113, 113, 113, 113, 113, 322, 323, 324, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 325, 113, 113, 113, 326, 327, 113, 113, 113, 113, 113, 328, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 12, 329, 330, 331, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 332, 333, 113, 334, 113, 113, 113, 335, 336, 337, 113, 113, 113, 113, 113, 113, 113, 113, 113, 338, 339, 340, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 341, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 342, 343, 12, 344, 161, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 138, 12, 345, 12, 12, 12, 12, 346, 347, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 348, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 349, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 149, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 350, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 351, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 352, 12, 12, 12, 216, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 353, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 354, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 348, 12, 12, 12, 12, 12, 351, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 355, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 12, 12, 12, 356, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113];
function divInt(a_1460473, b_1460474) {
        if (b_1460474 == 0) raiseDivByZero();
    if (b_1460474 == -1 && a_1460473 == 2147483647) raiseOverflow();
    return Math.trunc(a_1460473 / b_1460474);
  

  
}
    var typesIndices_13116678 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 4, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 5, 0, 0, 0, 6, 5, 0, 7, 7, 7, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 3, 5, 5, 5, 3, 3, 5, 3, 5, 3, 3, 5, 3, 3, 3, 5, 5, 3, 3, 3, 3, 5, 3, 3, 5, 3, 3, 3, 5, 5, 5, 3, 3, 5, 3, 3, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 5, 3, 5, 3, 3, 5, 3, 3, 3, 5, 3, 5, 3, 3, 5, 5, 4, 3, 5, 5, 5, 4, 4, 4, 4, 3, 8, 5, 3, 8, 5, 3, 8, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 8, 5, 3, 5, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 3, 3, 5, 3, 3, 5, 5, 3, 5, 3, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5, 5, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 5, 3, 5, 4, 0, 3, 5, 0, 0, 5, 5, 5, 5, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 3, 0, 3, 0, 3, 3, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 3, 3, 3, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 3, 5, 0, 3, 5, 3, 3, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 0, 4, 4, 4, 4, 4, 4, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 0, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 0, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 4, 0, 4, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 0, 4, 4, 0, 0, 4, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 4, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 0, 4, 0, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 4, 0, 4, 0, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 9, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 3, 0, 3, 0, 3, 0, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 0, 5, 5, 3, 3, 3, 3, 8, 0, 5, 0, 0, 0, 5, 5, 5, 0, 5, 5, 3, 3, 3, 3, 8, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 5, 3, 3, 3, 3, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 5, 5, 5, 0, 5, 5, 3, 3, 3, 3, 8, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 5, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 5, 3, 3, 3, 5, 5, 3, 3, 3, 5, 0, 3, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 3, 0, 3, 3, 3, 3, 0, 5, 3, 3, 3, 3, 5, 4, 4, 4, 4, 5, 0, 0, 5, 5, 3, 3, 0, 0, 0, 0, 0, 3, 5, 5, 5, 5, 0, 0, 0, 0, 5, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 9, 9, 9, 3, 5, 9, 9, 9, 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 3, 5, 3, 3, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 3, 3, 3, 5, 3, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 0, 0, 0, 0, 0, 0, 3, 5, 3, 5, 4, 4, 4, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 4, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 9, 9, 9, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 9, 4, 4, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 9, 9, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 4, 0, 0, 3, 5, 3, 5, 4, 3, 5, 3, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 3, 3, 3, 3, 5, 3, 3, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 0, 0, 3, 5, 3, 3, 3, 3, 5, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 0, 0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 4, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 9, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 7, 7, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 4, 6, 6, 6, 6, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 0, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 0, 4, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 0, 3, 3, 0, 0, 3, 0, 0, 3, 3, 0, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 0, 5, 0, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 0, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 0, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 5, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 0, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 4, 0, 4, 0, 4, 4, 4, 0, 4, 4, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 4, 0, 4, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
function modInt(a_1460491, b_1460492) {
        if (b_1460492 == 0) raiseDivByZero();
    if (b_1460492 == -1 && a_1460491 == 2147483647) raiseOverflow();
    return Math.trunc(a_1460491 % b_1460492);
  

  
}
    var typesData_13116689 = [0, 64, 129, 176, 128, 168, 2, 4, 160, 132, 180, 172];
    var toLowerRanges_3455223 = [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534];
    var toLowerSinglets_3456470 = [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884];
    var toUpperRanges_3456615 = [97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466];
    var toUpperSinglets_3457879 = [181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428];
    var propsOffsets_11824946 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 41, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 101, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 102, 103, 41, 41, 41, 41, 41, 41, 41, 41, 104, 41, 41, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 118, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 121, 121, 122, 123, 124, 125, 126, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 137, 41, 41, 144, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 137, 168, 169, 137, 170, 171, 172, 173, 137, 174, 175, 176, 177, 178, 179, 137, 137, 180, 181, 182, 183, 137, 184, 137, 185, 41, 41, 41, 41, 41, 41, 41, 186, 187, 41, 188, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 41, 41, 41, 41, 41, 41, 41, 41, 189, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 41, 41, 41, 41, 190, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 41, 41, 41, 41, 191, 192, 193, 194, 137, 137, 137, 137, 195, 196, 197, 198, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 199, 41, 41, 41, 41, 41, 41, 41, 41, 41, 200, 201, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 41, 41, 202, 41, 41, 203, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 204, 205, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 78, 206, 207, 208, 209, 210, 211, 137, 212, 213, 214, 215, 216, 217, 218, 219, 78, 78, 78, 78, 220, 221, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 222, 137, 223, 137, 137, 224, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 225, 226, 227, 156, 156, 156, 156, 156, 228, 229, 230, 156, 231, 232, 156, 156, 233, 234, 235, 236, 237, 137, 72, 238, 72, 72, 72, 72, 72, 239, 240, 241, 242, 243, 244, 245, 246, 247, 72, 248, 137, 137, 137, 137, 137, 137, 137, 249, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 250, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 251, 41, 252, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 253, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 254, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 121, 121, 121, 121, 255, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 256, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 257, 258, 259, 260, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 249, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 261, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 261];
    var propsIndices_11832406 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 4, 5, 5, 6, 7, 6, 5, 5, 8, 9, 5, 10, 11, 12, 11, 11, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 5, 14, 14, 14, 5, 5, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 8, 5, 9, 16, 17, 16, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 14, 9, 14, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 5, 7, 7, 7, 7, 20, 5, 21, 20, 22, 23, 14, 24, 20, 21, 25, 26, 27, 27, 21, 28, 5, 5, 21, 27, 22, 29, 30, 30, 30, 5, 31, 31, 31, 31, 31, 31, 15, 31, 31, 31, 31, 31, 31, 31, 31, 31, 15, 31, 31, 31, 31, 31, 31, 14, 15, 31, 31, 31, 31, 31, 15, 18, 32, 32, 32, 32, 32, 32, 18, 32, 32, 32, 32, 32, 32, 32, 32, 32, 18, 32, 32, 32, 32, 32, 32, 14, 18, 32, 32, 32, 32, 32, 18, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 18, 33, 28, 31, 32, 31, 32, 18, 31, 32, 31, 32, 31, 32, 33, 28, 15, 18, 31, 32, 31, 32, 31, 32, 28, 15, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 31, 32, 31, 32, 31, 32, 28, 18, 15, 15, 18, 15, 18, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 15, 15, 18, 15, 15, 15, 18, 18, 18, 15, 15, 18, 15, 31, 32, 15, 18, 15, 18, 15, 15, 18, 15, 18, 18, 15, 18, 15, 31, 32, 15, 15, 15, 18, 15, 18, 15, 15, 18, 18, 34, 15, 18, 18, 18, 34, 34, 34, 34, 33, 35, 28, 33, 35, 28, 33, 35, 28, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 32, 33, 35, 28, 31, 32, 15, 15, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 15, 18, 15, 18, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 15, 18, 18, 15, 18, 15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 34, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 38, 38, 38, 38, 38, 38, 38, 16, 16, 16, 16, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 16, 16, 16, 16, 16, 16, 21, 21, 21, 21, 21, 21, 16, 16, 36, 36, 36, 36, 36, 16, 16, 16, 16, 16, 16, 16, 37, 16, 38, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 39, 39, 39, 39, 39, 40, 39, 39, 39, 39, 39, 39, 39, 40, 40, 39, 40, 39, 40, 39, 39, 41, 42, 42, 42, 42, 41, 43, 42, 42, 42, 42, 42, 44, 44, 45, 45, 45, 45, 46, 46, 42, 42, 42, 42, 45, 45, 42, 45, 45, 42, 42, 47, 47, 47, 47, 48, 42, 42, 42, 42, 40, 40, 40, 49, 49, 39, 49, 49, 50, 40, 42, 42, 42, 40, 40, 40, 42, 42, 51, 40, 40, 40, 42, 42, 42, 42, 40, 41, 42, 42, 40, 52, 53, 53, 52, 53, 53, 52, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 18, 15, 18, 54, 16, 15, 18, 55, 55, 36, 18, 18, 18, 56, 15, 55, 55, 55, 55, 21, 57, 31, 56, 31, 31, 31, 55, 31, 55, 31, 31, 32, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 15, 15, 15, 15, 15, 15, 15, 31, 31, 32, 32, 32, 32, 32, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 32, 32, 32, 32, 32, 15, 28, 28, 33, 58, 58, 28, 28, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 28, 28, 28, 18, 33, 28, 14, 15, 18, 33, 15, 18, 18, 15, 15, 15, 31, 31, 15, 31, 15, 15, 15, 31, 15, 15, 15, 15, 31, 31, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 32, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 32, 32, 18, 32, 18, 18, 18, 32, 18, 18, 18, 18, 32, 32, 32, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 31, 32, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 59, 40, 40, 40, 40, 40, 60, 60, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 31, 32, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 31, 32, 31, 32, 15, 18, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 38, 61, 61, 61, 61, 61, 61, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 28, 18, 61, 62, 55, 55, 20, 20, 7, 63, 42, 40, 40, 40, 40, 42, 40, 40, 40, 64, 42, 40, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 40, 40, 42, 40, 40, 64, 65, 40, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 75, 76, 77, 78, 79, 80, 81, 82, 83, 81, 40, 42, 81, 74, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 84, 84, 84, 84, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 85, 85, 85, 85, 85, 85, 14, 14, 86, 6, 6, 87, 11, 88, 20, 20, 40, 40, 40, 40, 40, 40, 40, 40, 89, 90, 91, 88, 92, 93, 88, 88, 94, 94, 95, 95, 95, 95, 95, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 96, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 97, 98, 99, 89, 90, 91, 100, 101, 39, 39, 45, 42, 40, 40, 40, 40, 40, 42, 40, 40, 42, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 6, 103, 103, 88, 94, 94, 104, 94, 94, 94, 94, 105, 105, 105, 105, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 94, 95, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 88, 94, 40, 40, 40, 40, 40, 40, 40, 85, 20, 40, 40, 40, 40, 42, 40, 96, 96, 40, 40, 20, 42, 40, 40, 42, 94, 94, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 94, 94, 94, 106, 106, 94, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 93, 92, 94, 107, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 40, 42, 40, 40, 42, 40, 40, 42, 42, 42, 40, 42, 42, 40, 42, 40, 40, 40, 42, 40, 42, 40, 42, 40, 42, 40, 40, 93, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 94, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 40, 40, 40, 40, 40, 40, 40, 42, 40, 109, 109, 20, 5, 5, 5, 109, 63, 63, 42, 110, 110, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 40, 40, 40, 40, 109, 40, 40, 40, 40, 40, 40, 40, 40, 40, 109, 40, 40, 40, 109, 40, 40, 40, 40, 40, 63, 63, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 42, 42, 42, 63, 63, 81, 63, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 93, 93, 93, 93, 93, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 42, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 85, 42, 40, 40, 42, 40, 40, 42, 40, 40, 40, 42, 42, 42, 97, 98, 99, 40, 40, 40, 42, 40, 40, 42, 42, 40, 40, 40, 40, 40, 51, 51, 51, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 34, 34, 34, 34, 34, 34, 112, 34, 34, 112, 34, 34, 34, 34, 34, 51, 111, 113, 34, 111, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 111, 111, 111, 111, 114, 111, 111, 34, 40, 42, 40, 40, 51, 51, 51, 115, 115, 115, 115, 115, 115, 115, 115, 34, 34, 51, 51, 61, 61, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 61, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 111, 111, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 55, 55, 34, 34, 34, 34, 55, 55, 117, 34, 118, 111, 111, 51, 51, 51, 51, 55, 55, 111, 111, 55, 55, 119, 119, 114, 34, 55, 55, 55, 55, 55, 55, 55, 55, 118, 55, 55, 55, 55, 115, 115, 55, 115, 34, 34, 51, 51, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 7, 7, 120, 120, 120, 120, 120, 120, 59, 7, 34, 61, 40, 55, 55, 51, 51, 111, 55, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 115, 55, 34, 115, 55, 34, 34, 55, 55, 117, 55, 111, 111, 111, 51, 51, 55, 55, 55, 55, 51, 51, 55, 55, 51, 51, 114, 55, 55, 55, 51, 55, 55, 55, 55, 55, 55, 55, 115, 115, 115, 34, 55, 115, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 51, 51, 34, 34, 34, 51, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 111, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 55, 55, 117, 34, 111, 111, 111, 51, 51, 51, 51, 51, 55, 51, 51, 111, 55, 111, 111, 114, 55, 55, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 51, 51, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 61, 7, 55, 55, 55, 55, 55, 55, 55, 34, 51, 51, 51, 51, 51, 51, 55, 51, 111, 111, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 55, 55, 117, 34, 118, 51, 111, 51, 51, 51, 51, 55, 55, 111, 119, 55, 55, 119, 119, 114, 55, 55, 55, 55, 55, 55, 55, 51, 121, 118, 55, 55, 55, 55, 115, 115, 55, 34, 34, 34, 51, 51, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 59, 34, 120, 120, 120, 120, 120, 120, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 34, 55, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 55, 34, 34, 112, 34, 55, 55, 55, 34, 34, 55, 34, 55, 34, 34, 55, 55, 55, 34, 34, 55, 55, 55, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 118, 111, 51, 111, 111, 55, 55, 55, 111, 111, 111, 55, 119, 119, 119, 114, 55, 55, 34, 55, 55, 55, 55, 55, 55, 118, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 120, 120, 120, 20, 20, 20, 20, 20, 20, 7, 20, 55, 55, 55, 55, 55, 51, 111, 111, 111, 51, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 51, 51, 51, 111, 111, 111, 111, 55, 51, 51, 122, 55, 51, 51, 51, 114, 55, 55, 55, 55, 55, 55, 55, 123, 124, 55, 34, 34, 34, 55, 55, 55, 55, 55, 34, 34, 51, 51, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 61, 125, 125, 125, 125, 125, 125, 125, 59, 34, 51, 111, 111, 61, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 55, 55, 117, 34, 111, 126, 119, 111, 118, 111, 111, 55, 126, 119, 119, 55, 119, 119, 51, 114, 55, 55, 55, 55, 55, 55, 55, 118, 118, 55, 55, 55, 55, 55, 55, 55, 34, 55, 34, 34, 51, 51, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 111, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 114, 114, 34, 118, 111, 111, 51, 51, 51, 51, 55, 111, 111, 111, 55, 119, 119, 119, 114, 34, 59, 55, 55, 55, 55, 34, 34, 34, 118, 120, 120, 120, 120, 120, 120, 120, 34, 34, 34, 51, 51, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 120, 120, 120, 120, 120, 120, 120, 120, 120, 59, 34, 34, 34, 34, 34, 34, 55, 51, 111, 111, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 127, 55, 55, 55, 55, 118, 111, 111, 51, 51, 51, 55, 51, 55, 111, 111, 119, 111, 119, 119, 119, 118, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 111, 111, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 34, 22, 51, 51, 51, 51, 128, 128, 114, 55, 55, 55, 55, 7, 34, 34, 34, 34, 34, 34, 38, 51, 129, 129, 129, 129, 51, 51, 51, 61, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 55, 34, 55, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 34, 22, 51, 51, 51, 51, 130, 130, 114, 51, 51, 34, 55, 55, 34, 34, 34, 34, 34, 55, 38, 55, 131, 131, 131, 131, 51, 51, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 22, 22, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 59, 59, 59, 61, 61, 61, 61, 61, 61, 61, 61, 132, 61, 61, 61, 61, 61, 61, 59, 61, 59, 59, 59, 42, 42, 59, 59, 59, 59, 59, 59, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 59, 42, 59, 42, 59, 133, 8, 9, 8, 9, 111, 111, 34, 34, 34, 115, 34, 34, 34, 34, 55, 34, 34, 34, 34, 115, 34, 34, 34, 34, 115, 34, 34, 34, 34, 115, 34, 34, 34, 34, 115, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 115, 34, 34, 34, 55, 55, 55, 55, 134, 135, 136, 137, 136, 136, 138, 136, 138, 135, 135, 135, 135, 51, 111, 135, 136, 40, 40, 114, 61, 40, 40, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 136, 51, 51, 51, 51, 55, 51, 51, 51, 51, 136, 51, 51, 51, 51, 136, 51, 51, 51, 51, 136, 51, 51, 51, 51, 136, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 136, 51, 51, 51, 55, 59, 59, 59, 59, 59, 59, 59, 59, 42, 59, 59, 59, 59, 59, 59, 55, 59, 59, 61, 61, 61, 61, 61, 59, 59, 59, 59, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 34, 34, 34, 111, 111, 51, 121, 51, 51, 111, 51, 51, 51, 51, 51, 117, 111, 114, 114, 111, 111, 51, 51, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 61, 61, 61, 61, 61, 61, 34, 34, 34, 34, 34, 34, 111, 111, 51, 51, 34, 34, 34, 34, 51, 51, 51, 34, 111, 111, 111, 34, 34, 111, 111, 111, 111, 111, 111, 111, 34, 34, 34, 51, 51, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 111, 111, 51, 51, 111, 111, 111, 111, 111, 111, 42, 34, 111, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 111, 111, 111, 51, 59, 59, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 15, 55, 55, 55, 55, 55, 15, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 61, 36, 18, 18, 18, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 40, 40, 40, 61, 61, 61, 61, 61, 61, 61, 61, 61, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 18, 18, 18, 18, 18, 18, 55, 55, 62, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 59, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 4, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 8, 9, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 61, 61, 61, 140, 140, 140, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 51, 51, 114, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 114, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 111, 51, 51, 51, 51, 51, 51, 51, 111, 111, 111, 111, 111, 111, 111, 111, 51, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 51, 114, 51, 61, 61, 61, 38, 61, 61, 61, 7, 34, 40, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 55, 55, 55, 55, 55, 55, 5, 5, 5, 5, 5, 5, 62, 5, 5, 5, 5, 51, 51, 51, 24, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 65, 34, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 51, 51, 51, 111, 111, 111, 111, 51, 51, 111, 111, 111, 55, 55, 55, 55, 111, 111, 51, 111, 111, 111, 111, 111, 111, 64, 40, 42, 55, 55, 55, 55, 20, 55, 55, 55, 5, 5, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 120, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 42, 111, 111, 51, 55, 55, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 51, 111, 51, 51, 51, 51, 51, 51, 51, 55, 114, 111, 51, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 111, 111, 111, 111, 111, 111, 51, 51, 40, 40, 40, 40, 40, 40, 40, 40, 55, 55, 42, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 61, 61, 61, 61, 61, 61, 61, 38, 61, 61, 61, 61, 61, 61, 55, 55, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 40, 40, 42, 60, 42, 42, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 51, 51, 111, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 34, 34, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 117, 118, 51, 51, 51, 51, 51, 119, 51, 119, 111, 111, 119, 119, 51, 119, 141, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 61, 61, 61, 61, 61, 61, 61, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 40, 42, 40, 40, 40, 40, 40, 40, 40, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 55, 55, 51, 51, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 51, 51, 51, 51, 111, 111, 51, 51, 141, 114, 51, 51, 34, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 117, 111, 51, 51, 111, 111, 111, 51, 111, 51, 51, 51, 141, 141, 55, 55, 55, 55, 55, 55, 55, 55, 61, 61, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 111, 111, 111, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 111, 111, 51, 117, 55, 55, 55, 61, 61, 61, 61, 61, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 34, 34, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 38, 38, 38, 38, 38, 61, 61, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 15, 15, 15, 61, 61, 61, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 40, 40, 40, 61, 47, 42, 42, 42, 42, 42, 40, 40, 42, 42, 42, 42, 40, 111, 47, 47, 47, 47, 47, 47, 47, 34, 34, 34, 34, 42, 34, 34, 34, 34, 34, 34, 40, 34, 34, 111, 40, 40, 34, 55, 55, 55, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 40, 40, 42, 40, 40, 40, 40, 40, 40, 40, 42, 40, 40, 53, 142, 42, 44, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 65, 65, 42, 55, 40, 52, 42, 40, 42, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 32, 32, 32, 32, 28, 143, 18, 18, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 15, 18, 15, 18, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 55, 55, 31, 31, 31, 31, 31, 31, 55, 55, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 55, 55, 31, 31, 31, 31, 31, 31, 55, 55, 32, 32, 32, 32, 32, 32, 32, 32, 55, 31, 55, 31, 55, 31, 55, 31, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 144, 32, 144, 32, 144, 32, 144, 32, 144, 32, 144, 32, 144, 55, 55, 32, 32, 32, 32, 32, 32, 32, 32, 145, 145, 145, 145, 145, 145, 145, 145, 32, 32, 32, 32, 32, 32, 32, 32, 145, 145, 145, 145, 145, 145, 145, 145, 32, 32, 32, 32, 32, 32, 32, 32, 145, 145, 145, 145, 145, 145, 145, 145, 32, 32, 32, 32, 32, 55, 32, 32, 31, 31, 31, 146, 145, 21, 144, 21, 21, 57, 32, 32, 32, 55, 32, 32, 31, 146, 31, 146, 145, 57, 57, 57, 32, 32, 32, 144, 55, 55, 32, 32, 31, 31, 31, 146, 55, 57, 57, 57, 32, 32, 32, 144, 32, 32, 32, 32, 31, 31, 31, 146, 31, 57, 147, 147, 55, 55, 32, 32, 32, 55, 32, 32, 31, 146, 31, 146, 145, 147, 21, 55, 148, 148, 149, 149, 149, 149, 149, 149, 149, 149, 149, 24, 24, 24, 150, 151, 62, 152, 62, 62, 62, 62, 5, 153, 23, 29, 8, 23, 23, 29, 8, 23, 5, 5, 5, 5, 153, 153, 153, 5, 154, 155, 156, 157, 158, 159, 160, 19, 6, 6, 6, 161, 161, 5, 153, 153, 5, 23, 29, 5, 153, 5, 153, 17, 17, 5, 5, 5, 162, 8, 9, 153, 153, 153, 5, 5, 5, 5, 5, 5, 5, 5, 14, 5, 17, 5, 5, 153, 5, 5, 5, 5, 5, 5, 5, 149, 24, 24, 24, 24, 24, 163, 164, 165, 166, 167, 24, 24, 24, 24, 24, 24, 27, 36, 55, 55, 27, 27, 27, 27, 27, 27, 168, 168, 169, 170, 171, 36, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 168, 168, 169, 170, 171, 55, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 55, 55, 55, 7, 7, 7, 7, 7, 7, 7, 7, 172, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 40, 40, 47, 47, 40, 40, 40, 40, 47, 47, 47, 40, 40, 60, 60, 60, 60, 40, 60, 60, 60, 47, 47, 40, 42, 40, 47, 47, 42, 42, 42, 42, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 174, 174, 33, 174, 20, 174, 174, 33, 20, 174, 28, 33, 33, 33, 28, 28, 33, 33, 33, 28, 20, 33, 174, 20, 14, 33, 33, 33, 33, 33, 20, 20, 174, 174, 174, 20, 33, 20, 146, 20, 33, 20, 146, 146, 33, 33, 25, 28, 33, 33, 15, 33, 28, 22, 22, 22, 22, 28, 20, 174, 28, 28, 33, 33, 169, 14, 14, 14, 14, 33, 28, 28, 28, 28, 20, 14, 20, 20, 18, 59, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 140, 140, 140, 15, 18, 140, 140, 140, 140, 30, 20, 20, 55, 55, 55, 55, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 176, 176, 20, 20, 20, 20, 14, 20, 20, 14, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 176, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 177, 176, 176, 20, 20, 14, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 176, 14, 14, 14, 14, 176, 14, 14, 176, 14, 14, 14, 14, 14, 10, 26, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 176, 14, 176, 14, 14, 14, 14, 14, 169, 169, 14, 169, 169, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 176, 14, 14, 176, 14, 14, 176, 14, 176, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 176, 14, 176, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 176, 176, 176, 176, 176, 14, 14, 176, 176, 14, 14, 176, 176, 14, 14, 14, 14, 14, 14, 176, 176, 14, 14, 176, 176, 14, 14, 176, 176, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 176, 176, 176, 176, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 176, 176, 176, 176, 14, 14, 14, 14, 14, 14, 176, 176, 176, 176, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 8, 9, 8, 9, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 20, 20, 20, 20, 20, 20, 20, 178, 179, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 59, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 30, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 59, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 169, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 169, 169, 169, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 181, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 15, 18, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 15, 15, 18, 15, 18, 18, 15, 18, 18, 18, 18, 18, 18, 36, 36, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 20, 20, 20, 20, 20, 20, 15, 18, 15, 18, 40, 40, 40, 15, 18, 55, 55, 55, 55, 55, 5, 5, 5, 5, 125, 5, 5, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 18, 55, 55, 55, 55, 55, 18, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 36, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 114, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 5, 5, 23, 29, 23, 29, 5, 5, 5, 23, 29, 5, 23, 29, 5, 5, 5, 5, 5, 5, 5, 5, 5, 62, 5, 5, 62, 5, 23, 29, 5, 5, 23, 29, 8, 9, 8, 9, 8, 9, 8, 9, 5, 5, 5, 5, 5, 37, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 62, 62, 5, 5, 5, 5, 62, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 20, 20, 5, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 174, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 174, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 149, 5, 5, 5, 20, 38, 34, 140, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 20, 20, 8, 9, 8, 9, 8, 9, 8, 9, 62, 8, 9, 9, 20, 140, 140, 140, 140, 140, 140, 140, 140, 140, 182, 65, 41, 64, 183, 183, 62, 38, 38, 38, 38, 38, 174, 20, 175, 175, 175, 38, 34, 5, 20, 20, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 34, 112, 34, 112, 34, 112, 34, 34, 34, 34, 34, 34, 112, 112, 34, 112, 112, 34, 112, 112, 34, 112, 112, 34, 112, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 34, 55, 55, 184, 184, 21, 21, 38, 185, 22, 62, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 112, 34, 34, 112, 34, 112, 34, 112, 34, 34, 34, 34, 34, 34, 112, 112, 34, 112, 112, 34, 112, 112, 34, 112, 112, 34, 112, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 34, 112, 112, 112, 112, 5, 38, 38, 185, 22, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 55, 59, 59, 186, 186, 186, 186, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 174, 174, 55, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 120, 120, 120, 120, 120, 120, 120, 120, 174, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 174, 174, 174, 59, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 174, 174, 174, 174, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 174, 174, 174, 174, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 174, 174, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 174, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 38, 38, 38, 38, 38, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 5, 5, 5, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 34, 40, 60, 60, 60, 5, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 5, 37, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 36, 36, 40, 40, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 40, 40, 61, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 37, 37, 37, 37, 37, 37, 37, 37, 37, 16, 16, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 36, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 37, 187, 187, 15, 18, 15, 18, 34, 15, 18, 15, 18, 18, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 55, 55, 15, 18, 15, 15, 15, 15, 18, 15, 18, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 18, 34, 36, 36, 18, 34, 34, 34, 34, 34, 34, 34, 51, 34, 34, 34, 114, 34, 34, 34, 34, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 51, 51, 111, 20, 20, 20, 20, 114, 55, 55, 55, 120, 120, 120, 120, 120, 120, 59, 59, 7, 25, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 5, 5, 5, 5, 55, 55, 55, 55, 55, 55, 55, 55, 111, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 114, 51, 55, 55, 55, 55, 55, 55, 55, 55, 61, 61, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 34, 34, 34, 34, 34, 34, 61, 61, 61, 34, 61, 34, 34, 51, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 42, 42, 42, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 111, 141, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 51, 51, 51, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 117, 111, 111, 51, 51, 51, 51, 111, 111, 51, 51, 111, 111, 141, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 55, 38, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 61, 61, 34, 34, 34, 34, 34, 51, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 111, 111, 51, 51, 111, 111, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 51, 34, 34, 34, 34, 34, 34, 34, 34, 51, 111, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 61, 61, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 59, 59, 59, 34, 111, 51, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 34, 40, 40, 42, 34, 34, 40, 40, 34, 34, 34, 34, 34, 40, 40, 34, 40, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 38, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 51, 51, 111, 111, 61, 61, 34, 38, 38, 111, 114, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 187, 36, 36, 36, 36, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 16, 16, 55, 55, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 51, 111, 111, 51, 111, 111, 61, 111, 114, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 34, 34, 115, 34, 115, 34, 34, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 34, 115, 34, 115, 34, 34, 115, 115, 34, 34, 34, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 55, 55, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 28, 28, 28, 28, 28, 28, 28, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 28, 28, 28, 28, 28, 55, 55, 55, 55, 55, 190, 191, 190, 192, 192, 192, 192, 192, 192, 192, 192, 192, 168, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 63, 190, 190, 190, 190, 190, 63, 190, 63, 190, 190, 63, 190, 190, 63, 190, 190, 190, 190, 190, 190, 190, 190, 190, 192, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 9, 8, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 93, 93, 93, 93, 93, 93, 93, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 194, 20, 93, 93, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 153, 153, 153, 153, 153, 153, 153, 170, 171, 153, 55, 55, 55, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 42, 40, 40, 153, 152, 152, 195, 195, 170, 171, 170, 171, 170, 171, 170, 171, 170, 171, 170, 171, 170, 171, 170, 171, 5, 5, 170, 171, 153, 153, 153, 153, 195, 195, 195, 196, 153, 196, 55, 153, 196, 153, 153, 152, 170, 171, 170, 171, 170, 171, 161, 153, 153, 168, 197, 169, 169, 169, 55, 153, 172, 161, 153, 55, 55, 55, 55, 105, 105, 105, 94, 105, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 93, 24, 55, 153, 153, 161, 172, 161, 153, 153, 170, 171, 153, 168, 196, 197, 196, 196, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 196, 153, 169, 169, 169, 153, 153, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 170, 153, 171, 21, 195, 21, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 170, 169, 171, 169, 170, 171, 153, 170, 171, 153, 153, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 36, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 36, 36, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 55, 55, 55, 22, 22, 22, 22, 22, 22, 55, 55, 22, 22, 22, 22, 22, 22, 55, 55, 22, 22, 22, 22, 22, 22, 55, 55, 22, 22, 22, 55, 55, 55, 172, 172, 169, 21, 174, 172, 172, 55, 174, 169, 169, 169, 169, 174, 174, 55, 163, 163, 163, 163, 163, 163, 163, 163, 163, 199, 199, 199, 20, 20, 163, 163, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 61, 5, 61, 55, 55, 55, 55, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 125, 125, 125, 125, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 125, 125, 20, 59, 59, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 42, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 42, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 120, 120, 120, 120, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 140, 34, 34, 34, 34, 34, 34, 34, 34, 140, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 40, 40, 40, 40, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 61, 140, 140, 140, 140, 140, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 84, 84, 84, 84, 84, 84, 63, 63, 84, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 84, 84, 63, 63, 63, 84, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 81, 202, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 203, 203, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 84, 84, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 202, 202, 202, 63, 63, 63, 5, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 202, 202, 84, 84, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 84, 51, 51, 51, 63, 51, 51, 63, 63, 63, 63, 63, 51, 42, 51, 40, 84, 84, 84, 84, 63, 84, 84, 84, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 40, 47, 42, 63, 63, 63, 63, 114, 202, 202, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 81, 81, 81, 81, 81, 81, 81, 81, 81, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 81, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 203, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 40, 42, 63, 63, 63, 63, 202, 202, 202, 202, 202, 81, 81, 81, 81, 81, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 5, 5, 5, 5, 5, 5, 5, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 81, 81, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 63, 63, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 40, 40, 40, 40, 93, 93, 93, 93, 93, 93, 93, 93, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 93, 93, 93, 93, 93, 93, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 40, 40, 79, 63, 63, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 84, 63, 63, 63, 63, 63, 63, 63, 63, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 42, 42, 40, 40, 40, 42, 40, 42, 42, 42, 42, 207, 207, 207, 207, 88, 88, 88, 88, 88, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 63, 111, 51, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 114, 61, 61, 61, 61, 61, 61, 61, 55, 55, 55, 55, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 114, 51, 51, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 34, 34, 34, 34, 111, 111, 111, 51, 51, 51, 51, 111, 111, 114, 113, 61, 61, 150, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 150, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 40, 40, 40, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 121, 51, 51, 51, 51, 111, 51, 122, 122, 51, 51, 51, 114, 114, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 61, 61, 61, 61, 34, 111, 111, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 117, 61, 61, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 111, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 51, 111, 141, 34, 34, 34, 34, 61, 61, 61, 61, 51, 117, 51, 51, 61, 111, 51, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 61, 34, 61, 61, 61, 55, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 51, 51, 51, 111, 111, 51, 141, 117, 51, 61, 61, 61, 61, 61, 61, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 61, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 111, 111, 111, 51, 51, 51, 51, 51, 51, 117, 114, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 51, 51, 111, 111, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 55, 117, 117, 34, 118, 111, 51, 111, 111, 111, 111, 55, 55, 111, 111, 55, 55, 119, 119, 141, 55, 55, 34, 55, 55, 55, 55, 55, 55, 118, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 111, 111, 55, 55, 40, 40, 40, 40, 40, 40, 40, 55, 55, 55, 40, 40, 40, 40, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 111, 111, 114, 51, 51, 111, 117, 34, 34, 34, 34, 61, 61, 61, 61, 61, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 61, 61, 55, 61, 40, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 118, 111, 111, 51, 51, 51, 51, 51, 51, 111, 121, 119, 119, 118, 119, 51, 51, 111, 114, 117, 34, 34, 61, 34, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 118, 111, 111, 51, 51, 51, 51, 55, 55, 111, 111, 119, 119, 51, 51, 111, 114, 117, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 34, 34, 34, 34, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 111, 111, 51, 111, 114, 51, 61, 61, 61, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 111, 51, 111, 111, 51, 51, 51, 51, 51, 51, 141, 117, 34, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 51, 51, 51, 111, 111, 51, 51, 51, 51, 111, 51, 51, 51, 51, 114, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 120, 120, 61, 61, 61, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 51, 51, 51, 51, 51, 51, 51, 51, 51, 111, 114, 117, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 120, 120, 120, 120, 120, 120, 120, 120, 120, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 118, 111, 111, 111, 111, 111, 55, 111, 119, 55, 55, 51, 51, 141, 114, 34, 111, 34, 111, 117, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 51, 51, 51, 51, 55, 55, 51, 51, 111, 111, 111, 111, 114, 34, 61, 34, 111, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 51, 51, 51, 51, 51, 51, 126, 126, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 114, 51, 51, 51, 51, 111, 34, 51, 51, 51, 51, 61, 61, 61, 61, 61, 61, 61, 61, 114, 55, 55, 55, 55, 55, 55, 55, 55, 34, 51, 51, 51, 51, 51, 51, 111, 111, 51, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 111, 51, 114, 61, 61, 61, 34, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 51, 51, 51, 51, 51, 51, 51, 55, 51, 51, 51, 51, 51, 51, 111, 208, 34, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 55, 55, 55, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 55, 111, 51, 51, 51, 51, 51, 51, 51, 111, 51, 51, 111, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 55, 55, 55, 51, 55, 51, 51, 55, 51, 51, 51, 117, 51, 114, 114, 34, 51, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 111, 111, 111, 111, 111, 55, 51, 51, 55, 111, 111, 51, 111, 114, 34, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 111, 111, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 20, 20, 20, 20, 20, 20, 20, 20, 7, 7, 7, 7, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 55, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 150, 150, 150, 150, 150, 150, 150, 150, 150, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 47, 47, 47, 47, 47, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 40, 40, 40, 40, 40, 40, 61, 61, 61, 61, 61, 59, 59, 59, 59, 38, 38, 38, 38, 61, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 120, 120, 120, 120, 120, 120, 120, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 51, 34, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 55, 55, 55, 55, 55, 55, 55, 51, 51, 51, 51, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 38, 38, 5, 38, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 209, 209, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 59, 51, 47, 61, 24, 24, 24, 24, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 210, 210, 210, 210, 210, 210, 210, 211, 211, 47, 47, 47, 59, 59, 59, 212, 211, 211, 211, 211, 211, 24, 24, 24, 24, 24, 24, 24, 24, 42, 42, 42, 42, 42, 42, 42, 42, 59, 59, 40, 40, 40, 40, 40, 42, 42, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 40, 40, 40, 40, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 210, 210, 210, 210, 210, 210, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 40, 40, 40, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 55, 55, 55, 55, 55, 55, 55, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 55, 33, 33, 55, 55, 33, 55, 55, 33, 33, 55, 55, 33, 33, 33, 33, 55, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 55, 28, 55, 28, 28, 28, 28, 28, 28, 28, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 55, 33, 33, 33, 33, 55, 55, 33, 33, 33, 33, 33, 33, 33, 33, 55, 33, 33, 33, 33, 33, 33, 33, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 55, 33, 33, 33, 33, 55, 33, 33, 33, 33, 33, 55, 33, 55, 55, 55, 33, 33, 33, 33, 33, 33, 33, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 55, 55, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 169, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 169, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 169, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 169, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 169, 28, 28, 28, 28, 28, 28, 33, 28, 55, 55, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 59, 59, 59, 59, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 59, 59, 59, 59, 59, 59, 59, 59, 51, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 51, 59, 59, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 51, 51, 51, 55, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 55, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 55, 55, 40, 40, 40, 40, 40, 40, 40, 55, 40, 40, 55, 40, 40, 40, 40, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 38, 38, 38, 38, 38, 38, 38, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 34, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 40, 40, 40, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 7, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 202, 42, 42, 42, 42, 42, 42, 42, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 40, 40, 40, 40, 40, 40, 117, 109, 63, 63, 63, 63, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 63, 63, 63, 63, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 93, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 106, 207, 207, 207, 87, 207, 207, 207, 207, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 93, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 106, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 105, 105, 105, 105, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 105, 105, 93, 105, 93, 93, 105, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 105, 105, 105, 105, 93, 105, 93, 105, 93, 93, 93, 93, 93, 93, 105, 93, 93, 93, 93, 105, 93, 105, 93, 105, 93, 105, 105, 105, 93, 105, 105, 93, 105, 93, 93, 105, 93, 105, 93, 105, 93, 105, 93, 105, 93, 105, 105, 93, 105, 93, 93, 105, 105, 105, 105, 93, 105, 105, 105, 105, 105, 105, 105, 93, 105, 105, 105, 105, 93, 105, 105, 105, 105, 93, 105, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 93, 93, 93, 93, 105, 105, 105, 93, 105, 105, 105, 105, 105, 93, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 14, 14, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 125, 125, 20, 20, 20, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 20, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 174, 174, 174, 20, 20, 20, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 180, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 180, 180, 180, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 55, 55, 55, 55, 180, 180, 180, 180, 180, 180, 180, 180, 180, 55, 55, 55, 55, 55, 55, 55, 180, 180, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 163, 163, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 163, 24, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 163, 163];
    var propsData_11832837 = [[16384, 0, 14, 0], [16384, 0, 16, 0], [16384, 0, 15, 0], [16384, 0, 17, 0], [2048, 0, 17, 0], [33554432, 0, 18, 0], [33554432, 0, 10, 0], [134217728, 0, 10, 0], [2097152, 0, 18, 0], [4194304, 0, 18, 0], [67108864, 0, 9, 0], [33554432, 0, 12, 0], [1048576, 0, 9, 0], [256, 0, 8, 0], [67108864, 0, 18, 0], [4, 0, 0, 0], [268435456, 0, 18, 0], [524288, 0, 18, 0], [8, 0, 0, 0], [2048, 0, 12, 36], [536870912, 0, 18, 0], [268435456, 0, 18, 36], [2, 0, 0, 36], [8388608, 0, 18, 0], [32768, 0, 14, 0], [536870912, 0, 10, 0], [67108864, 0, 10, 0], [1024, 0, 8, 36], [8, 0, 0, 36], [16777216, 0, 18, 0], [1024, 0, 18, 36], [4, 0, 0, 48], [8, 0, 0, 48], [4, 0, 0, 36], [2, 0, 0, 0], [16, 0, 0, 36], [1, 0, 0, 36], [1, 0, 18, 0], [1, 0, 0, 0], [32, 230, 13, 10], [32, 230, 13, 0], [32, 232, 13, 0], [32, 220, 13, 0], [32, 216, 13, 10], [32, 202, 13, 0], [32, 220, 13, 10], [32, 202, 13, 10], [32, 1, 13, 0], [32, 1, 13, 10], [32, 230, 13, 53], [32, 240, 13, 10], [32, 0, 13, 0], [32, 233, 13, 0], [32, 234, 13, 0], [1, 0, 18, 53], [262144, 0, 0, 0], [33554432, 0, 18, 53], [268435456, 0, 18, 52], [4, 0, 0, 52], [536870912, 0, 0, 0], [128, 0, 13, 0], [33554432, 0, 0, 0], [1048576, 0, 18, 0], [262144, 0, 3, 0], [32, 222, 13, 0], [32, 228, 13, 0], [32, 10, 13, 0], [32, 11, 13, 0], [32, 12, 13, 0], [32, 13, 13, 0], [32, 14, 13, 0], [32, 15, 13, 0], [32, 16, 13, 0], [32, 17, 13, 0], [32, 18, 13, 0], [32, 19, 13, 0], [32, 20, 13, 0], [32, 21, 13, 0], [32, 22, 13, 0], [1048576, 0, 3, 0], [32, 23, 13, 0], [33554432, 0, 3, 0], [32, 24, 13, 0], [32, 25, 13, 0], [2, 0, 3, 0], [32768, 0, 11, 0], [67108864, 0, 4, 0], [134217728, 0, 4, 0], [33554432, 0, 4, 0], [32, 30, 13, 0], [32, 31, 13, 0], [32, 32, 13, 0], [32768, 0, 4, 0], [262144, 0, 4, 0], [2, 0, 4, 0], [2, 0, 4, 48], [1, 0, 4, 0], [32, 27, 13, 0], [32, 28, 13, 0], [32, 29, 13, 0], [32, 33, 13, 0], [32, 34, 13, 0], [256, 0, 11, 0], [33554432, 0, 11, 0], [32, 35, 13, 0], [2, 0, 4, 36], [536870912, 0, 4, 0], [32, 36, 13, 0], [256, 0, 3, 0], [1, 0, 3, 0], [134217728, 0, 3, 0], [64, 0, 0, 0], [2, 0, 0, 48], [32, 7, 13, 10], [32, 9, 13, 0], [2, 0, 0, 53], [256, 0, 0, 0], [32, 7, 13, 0], [64, 0, 0, 10], [64, 0, 0, 48], [1024, 0, 0, 0], [32, 0, 13, 10], [32, 0, 13, 48], [32, 84, 13, 0], [32, 91, 13, 10], [1024, 0, 18, 0], [32, 0, 0, 0], [32, 9, 13, 10], [32, 103, 13, 0], [32, 107, 13, 0], [32, 118, 13, 0], [32, 122, 13, 0], [33554432, 0, 0, 36], [32, 216, 13, 0], [32, 129, 13, 0], [32, 130, 13, 0], [32, 0, 13, 53], [32, 132, 13, 0], [32, 0, 13, 36], [2, 0, 0, 10], [512, 0, 0, 0], [64, 9, 0, 0], [32, 214, 13, 0], [8, 0, 0, 52], [8, 0, 0, 53], [16, 0, 0, 48], [4, 0, 0, 53], [268435456, 0, 18, 53], [2048, 0, 17, 53], [2048, 0, 17, 36], [32768, 0, 0, 0], [32768, 0, 3, 0], [1048576, 0, 18, 36], [33554432, 0, 18, 36], [4096, 0, 17, 0], [8192, 0, 15, 0], [32768, 0, 1, 0], [32768, 0, 5, 0], [32768, 0, 7, 0], [32768, 0, 2, 0], [32768, 0, 6, 0], [33554432, 0, 10, 36], [67108864, 0, 12, 0], [262144, 0, 14, 0], [32768, 0, 19, 0], [32768, 0, 20, 0], [32768, 0, 21, 0], [32768, 0, 22, 0], [67108864, 0, 9, 36], [67108864, 0, 18, 36], [2097152, 0, 18, 36], [4194304, 0, 18, 36], [134217728, 0, 10, 36], [262144, 0, 10, 0], [536870912, 0, 18, 36], [512, 0, 0, 36], [67108864, 0, 18, 48], [536870912, 0, 18, 48], [2097152, 0, 18, 53], [4194304, 0, 18, 53], [536870912, 0, 0, 36], [67108864, 0, 18, 53], [32, 218, 13, 0], [64, 224, 0, 0], [32, 8, 13, 10], [1, 0, 0, 48], [1024, 0, 0, 36], [268435456, 0, 0, 0], [65536, 0, 0, 0], [131072, 0, 0, 0], [2, 0, 3, 53], [32, 26, 13, 0], [2, 0, 3, 36], [268435456, 0, 4, 0], [134217728, 0, 4, 36], [524288, 0, 18, 36], [33554432, 0, 12, 36], [1048576, 0, 9, 36], [256, 0, 8, 36], [32768, 0, 18, 0], [512, 0, 18, 0], [1024, 0, 8, 0], [1024, 0, 3, 0], [536870912, 0, 3, 0], [4, 0, 3, 0], [8, 0, 3, 0], [1024, 0, 11, 0], [1024, 0, 4, 0], [32, 9, 0, 0], [64, 6, 0, 0], [536870912, 0, 0, 53], [64, 216, 0, 0], [64, 226, 0, 0], [67108864, 0, 0, 36]];
var ConstSet2 = setConstr(10, 11, 12, 13, 14, 15, 16, 17, 28, 29, 40, 41, 42, 43);
var ConstSet3 = setConstr(3);
var ConstSet4 = setConstr();
function eqStrings(a_1460222, b_1460223) {
        if (a_1460222 == b_1460223) return true;
    if (a_1460222 === null && b_1460223.length == 0) return true;
    if (b_1460223 === null && a_1460222.length == 0) return true;
    if ((!a_1460222) || (!b_1460223)) return false;
    var alen = a_1460222.length;
    if (alen != b_1460223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_1460222[i] != b_1460223[i]) return false;
    return true;
  

  
}
function mnewString(len_1460044) {
        return new Array(len_1460044);
  

  
}
var ConstSet5 = setConstr();
function addChar(x_1505031, c_1505032) {
    x_1505031.push(c_1505032);

  
}
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr(0, 125);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([65, 90]);
var ConstSet10 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet11 = setConstr();
              var inlineCodeRe_17435214 = {nfa: [{kind: 44, cp: 35, next: [1], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 0, cp: 96, next: [2], isGreedy: false, uid: 1, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 27, cp: 46, next: [3, 2], isGreedy: false, uid: 3, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 0, cp: 96, next: [4], isGreedy: false, uid: 6, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 45, cp: 35, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], transitions: {allZ: [[-1], [0], [1, -1], [-1], []], z: [[{kind: 3, cp: 40, next: [2], isGreedy: false, uid: 2, idx: 0, isCapturing: true, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], [{kind: 4, cp: 41, next: [6], isGreedy: false, uid: 5, idx: 0, isCapturing: true, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}]]}, groupsCount: 1, namedGroups: {data: [{Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}], counter: 0, first: -1, last: -1}, litOpt: {lit: 96, nfa: [{kind: 44, cp: 35, next: [1], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}, {kind: 45, cp: 35, next: [], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0}], tns: {allZ: [[-1], []], z: []}}};
var ConstSet12 = setConstr();
var ConstSet13 = setConstr(60, 62, 94);
var ConstSet14 = setConstr(60, 62, 94);
var ConstSet15 = setConstr(45, 43, 32);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr([48, 57]);
var ConstSet18 = setConstr([48, 57]);
var ConstSet19 = setConstr([65, 90], [97, 122]);
var ConstSet20 = setConstr(2);
function raiseFieldError(f_1450047) {
    raiseException({message: nimCopy(null, f_1450047, NTI1188013), parent: null, m_type: NTI1194651, name: null, trace: [], up: null}, "FieldDefect");

  
}
var ConstSet21 = setConstr(0);
function nimBoolToStr(x_1375657) {
  var result_1375658 = [];

    if (x_1375657) {
    result_1375658 = nimCopy(null, makeNimstrLit("true"), NTI1188013);
    }
    else {
      result_1375658 = nimCopy(null, makeNimstrLit("false"), NTI1188013);
    }
    

  return result_1375658;

}
var ConstSet22 = setConstr(1);
var ConstSet23 = setConstr(2);
var ConstSet24 = setConstr(3);
function nimFloatToString(a_1460649) {
  var result_1460650 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_1460649)) result_1460650 =  a_1460649+".0"
    else {
      result_1460650 = a_1460649+""
      if(nimOnlyDigitsOrMinus(result_1460650)){
        result_1460650 = a_1460649+".0"
      }
    }
  

  return result_1460650;

}
var ConstSet25 = setConstr(4);
var ConstSet26 = setConstr(5);
var ConstSet27 = setConstr(0);
var ConstSet28 = setConstr(1);
var ConstSet29 = setConstr(0);
function nimCharToStr(x_1375674) {
  var result_1375675 = [];

    result_1375675 = nimCopy(null, mnewString(1), NTI1188013);
    result_1375675[0] = x_1375674;

  return result_1375675;

}
var ConstSet30 = setConstr(1);
var ConstSet31 = setConstr(1);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var gid_10500032 = [0];
var objectID_10635031 = [0];
var vcomponents_10806026 = [{}];
var kxi_10897285 = [null];
var interactions_11735030 = [[]];
interactions_11735030[0].push({title: makeNimstrLit("Initialize a client"), description: makeNimstrLit("The first thing the client should do is to connect to the server and receive and ID.\x0A"), steps: [{kind: 2, description: makeNimstrLit("The first thing to do is to send a connection request to unix domain socket which\x0Ais located at user runtime directory inside `kisa` directory with an <ID> of a\x0Acurrently running session (by convention it is the process ID of the server).\x0ABelow is an example for a Zig language, see documentation of\x0A[socket(2)] and [connect(2)] for more information.\x0A\x0A[socket(2)]: https://linux.die.net/man/2/socket\x0A[connect(2)]: https://linux.die.net/man/2/connect\x0A"), other: makeNimstrLit("const std = @import(\"std\");\x0Aconst os = std.os;\x0Aconst allocator = ...;\x0Aconst address = allocator.create(std.net.Address);\x0Aaddress.* = try std.net.Address.initUnix(\"/var/run/user/1000/kisa/<ID>\");\x0Aconst socket = try os.socket(\x0A    os.AF_UNIX,\x0A    os.SOCK_SEQPACKET | os.SOCK_CLOEXEC,\x0A    os.PF_UNIX,\x0A);\x0Aos.connect(socket, &address.any, address.getOsSockLen());\x0A"), request: ({method: [], params: ({kind: 0, bVal: false, iVal: 0, fVal: 0.0, sVal: [], aVal: []}), notification: false}), to: 0, response: ({notification: false, kind: 0, result: ({kind: 0, bVal: false, iVal: 0, fVal: 0.0, sVal: [], aVal: []}), error: ({code: 0, message: []})}), from: 0}, {kind: 0, description: makeNimstrLit("After that the server notifies the client that the connection was accepted\x0Aand sends a notification saying that the client must ask for its ID.\x0A"), to: 0, request: {method: makeNimstrLit("shouldAskId"), params: {kind: 0, bVal: false, iVal: 0, fVal: 0.0, sVal: [], aVal: []}, notification: true}, response: ({notification: false, kind: 0, result: ({kind: 0, bVal: false, iVal: 0, fVal: 0.0, sVal: [], aVal: []}), error: ({code: 0, message: []})}), from: 0, other: []}, {kind: 0, description: makeNimstrLit("After receiving a notification, the client asks for an ID.\x0A"), to: 1, request: {method: makeNimstrLit("askId"), params: {kind: 0, bVal: false, iVal: 0, fVal: 0.0, sVal: [], aVal: []}, notification: false}, response: ({notification: false, kind: 0, result: ({kind: 0, bVal: false, iVal: 0, fVal: 0.0, sVal: [], aVal: []}), error: ({code: 0, message: []})}), from: 0, other: []}, {kind: 1, description: makeNimstrLit("Server sends an ID which it assigned to the client.\x0A"), from: 1, response: {kind: 0, result: {kind: 1, bVal: true, iVal: 0, fVal: 0.0, sVal: [], aVal: []}, notification: false, error: ({code: 0, message: []})}, request: ({method: [], params: ({kind: 0, bVal: false, iVal: 0, fVal: 0.0, sVal: [], aVal: []}), notification: false}), to: 0, other: []}]});;
var links_17413664 = [({data: [], counter: 0})];
function add_1357211(x_1357214, x_1357214_Idx, y_1357215) {
          if (x_1357214[x_1357214_Idx] === null) { x_1357214[x_1357214_Idx] = []; }
      var off = x_1357214[x_1357214_Idx].length;
      x_1357214[x_1357214_Idx].length += y_1357215.length;
      for (var i = 0; i < y_1357215.length; ++i) {
        x_1357214[x_1357214_Idx][off+i] = y_1357215.charCodeAt(i);
      }
    

  
}
function newSeq_1455128(len_1455131) {
  var result_1455133 = [];

    result_1455133 = new Array(len_1455131); for (var i=0;i<len_1455131;++i) {result_1455133[i]=null;}
  return result_1455133;

}
function unhandledException(e_1415059) {
    var buf_1415060 = [[]];
    if (!(((e_1415059.message).length == 0))) {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_1415060[0].push.apply(buf_1415060[0], e_1415059.message);;
    }
    else {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit(" ["));;
    add_1357211(buf_1415060, 0, e_1415059.name);
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("]\x0A"));;
    var cbuf_1420201 = toJSStr(buf_1415060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1420201);
  }
  else {
    throw cbuf_1420201;
  }
  

  
}
function newSeq_11455012(len_11455015) {
  var result_11455017 = [];

    result_11455017 = new Array(len_11455015); for (var i=0;i<len_11455015;++i) {result_11455017[i]=({k: 0, parent: null, current: null, newNode: null, oldNode: null});}
  return result_11455017;

}
function newSeq_11455064(len_11455067) {
  var result_11455069 = [];

    result_11455069 = new Array(len_11455067); for (var i=0;i<len_11455067;++i) {result_11455069[i]=({parent: null, newChild: null, pos: 0});}
  return result_11455069;

}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1194637, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_1460403) {
        if (a_1460403 > 2147483647 || a_1460403 < -2147483648) raiseOverflow();
  

  
}
function isFatPointer_1465401(ti_1465403) {
  var result_1465404 = false;

  BeforeRet: do {
    result_1465404 = !((ConstSet1[ti_1465403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1465404;

}
function nimCopyAux(dest_1470028, src_1470029, n_1470031) {
    switch (n_1470031.kind) {
    case 0:
      break;
    case 1:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1470031.sons.length; i++) {
      nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i]);
    }
    
      break;
    case 3:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
      for (var i = 0; i < n_1470031.sons.length; ++i) {
        nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i][1]);
      }
    
      break;
    }

  
}
function sysFatal_1305418(message_1305422) {
    raiseException({message: nimCopy(null, message_1305422, NTI1188013), m_type: NTI1194641, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_1305414(msg_1305416) {
    sysFatal_1305418(msg_1305416);

  
}
function failedAssertImpl_1305480(msg_1305482) {
    raiseAssert_1305414(msg_1305482);

  
}
function raiseIndexError(i_1440047, a_1440048, b_1440049) {
    var Tmp1;

    if ((b_1440049 < a_1440048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1440047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1440048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1440049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1188013), parent: null, m_type: NTI1194649, name: null, trace: [], up: null}, "IndexDefect");

  
}
function valueHEX3D_10465140(n_10465142, v_10465143) {
    n_10465142.text = v_10465143;

  
}
function value_10465123(n_10465125) {
  var result_10465126 = null;

    result_10465126 = n_10465125.text;

  return result_10465126;

}
function addEventShell_10897376(d_10897378, name_10897379, h_10897380) {
    d_10897378.addEventListener(name_10897379, h_10897380, false);
    if ((d_10897378.karaxEvents == null)) {
    d_10897378.karaxEvents = new Array(0);
    }
    
    d_10897378.karaxEvents.push({Field0: name_10897379, Field1: h_10897380});

  
}
function wrapEvent_10900097(d_10900099, n_10900100, k_10900101, action_10900102) {
      function laterWrapper_10970042() {
          function HEX3Aanonymous_10970048(ev_10970050) {
              function wrapper_10970051() {
                  var vHEX60gensym15_10980001 = ev_10970050.target.value;
                  valueHEX3D_10465140(n_10970046, vHEX60gensym15_10980001);
                  if (!(!((action_10970045 == null)))) {
                  failedAssertImpl_1305480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_10970045(ev_10970050, n_10970046);
                  if (!((value_10465123(n_10970046) == vHEX60gensym15_10980001))) {
                  ev_10970050.target.value = value_10465123(n_10970046);
                  }
                  

                
              }

              if (!((timer_10970047 == null))) {
              clearTimeout(timer_10970047);
              }
              
              timer_10970047 = setTimeout(wrapper_10970051, 400);

            
          }

        var result_10970044 = null;

          var action_10970045 = action_10900102;
          var n_10970046 = n_10900100;
          var timer_10970047 = null;
          result_10970044 = HEX3Aanonymous_10970048;

        return result_10970044;

      }
      function enterWrapper_10935042() {
          function HEX3Aanonymous_10935047(ev_10935049) {
              if ((ev_10935049.keyCode == 13)) {
              var vHEX60gensym8_10945001 = ev_10935049.target.value;
              valueHEX3D_10465140(n_10935046, vHEX60gensym8_10945001);
              if (!(!((action_10935045 == null)))) {
              failedAssertImpl_1305480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_10935045(ev_10935049, n_10935046);
              if (!((value_10465123(n_10935046) == vHEX60gensym8_10945001))) {
              ev_10935049.target.value = value_10465123(n_10935046);
              }
              
              }
              

            
          }

        var result_10935044 = null;

          var action_10935045 = action_10900102;
          var n_10935046 = n_10900100;
          result_10935044 = HEX3Aanonymous_10935047;

        return result_10935044;

      }
      function stdWrapper_10900104() {
          function HEX3Aanonymous_10900109(ev_10900111) {
                var Tmp1;
                var Tmp2;

                if ((n_10900108.kind == 199)) Tmp2 = true; else {                  Tmp2 = (n_10900108.kind == 193);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_10900108.kind == 195);                }              if (Tmp1) {
              var vHEX60gensym1_10910001 = ev_10900111.target.value;
              valueHEX3D_10465140(n_10900108, vHEX60gensym1_10910001);
              if (!(!((action_10900107 == null)))) {
              failedAssertImpl_1305480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_10900107(ev_10900111, n_10900108);
              if (!((value_10465123(n_10900108) == vHEX60gensym1_10910001))) {
              ev_10900111.target.value = value_10465123(n_10900108);
              }
              
              }
              else {
              action_10900107(ev_10900111, n_10900108);
              }
              

            
          }

        var result_10900106 = null;

          var action_10900107 = action_10900102;
          var n_10900108 = n_10900100;
          result_10900106 = HEX3Aanonymous_10900109;

        return result_10900106;

      }

  var result_10900103 = null;

    switch (k_10900101) {
    case 30:
      result_10900103 = laterWrapper_10970042();
      addEventShell_10897376(d_10900099, "keyup", result_10900103);
      break;
    case 29:
      result_10900103 = enterWrapper_10935042();
      addEventShell_10897376(d_10900099, "keyup", result_10900103);
      break;
    default: 
      result_10900103 = stdWrapper_10900104();
      addEventShell_10897376(d_10900099, toEventName_10465012[chckIndx(k_10900101, 0, (toEventName_10465012).length-1)], result_10900103);
      break;
    }

  return result_10900103;

}
function applyEvents_11010073(n_11010075) {
    var dest_11010076 = n_11010075.dom;
    L1: do {
      var i_11010089 = 0;
      var colontmp__17530379 = 0;
      colontmp__17530379 = (n_11010075.events).length;
      var i_17530380 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530380 < colontmp__17530379)) break L3;
            i_11010089 = i_17530380;
            n_11010075.events[chckIndx(i_11010089, 0, (n_11010075.events).length-1)]["Field2"] = wrapEvent_10900097(dest_11010076, n_11010075, n_11010075.events[chckIndx(i_11010089, 0, (n_11010075.events).length-1)]["Field0"], n_11010075.events[chckIndx(i_11010089, 0, (n_11010075.events).length-1)]["Field1"]);
            i_17530380 = addInt(i_17530380, 1);
          }
      } while(false);
    } while(false);

  
}
function applyStyle_10455628(n_10455630, s_10455631) {
    n_10455630.style = {};
    L1: do {
      var i_10455664 = 0;
      var colontmp__17530390 = 0;
      colontmp__17530390 = subInt(s_10455631.length, 1);
      var res_17530391 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_17530391 <= colontmp__17530390)) break L3;
            i_10455664 = res_17530391;
            n_10455630.style[s_10455631[i_10455664]] = s_10455631[addInt(i_10455664, 1)];
            res_17530391 = addInt(res_17530391, 2);
          }
      } while(false);
    } while(false);

  
}
function toDom_11010154(n_11010156, useAttachedNode_11010157, kxi_11010158) {
      var Tmp9;
      var Tmp10;

  var result_11010159 = null;

  BeforeRet: do {
    if (useAttachedNode_11010157) {
    if (!((n_11010156.dom == null))) {
    if (!((n_11010156.id == null))) {
    kxi_11010158.byId[n_11010156.id] = n_11010156;
    }
    
    result_11010159 = n_11010156.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_11010156.kind == 0)) {
    result_11010159 = document.createTextNode(n_11010156.text);
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897285[0].byId[n_11010156.id] = n_11010156;
    }
    
    }
    else {
    if ((n_11010156.kind == 6)) {
    result_11010159 = document.createElement("div");
    result_11010159.innerHTML = n_11010156.text;
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897285[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_11010156.kind == 3)) {
    var x_11045001 = vcomponents_10806026[0][n_11010156.text](n_11010156.kids);
    result_11010159 = toDom_11010154(x_11045001, useAttachedNode_11010157, kxi_11010158);
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897285[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_11010156.kind == 4)) {
    result_11010159 = n_11010156.dom;
    if (!(!((result_11010159 == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(176, 12) `result != nil` "));
    }
    
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897285[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_11010156.kind == 5)) {
    var x_11080022 = n_11010156;
    if (!((x_11080022.onAttachImpl == null))) {
    x_11080022.onAttachImpl(x_11080022);
    }
    
    if (!(!((x_11080022.renderImpl == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_11080022.expanded == null)) {
    x_11080022.expanded = x_11080022.renderImpl(x_11080022);
    }
    
    if (!(!((x_11080022.expanded == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    result_11010159 = toDom_11010154(x_11080022.expanded, useAttachedNode_11010157, kxi_11010158);
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897285[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
      result_11010159 = document.createElement(toTag_10465006[chckIndx(n_11010156.kind, 0, (toTag_10465006).length-1)]);
      n_11010156.dom = result_11010159;
      if (!((n_11010156.id == null))) {
      kxi_10897285[0].byId[n_11010156.id] = n_11010156;
      }
      
      L1: do {
        var k_11135016 = null;
        L2: do {
          var i_17530348 = 0;
          var colontmp__17530349 = 0;
          colontmp__17530349 = (n_11010156.kids).length;
          var i_17530350 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_17530350 < colontmp__17530349)) break L4;
                i_17530348 = i_17530350;
                k_11135016 = n_11010156.kids[chckIndx(i_17530348, 0, (n_11010156.kids).length-1)];
                result_11010159.appendChild(toDom_11010154(k_11135016, useAttachedNode_11010157, kxi_11010158));
                i_17530350 = addInt(i_17530350, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_11010156.text == null))) {
      result_11010159.value = n_11010156.text;
      }
      
    }
    }}}}
    if (!((n_11010156.id == null))) {
    result_11010159.id = n_11010156.id;
    }
    
    if (!((n_11010156.class == null))) {
    result_11010159.className = n_11010156.class;
    }
    
    L5: do {
      var k_11150001 = null;
      var v_11150002 = null;
      L6: do {
        var i_17530361 = 0;
        var colontmp__17530362 = 0;
        colontmp__17530362 = subInt((n_11010156.attrs).length, 2);
        var res_17530363 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_17530363 <= colontmp__17530362)) break L8;
              i_17530361 = res_17530363;
              k_11150001 = n_11010156.attrs[chckIndx(i_17530361, 0, (n_11010156.attrs).length-1)];
              v_11150002 = n_11010156.attrs[chckIndx(addInt(i_17530361, 1), 0, (n_11010156.attrs).length-1)];
              if (!((v_11150002 == null))) {
              result_11010159.setAttribute(k_11150001, v_11150002);
              }
              
              res_17530363 = addInt(res_17530363, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    applyEvents_11010073(n_11010156);
      if (!!((kxi_11010158 == null))) Tmp10 = false; else {        Tmp10 = (n_11010156 == kxi_11010158.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_11010158.toFocus == null);      }    if (Tmp9) {
    kxi_11010158.toFocus = result_11010159;
    }
    
    if (!((n_11010156.style == null))) {
    applyStyle_10455628(result_11010159, n_11010156.style);
    }
    
  } while (false);

  return result_11010159;

}
function replaceById_11175414(id_11175416, newTree_11175417) {
    var x_11175418 = document.getElementById(id_11175416);
    x_11175418.parentNode.replaceChild(newTree_11175417, x_11175418);
    newTree_11175417.id = id_11175416;

  
}
function len_10550014(x_10550016) {
  var result_10550017 = 0;

    result_10550017 = (x_10550016.kids).length;

  return result_10550017;

}
function HEX5BHEX5D_10550036(x_10550038, idx_10550039) {
  var result_10550040 = null;

    result_10550040 = x_10550038.kids[chckIndx(idx_10550039, 0, (x_10550038.kids).length-1)];

  return result_10550040;

}
function same_11160072(n_11160074, e_11160075, nesting_11160076) {
      var Tmp1;
      var Tmp2;

  var result_11160078 = false;

  BeforeRet: do {
    if (kxi_10897285[0].orphans.hasOwnProperty(n_11160074.id)) {
    result_11160078 = true;
    break BeforeRet;
    }
    
    if ((n_11160074.kind == 5)) {
    result_11160078 = same_11160072(n_11160074.expanded, e_11160075, addInt(nesting_11160076, 1));
    }
    else {
    if ((n_11160074.kind == 6)) {
    result_11160078 = true;
    }
    else {
      if ((n_11160074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_11160074.kind == 4);      }    if (Tmp1) {
    result_11160078 = true;
    }
    else {
    if ((toTag_10465006[chckIndx(n_11160074.kind, 0, (toTag_10465006).length-1)] == e_11160075.nodeName)) {
    result_11160078 = true;
    if (!((n_11160074.kind == 0))) {
      if (!!((e_11160075.childNodes.length == len_10550014(n_11160074)))) Tmp2 = false; else {        Tmp2 = !((n_11160074.kind == 199));      }    if (Tmp2) {
    result_11160078 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_11175208 = 0;
      var colontmp__17530397 = 0;
      colontmp__17530397 = len_10550014(n_11160074);
      var i_17530398 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_17530398 < colontmp__17530397)) break L5;
            i_11175208 = i_17530398;
            if (!(same_11160072(HEX5BHEX5D_10550036(n_11160074, i_11175208), e_11160075.childNodes[i_11175208], addInt(nesting_11160076, 1)))) {
            result_11160078 = false;
            break BeforeRet;
            }
            
            i_17530398 = addInt(i_17530398, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    }
    }}}
  } while (false);

  return result_11160078;

}
function eq_10420229(a_10420231, b_10420232) {
  var result_10420233 = false;

  BeforeRet: do {
    if ((a_10420231 == null)) {
    if ((b_10420232 == null)) {
    result_10420233 = true;
    break BeforeRet;
    }
    else {
      result_10420233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_10420232 == null)) {
    result_10420233 = false;
    break BeforeRet;
    }
    }
    if (!((a_10420231.length == b_10420232.length))) {
    result_10420233 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_10425083 = 0;
      var colontmp__17530437 = 0;
      colontmp__17530437 = a_10420231.length;
      var i_17530438 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530438 < colontmp__17530437)) break L3;
            i_10425083 = i_17530438;
            if (!((a_10420231[i_10425083] == b_10420232[i_10425083]))) {
            result_10420233 = false;
            break BeforeRet;
            }
            
            i_17530438 = addInt(i_17530438, 1);
          }
      } while(false);
    } while(false);
    result_10420233 = true;
    break BeforeRet;
  } while (false);

  return result_10420233;

}
function sameAttrs_10561079(a_10561081, b_10561082) {
  var result_10561083 = false;

  BeforeRet: do {
    if (((a_10561081.attrs).length == (b_10561082.attrs).length)) {
    result_10561083 = true;
    L1: do {
      var i_10561106 = 0;
      var colontmp__17530441 = 0;
      colontmp__17530441 = (a_10561081.attrs).length;
      var i_17530442 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530442 < colontmp__17530441)) break L3;
            i_10561106 = i_17530442;
            if (!((a_10561081.attrs[chckIndx(i_10561106, 0, (a_10561081.attrs).length-1)] == b_10561082.attrs[chckIndx(i_10561106, 0, (b_10561082.attrs).length-1)]))) {
            result_10561083 = false;
            break BeforeRet;
            }
            
            i_17530442 = addInt(i_17530442, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_10561083;

}
function eq_11175614(a_11175616, b_11175617, recursive_11175618) {
      var Tmp4;
      var Tmp5;

  var result_11175619 = 0;

  BeforeRet: do {
    if (!((a_11175616.kind == b_11175617.kind))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    if (!((a_11175616.id == b_11175617.id))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    result_11175619 = 3;
    if (!((a_11175616.index == b_11175617.index))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    if ((a_11175616.kind == 0)) {
    if (!((a_11175616.text == b_11175617.text))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_11175616.kind == 3)) {
    if (!((a_11175616.text == b_11175617.text))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    if (!((len_10550014(a_11175616) == len_10550014(b_11175617)))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_11205008 = 0;
      var colontmp__17530429 = 0;
      colontmp__17530429 = len_10550014(a_11175616);
      var i_17530430 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530430 < colontmp__17530429)) break L3;
            i_11205008 = i_17530430;
            if ((eq_11175614(HEX5BHEX5D_10550036(a_11175616, i_11205008), HEX5BHEX5D_10550036(b_11175617, i_11205008), recursive_11175618) == 1)) {
            result_11175619 = 1;
            break BeforeRet;
            }
            
            i_17530430 = addInt(i_17530430, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_11175616.kind == 4)) {
    if ((a_11175616.dom == b_11175617.dom)) {
    result_11175619 = 3;
    break BeforeRet;
    }
    else {
      result_11175619 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_11175616.kind == 6)) {
    if (!((a_11175616.text == b_11175617.text))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_11175617.kind == 5)) {
    if (!((a_11175616.text == b_11175617.text))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    if (!((a_11175616.key == b_11175617.key))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    result_11175619 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_11175616.class == b_11175617.class))) Tmp5 = true; else {        Tmp5 = !(eq_10420229(a_11175616.style, b_11175617.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(sameAttrs_10561079(a_11175616, b_11175617));      }    if (Tmp4) {
    result_11175619 = 2;
    break BeforeRet;
    }
    
    if (recursive_11175618) {
    if (!((len_10550014(a_11175616) == len_10550014(b_11175617)))) {
    result_11175619 = 1;
    break BeforeRet;
    }
    
    L6: do {
      var i_11230008 = 0;
      var colontmp__17530433 = 0;
      colontmp__17530433 = len_10550014(a_11175616);
      var i_17530434 = 0;
      L7: do {
          L8: while (true) {
          if (!(i_17530434 < colontmp__17530433)) break L8;
            i_11230008 = i_17530434;
            if (!((eq_11175614(HEX5BHEX5D_10550036(a_11175616, i_11230008), HEX5BHEX5D_10550036(b_11175617, i_11230008), true) == 3))) {
            result_11175619 = 1;
            break BeforeRet;
            }
            
            i_17530434 = addInt(i_17530434, 1);
          }
      } while(false);
    } while(false);
    }
    
    break BeforeRet;
  } while (false);

  return result_11175619;

}
function updateStyles_11235034(newNode_11235036, oldNode_11235037) {
    if (!((oldNode_11235037.dom == null))) {
    if (!((newNode_11235036.style == null))) {
    applyStyle_10455628(oldNode_11235037.dom, newNode_11235036.style);
    }
    else {
      oldNode_11235037.dom.style = {m_type: NTI1853293, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    oldNode_11235037.dom.className = newNode_11235036.class;
    }
    
    oldNode_11235037.style = newNode_11235036.style;
    oldNode_11235037.class = newNode_11235036.class;

  
}
function takeOverAttr_10500214(newNode_10500216, oldNode_10500217) {
    oldNode_10500217.attrs = newNode_10500216.attrs;

  
}
function updateAttributes_11245052(newNode_11245054, oldNode_11245055) {
    if (!((oldNode_11245055.dom == null))) {
    L1: do {
      var k_11250009 = null;
      var __11250010 = null;
      L2: do {
        var i_17530447 = 0;
        var colontmp__17530448 = 0;
        colontmp__17530448 = subInt((oldNode_11245055.attrs).length, 2);
        var res_17530449 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_17530449 <= colontmp__17530448)) break L4;
              i_17530447 = res_17530449;
              k_11250009 = oldNode_11245055.attrs[chckIndx(i_17530447, 0, (oldNode_11245055.attrs).length-1)];
              __11250010 = oldNode_11245055.attrs[chckIndx(addInt(i_17530447, 1), 0, (oldNode_11245055.attrs).length-1)];
              oldNode_11245055.dom.removeAttribute(k_11250009);
              res_17530449 = addInt(res_17530449, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_11250011 = null;
      var v_11250012 = null;
      L6: do {
        var i_17530455 = 0;
        var colontmp__17530456 = 0;
        colontmp__17530456 = subInt((newNode_11245054.attrs).length, 2);
        var res_17530457 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_17530457 <= colontmp__17530456)) break L8;
              i_17530455 = res_17530457;
              k_11250011 = newNode_11245054.attrs[chckIndx(i_17530455, 0, (newNode_11245054.attrs).length-1)];
              v_11250012 = newNode_11245054.attrs[chckIndx(addInt(i_17530455, 1), 0, (newNode_11245054.attrs).length-1)];
              if (!((v_11250012 == null))) {
              oldNode_11245055.dom.setAttribute(k_11250011, v_11250012);
              }
              
              res_17530457 = addInt(res_17530457, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    takeOverAttr_10500214(newNode_11245054, oldNode_11245055);

  
}
function getAttr_10500183(n_10500185, key_10500186) {
  var result_10500187 = null;

  BeforeRet: do {
    L1: do {
      var i_10500200 = 0;
      var colontmp__17530462 = 0;
      colontmp__17530462 = subInt((n_10500185.attrs).length, 2);
      var res_17530463 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_17530463 <= colontmp__17530462)) break L3;
            i_10500200 = res_17530463;
            if ((n_10500185.attrs[chckIndx(i_10500200, 0, (n_10500185.attrs).length-1)] == key_10500186)) {
            result_10500187 = n_10500185.attrs[chckIndx(addInt(i_10500200, 1), 0, (n_10500185.attrs).length-1)];
            break BeforeRet;
            }
            
            res_17530463 = addInt(res_17530463, 2);
          }
      } while(false);
    } while(false);
  } while (false);

  return result_10500187;

}
function removeAllEventHandlers_10897437(d_10897439) {
    if (!((d_10897439.karaxEvents == null))) {
    L1: do {
      var i_10900041 = 0;
      var colontmp__17530469 = 0;
      colontmp__17530469 = d_10897439.karaxEvents.length;
      var i_17530470 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530470 < colontmp__17530469)) break L3;
            i_10900041 = i_17530470;
            d_10897439.removeEventListener(d_10897439.karaxEvents[i_10900041]["Field0"], d_10897439.karaxEvents[i_10900041]["Field1"]);
            i_17530470 = addInt(i_17530470, 1);
          }
      } while(false);
    } while(false);
    }
    

  
}
function mergeEvents_11255014(newNode_11255016, oldNode_11255017, kxi_11255018) {
    var d_11255019 = oldNode_11255017.dom;
    if (!((d_11255019 == null))) {
    removeAllEventHandlers_10897437(d_11255019);
    }
    
    oldNode_11255017.events = newNode_11255016.events;
    applyEvents_11010073(oldNode_11255017);

  
}
function addPatch_11260414(kxi_11260416, ka_11260417, parenta_11260418, currenta_11260419, na_11260420, oldNode_11260421) {
    var L_11260422 = kxi_11260416.patchLen;
    if (((kxi_11260416.patches).length <= L_11260422)) {
    kxi_11260416.patches.push({k: ka_11260417, parent: parenta_11260418, current: currenta_11260419, newNode: na_11260420, oldNode: oldNode_11260421});;
    }
    else {
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].k = ka_11260417;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].parent = parenta_11260418;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].current = currenta_11260419;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].newNode = na_11260420;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].oldNode = oldNode_11260421;
    }
    
    kxi_11260416.patchLen = addInt(kxi_11260416.patchLen, 1);

  
}
function diff_11310215(newNode_11310217, oldNode_11310218, parent_11310219, current_11310220, kxi_11310221) {
      var Tmp1;
        var Tmp2;
            var Tmp7;

  BeforeRet: do {
    var result_11310401 = eq_11175614(newNode_11310217, oldNode_11310218, false);
    switch (result_11310401) {
    case 0:
      kxi_11310221.components.push({oldNode: oldNode_11310218, newNode: newNode_11310217, parent: parent_11310219, current: current_11310220});;
      break;
    case 3:
    case 2:
      newNode_11310217.dom = oldNode_11310218.dom;
      if ((result_11310401 == 2)) {
      updateStyles_11235034(newNode_11310217, oldNode_11310218);
      updateAttributes_11245052(newNode_11310217, oldNode_11310218);
      if ((oldNode_11310218.kind == 0)) {
      oldNode_11310218.text = newNode_11310217.text;
      oldNode_11310218.dom.nodeValue = newNode_11310217.text;
      }
      
      if ((oldNode_11310218.kind == 193)) {
      oldNode_11310218.dom.value = newNode_11310217.text;
      var checked_11310427 = getAttr_10500183(newNode_11310217, "checked");
      if ((checked_11310427 == null)) {
      Tmp1 = false;
      }
      else {
      Tmp1 = true;
      }
      
      oldNode_11310218.dom.checked = Tmp1;
      }
      
      }
      
        if (!(((newNode_11310217.events).length == 0))) Tmp2 = true; else {          Tmp2 = !(((oldNode_11310218.events).length == 0));        }      if (Tmp2) {
      mergeEvents_11255014(newNode_11310217, oldNode_11310218, kxi_11310221);
      }
      
      var newLength_11320006 = len_10550014(newNode_11310217);
      var oldLength_11320007 = len_10550014(oldNode_11310218);
      if (((newLength_11320006 == 0) && (oldLength_11320007 == 0))) {
      break BeforeRet;
      }
      
      var minLength_11320008 = nimMin(newLength_11320006, oldLength_11320007);
      if (!((oldNode_11310218.kind == newNode_11310217.kind))) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(497, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var commonPrefix_11330202 = 0;
      L3: do {
          L4: while (true) {
          if (!(commonPrefix_11330202 < minLength_11320008)) break L4;
            if ((eq_11175614(HEX5BHEX5D_10550036(newNode_11310217, commonPrefix_11330202), HEX5BHEX5D_10550036(oldNode_11310218, commonPrefix_11330202), true) == 3)) {
            addPatch_11260414(kxi_11310221, 5, null, null, HEX5BHEX5D_10550036(newNode_11310217, commonPrefix_11330202), HEX5BHEX5D_10550036(oldNode_11310218, commonPrefix_11330202));
            commonPrefix_11330202 = addInt(commonPrefix_11330202, 1);
            }
            else {
              break L3;
            }
            
          }
      } while(false);
      var oldPos_11330214 = subInt(oldLength_11320007, 1);
      var newPos_11330215 = subInt(newLength_11320006, 1);
      L5: do {
          L6: while (true) {
            if (!(commonPrefix_11330202 <= oldPos_11330214)) Tmp7 = false; else {              Tmp7 = (commonPrefix_11330202 <= newPos_11330215);            }          if (!Tmp7) break L6;
            if ((eq_11175614(HEX5BHEX5D_10550036(newNode_11310217, newPos_11330215), HEX5BHEX5D_10550036(oldNode_11310218, oldPos_11330214), true) == 3)) {
            addPatch_11260414(kxi_11310221, 5, null, null, HEX5BHEX5D_10550036(newNode_11310217, newPos_11330215), HEX5BHEX5D_10550036(oldNode_11310218, oldPos_11330214));
            oldPos_11330214 = subInt(oldPos_11330214, 1);
            newPos_11330215 = subInt(newPos_11330215, 1);
            }
            else {
              break L5;
            }
            
          }
      } while(false);
      var pos_11340018 = addInt(nimMin(oldPos_11330214, newPos_11330215), 1);
      L8: do {
        var i_11340024 = 0;
        var colontmp__17530404 = 0;
        colontmp__17530404 = subInt(pos_11340018, 1);
        var res_17530405 = commonPrefix_11330202;
        L9: do {
            L10: while (true) {
            if (!(res_17530405 <= colontmp__17530404)) break L10;
              i_11340024 = res_17530405;
              diff_11310215(HEX5BHEX5D_10550036(newNode_11310217, i_11340024), HEX5BHEX5D_10550036(oldNode_11310218, i_11340024), current_11310220, current_11310220.childNodes[chckIndx(i_11340024, 0, (current_11310220.childNodes).length-1)], kxi_11310221);
              res_17530405 = addInt(res_17530405, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(oldPos_11330214, 1) == oldLength_11320007)) {
      L11: do {
        var i_11340030 = 0;
        var res_17530411 = pos_11340018;
        L12: do {
            L13: while (true) {
            if (!(res_17530411 <= newPos_11330215)) break L13;
              i_11340030 = res_17530411;
              addPatch_11260414(kxi_11310221, 2, current_11310220, null, HEX5BHEX5D_10550036(newNode_11310217, i_11340030), null);
              res_17530411 = addInt(res_17530411, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_11340031 = current_11310220.childNodes[chckIndx(addInt(oldPos_11330214, 1), 0, (current_11310220.childNodes).length-1)];
        L14: do {
          var i_11340037 = 0;
          var res_17530417 = pos_11340018;
          L15: do {
              L16: while (true) {
              if (!(res_17530417 <= newPos_11330215)) break L16;
                i_11340037 = res_17530417;
                addPatch_11260414(kxi_11310221, 3, current_11310220, before_11340031, HEX5BHEX5D_10550036(newNode_11310217, i_11340037), null);
                res_17530417 = addInt(res_17530417, 1);
              }
          } while(false);
        } while(false);
      }
      
      L17: do {
        var i_11340043 = 0;
        var res_17530423 = pos_11340018;
        L18: do {
            L19: while (true) {
            if (!(res_17530423 <= oldPos_11330214)) break L19;
              i_11340043 = res_17530423;
              addPatch_11260414(kxi_10897285[0], 4, null, null, null, HEX5BHEX5D_10550036(oldNode_11310218, i_11340043));
              addPatch_11260414(kxi_11310221, 1, current_11310220, current_11310220.childNodes[chckIndx(i_11340043, 0, (current_11310220.childNodes).length-1)], null, null);
              res_17530423 = addInt(res_17530423, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      addPatch_11260414(kxi_10897285[0], 4, null, null, null, oldNode_11310218);
      addPatch_11260414(kxi_11310221, 0, parent_11310219, current_11310220, newNode_11310217, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(539, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}
function applyComponents_11360429(kxi_11360431) {
            var Tmp3;

    var i_11360433 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_11360433 < (kxi_11360431.components).length)) break L2;
          var x_11360439 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].oldNode;
          var newNode_11360440 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].newNode;
            if (!!((x_11360439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_11360439.changedImpl(x_11360439, newNode_11360440);            }          if (Tmp3) {
          var current_11365201 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].current;
          var parent_11365202 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].parent;
          x_11360439.updatedImpl(x_11360439, newNode_11360440);
          var oldExpanded_11365203 = x_11360439.expanded;
          x_11360439.expanded = x_11360439.renderImpl(x_11360439);
          x_11360439.renderedVersion = x_11360439.version;
          if ((oldExpanded_11365203 == null)) {
          addPatch_11260414(kxi_10897285[0], 4, null, null, null, x_11360439);
          addPatch_11260414(kxi_11360431, 0, parent_11365202, current_11365201, x_11360439.expanded, null);
          }
          else {
            diff_11310215(x_11360439.expanded, oldExpanded_11365203, parent_11365202, current_11365201, kxi_11360431);
          }
          
          }
          
          i_11360433 = addInt(i_11360433, 1);
        }
    } while(false);
    if (kxi_11360431.components.length < 0) { for (var i=kxi_11360431.components.length;i<0;++i) kxi_11360431.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_11360431.components.length = 0; };

  
}
function moveDom_11270048(dest_11270050, src_11270051) {
    dest_11270050.dom = src_11270051.dom;
    src_11270051.dom = null;
    if (!((dest_11270050.id == null))) {
    kxi_10897285[0].byId[dest_11270050.id] = dest_11270050;
    }
    
    if (!((len_10550014(dest_11270050) == len_10550014(src_11270051)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(392, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      var i_11285208 = 0;
      var colontmp__17530481 = 0;
      colontmp__17530481 = len_10550014(dest_11270050);
      var i_17530482 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530482 < colontmp__17530481)) break L3;
            i_11285208 = i_17530482;
            moveDom_11270048(HEX5BHEX5D_10550036(dest_11270050, i_11285208), HEX5BHEX5D_10550036(src_11270051, i_11285208));
            i_17530482 = addInt(i_17530482, 1);
          }
      } while(false);
    } while(false);

  
}
function HEX5BHEX5DHEX3D_10550054(x_10550056, idx_10550057, y_10550058) {
    x_10550056.kids[chckIndx(idx_10550057, 0, (x_10550056.kids).length-1)] = y_10550058;

  
}
function applyPatch_11285222(kxi_11285224) {
    L1: do {
      var i_11285232 = 0;
      var i_17530475 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530475 < kxi_11285224.patchLen)) break L3;
            i_11285232 = i_17530475;
            var p_11285233 = nimCopy(null, kxi_11285224.patches[chckIndx(i_11285232, 0, (kxi_11285224.patches).length-1)], NTI10897209);
            switch (p_11285233.k) {
            case 0:
              var nn_11285234 = toDom_11010154(p_11285233.newNode, true, kxi_11285224);
              if ((p_11285233.parent == null)) {
              replaceById_11175414(kxi_11285224.rootId, nn_11285234);
              }
              else {
                if ((p_11285233.current.parentNode == p_11285233.parent)) {
                p_11285233.parent.replaceChild(nn_11285234, p_11285233.current);
                }
                else {
                p_11285233.parent.appendChild(nn_11285234);
                }
                
              }
              
              break;
            case 5:
              moveDom_11270048(p_11285233.newNode, p_11285233.oldNode);
              break;
            case 1:
              p_11285233.parent.removeChild(p_11285233.current);
              break;
            case 2:
              var nn_11285250 = toDom_11010154(p_11285233.newNode, true, kxi_11285224);
              p_11285233.parent.appendChild(nn_11285250);
              break;
            case 3:
              var nn_11285251 = toDom_11010154(p_11285233.newNode, true, kxi_11285224);
              p_11285233.parent.insertBefore(nn_11285251, p_11285233.current);
              break;
            case 4:
              var n_11285252 = p_11285233.oldNode;
              if (!((n_11285252.id == null))) {
              delete kxi_11285224.byId[n_11285252.id];
              }
              
              if ((n_11285252.kind == 5)) {
              var x_11290018 = n_11285252;
              if (!((x_11290018.onDetachImpl == null))) {
              x_11290018.onDetachImpl(x_11290018);
              }
              
              }
              
              if (!(kxi_11285224.surpressRedraws)) {
              n_11285252.dom = null;
              }
              
              break;
            }
            i_17530475 = addInt(i_17530475, 1);
          }
      } while(false);
    } while(false);
    kxi_11285224.patchLen = 0;
    L4: do {
      var i_11295013 = 0;
      var i_17530478 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_17530478 < kxi_11285224.patchLenV)) break L6;
            i_11295013 = i_17530478;
            var p_11295014 = nimCopy(null, kxi_11285224.patchesV[chckIndx(i_11295013, 0, (kxi_11285224.patchesV).length-1)], NTI10897211);
            HEX5BHEX5DHEX3D_10550054(p_11295014.parent, p_11295014.pos, p_11295014.newChild);
            if (!(!((p_11295014.newChild.dom == null)))) {
            failedAssertImpl_1305480(makeNimstrLit("karax.nim(431, 12) `p.newChild.dom != nil` "));
            }
            
            i_17530478 = addInt(i_17530478, 1);
          }
      } while(false);
    } while(false);
    kxi_11285224.patchLenV = 0;

  
}
function dodraw_11425414(kxi_11425416) {
    function HEX3Aanonymous_11425421() {
        dodraw_11425414(kxi_11425416);

      
    }

  BeforeRet: do {
    if ((kxi_11425416.renderer == null)) {
    break BeforeRet;
    }
    
    kxi_11425416.renderId = 0;
    if (kxi_11425416.rendering) {
    kxi_11425416.renderId = window.requestAnimationFrame(HEX3Aanonymous_11425421);
    break BeforeRet;
    }
    
    kxi_11425416.rendering = true;
    var rdata_11425436 = {hashPart: window.location.hash};
    var newtree_11425437 = kxi_11425416.renderer(rdata_11425436);
    kxi_11425416.runCount = addInt(kxi_11425416.runCount, 1);
    newtree_11425437.id = kxi_11425416.rootId;
    kxi_11425416.toFocus = null;
    if ((kxi_11425416.currentTree == null)) {
    var asdom_11425452 = toDom_11010154(newtree_11425437, true, kxi_11425416);
    replaceById_11175414(kxi_11425416.rootId, asdom_11425452);
    }
    else {
      if (!(same_11160072(kxi_11425416.currentTree, document.getElementById(kxi_11425416.rootId), 0))) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(667, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_11435201 = document.getElementById(kxi_11425416.rootId);
      diff_11310215(newtree_11425437, kxi_11425416.currentTree, null, olddom_11435201, kxi_11425416);
    }
    
    applyComponents_11360429(kxi_11425416);
    applyPatch_11285222(kxi_11425416);
    kxi_11425416.currentTree = newtree_11425437;
    if (!(same_11160072(kxi_11425416.currentTree, document.getElementById(kxi_11425416.rootId), 0))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(680, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_11425416.postRenderCallback == null))) {
    kxi_11425416.postRenderCallback(rdata_11425436);
    }
    
    if (!((kxi_11425416.toFocus == null))) {
    kxi_11425416.toFocus.focus();
    }
    
    kxi_11425416.rendering = false;
  } while (false);

  
}
function init_11450446(ev_11450448) {
    function HEX3Aanonymous_11450449() {
        dodraw_11425414(kxi_10897285[0]);

      
    }

    kxi_10897285[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_11450449);

  
}
function redraw_11450246(kxi_11450248) {
    function HEX3Aanonymous_11450401() {
        dodraw_11425414(kxi_11450248);

      
    }

    if ((kxi_11450248.renderId == 0)) {
    kxi_11450248.renderId = window.requestAnimationFrame(HEX3Aanonymous_11450401);
    }
    

  
}
function setRenderer_11450493(renderer_11450498, root_11450499, clientPostRenderCallback_11450503) {
    function HEX3Aanonymous_11455135() {
        redraw_11450246(kxi_10897285[0]);

      
    }

  var result_11450504 = null;

    if ((document.getElementById(root_11450499) == null)) {
    var msg_11450510 = (("Could not find a <div> with id=" + root_11450499) + ". Karax needs it as its rendering target.");
    raiseException({message: cstrToNimstr(msg_11450510), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    result_11450504 = {rootId: root_11450499, renderer: renderer_11450498, postRenderCallback: clientPostRenderCallback_11450503, patches: newSeq_11455012(60), patchesV: newSeq_11455064(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, rendering: false, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_10897285[0] = result_11450504;
    window.onload = init_11450446;
    window.onhashchange = HEX3Aanonymous_11455135;

  return result_11450504;

}
function setRenderer_11455238(renderer_11455242, root_11455243, clientPostRenderCallback_11455246) {
    function wrapRenderer_11455248(data_11455250) {
      var result_11455251 = null;

        result_11455251 = renderer_11455242();

      return result_11455251;

    }
    function wrapPostRender_11455265(data_11455267) {
        if (!((clientPostRenderCallback_11455246 == null))) {
        clientPostRenderCallback_11455246();
        }
        

      
    }

  var result_11455247 = null;

    result_11455247 = setRenderer_11450493(wrapRenderer_11455248, root_11455243, wrapPostRender_11455265);

  return result_11455247;

}
function newVNode_10560428(kind_10560430) {
  var result_10560431 = null;

    result_10560431 = {kind: kind_10560430, index: -1, m_type: NTI10465031, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_10560431;

}
function add_10550072(parent_10550074, kid_10550075) {
    parent_10550074.kids.push(kid_10550075);;

  
}
function tree_10560445(kind_10560447, kids_10560449) {
  var result_10560450 = null;

    result_10560450 = newVNode_10560428(kind_10560447);
    L1: do {
      var k_10560483 = null;
      var k_10560483_Idx = 0;
      var i_17530504 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530504 < (kids_10560449).length)) break L3;
            k_10560483 = kids_10560449; k_10560483_Idx = chckIndx(i_17530504, 0, (kids_10560449).length-1);
            add_10550072(result_10560450, k_10560483[k_10560483_Idx]);
            i_17530504 = addInt(i_17530504, 1);
          }
      } while(false);
    } while(false);

  return result_10560450;

}
function text_10560582(s_10560584) {
  var result_10560585 = null;

    result_10560585 = {kind: 0, text: toJSStr(s_10560584), index: -1, m_type: NTI10465031, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_10560585;

}
function verbatim_10561001(s_10561003) {
  var result_10561004 = null;

    result_10561004 = {kind: 6, text: s_10561003, index: -1, m_type: NTI10465031, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_10561004;

}
function canOpt_13515054(litOpt_13515056) {
  var result_13515057 = false;

  BeforeRet: do {
    result_13515057 = (0 < (litOpt_13515056.nfa).length);
    break BeforeRet;
  } while (false);

  return result_13515057;

}
function new_13621290() {
  var result_13621294 = null;

  BeforeRet: do {
    var r_13621401 = null;
    r_13621401 = ({sx: [], ss: [], si: 0});
    result_13621294 = r_13621401;
    break BeforeRet;
  } while (false);

  return result_13621294;

}
function newSeq_13621461(len_13621464) {
  var result_13621466 = [];

    result_13621466 = new Array(len_13621464); for (var i=0;i<len_13621464;++i) {result_13621466[i]={Field0: 0, Field1: 0, Field2: ({a: 0, b: 0})};}
  return result_13621466;

}
function newSeq_12885522(len_12885525) {
  var result_12885527 = [];

    result_12885527 = new Array(len_12885525); for (var i=0;i<len_12885525;++i) {result_12885527[i]=0;}
  return result_12885527;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1194653, name: null, trace: [], up: null}, "RangeDefect");

  
}
function newSubmatches_13621285(size_13621287) {
  var result_13621288 = null;

    result_13621288 = new_13621290();
    result_13621288.sx = nimCopy(null, newSeq_13621461(8), NTI13621465);
    result_13621288.ss = nimCopy(null, newSeq_12885522(chckRange(size_13621287, 0, 2147483647)), NTI12885526);
    result_13621288.si = 0;

  return result_13621288;

}
function cap_13655691(sm_13655693) {
  var result_13655694 = 0;

    result_13655694 = (sm_13655693.ss).length;

  return result_13655694;

}
function clear_13655649(sm_13655652, sm_13655652_Idx) {
    sm_13655652[sm_13655652_Idx].si = 0;

  
}
function clear_13930313(ms_13930316) {
    ms_13930316.i = 0;

  
}
function clear_13935014(ms_13935017) {
    clear_13655649(ms_13935017, "a");
    clear_13655649(ms_13935017, "b");
    clear_13930313(ms_13935017.m);
    if (ms_13935017.c.length < 0) { for (var i=ms_13935017.c.length;i<0;++i) ms_13935017.c.push(({parent: 0, bound: 0, idx: 0})); }
               else { ms_13935017.c.length = 0; };

  
}
function nsuFindChar(s_10115216, sub_10115217, start_10115218, last_10115219) {
    var Tmp1;

  var result_10115221 = 0;

  BeforeRet: do {
    if ((last_10115219 == 0)) {
    Tmp1 = (s_10115216).length - 1;
    }
    else {
    Tmp1 = last_10115219;
    }
    
    var last_10115223 = Tmp1;
    L2: do {
      var i_10115606 = 0;
      var colontmp__17530555 = 0;
      colontmp__17530555 = start_10115218;
      var res_17530556 = colontmp__17530555;
      L3: do {
          L4: while (true) {
          if (!(res_17530556 <= last_10115223)) break L4;
            i_10115606 = res_17530556;
            if ((sub_10115217 == s_10115216[chckIndx(i_10115606, 0, (s_10115216).length-1)])) {
            result_10115221 = i_10115606;
            break BeforeRet;
            }
            
            res_17530556 = addInt(res_17530556, 1);
          }
      } while(false);
    } while(false);
    result_10115221 = -1;
    break BeforeRet;
  } while (false);

  return result_10115221;

}
function runeAt_2563357(s_2563359, i_2563360) {
  var result_2563361 = 0;

    if ((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] <= 127)) {
    result_2563361 = chckRange(s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)], -2147483648, 2147483647);
    }
    else {
    if ((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] >>> 0) >>> 5) == 6)) {
    if ((i_2563360 <= subInt((s_2563359).length, 2))) {
    result_2563361 = chckRange((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] & 31) << 6) | (s_2563359[chckIndx(addInt(i_2563360, 1), 0, (s_2563359).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_2563361 = 65533;
    }
    
    }
    else {
    if ((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] >>> 0) >>> 4) == 14)) {
    if ((i_2563360 <= subInt((s_2563359).length, 3))) {
    result_2563361 = chckRange(((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] & 15) << 12) | ((s_2563359[chckIndx(addInt(i_2563360, 1), 0, (s_2563359).length-1)] & 63) << 6)) | (s_2563359[chckIndx(addInt(i_2563360, 2), 0, (s_2563359).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_2563361 = 65533;
    }
    
    }
    else {
    if ((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] >>> 0) >>> 3) == 30)) {
    if ((i_2563360 <= subInt((s_2563359).length, 4))) {
    result_2563361 = chckRange((((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] & 7) << 18) | ((s_2563359[chckIndx(addInt(i_2563360, 1), 0, (s_2563359).length-1)] & 63) << 12)) | ((s_2563359[chckIndx(addInt(i_2563360, 2), 0, (s_2563359).length-1)] & 63) << 6)) | (s_2563359[chckIndx(addInt(i_2563360, 3), 0, (s_2563359).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_2563361 = 65533;
    }
    
    }
    else {
    if ((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] >>> 0) >>> 2) == 62)) {
    if ((i_2563360 <= subInt((s_2563359).length, 5))) {
    result_2563361 = chckRange(((((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] & 3) << 24) | ((s_2563359[chckIndx(addInt(i_2563360, 1), 0, (s_2563359).length-1)] & 63) << 18)) | ((s_2563359[chckIndx(addInt(i_2563360, 2), 0, (s_2563359).length-1)] & 63) << 12)) | ((s_2563359[chckIndx(addInt(i_2563360, 3), 0, (s_2563359).length-1)] & 63) << 6)) | (s_2563359[chckIndx(addInt(i_2563360, 4), 0, (s_2563359).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_2563361 = 65533;
    }
    
    }
    else {
    if ((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] >>> 0) >>> 1) == 126)) {
    if ((i_2563360 <= subInt((s_2563359).length, 6))) {
    result_2563361 = chckRange((((((((s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)] & 1) << 30) | ((s_2563359[chckIndx(addInt(i_2563360, 1), 0, (s_2563359).length-1)] & 63) << 24)) | ((s_2563359[chckIndx(addInt(i_2563360, 2), 0, (s_2563359).length-1)] & 63) << 18)) | ((s_2563359[chckIndx(addInt(i_2563360, 3), 0, (s_2563359).length-1)] & 63) << 12)) | ((s_2563359[chckIndx(addInt(i_2563360, 4), 0, (s_2563359).length-1)] & 63) << 6)) | (s_2563359[chckIndx(addInt(i_2563360, 5), 0, (s_2563359).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_2563361 = 65533;
    }
    
    }
    else {
      result_2563361 = chckRange(s_2563359[chckIndx(i_2563360, 0, (s_2563359).length-1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_2563361;

}
function add_13630232(sm_13630235, sm_13630235_Idx, item_13630236) {
    var Tmp1;

    if ((((sm_13630235[sm_13630235_Idx].si)|0) == (sm_13630235[sm_13630235_Idx].sx).length)) {
    if (sm_13630235[sm_13630235_Idx].sx.length < (Tmp1 = ((sm_13630235[sm_13630235_Idx].sx).length * 2), Tmp1)) { for (var i=sm_13630235[sm_13630235_Idx].sx.length;i<Tmp1;++i) sm_13630235[sm_13630235_Idx].sx.push({Field0: 0, Field1: 0, Field2: ({a: 0, b: 0})}); }
               else { sm_13630235[sm_13630235_Idx].sx.length = Tmp1; };
    }
    
    nimCopy(sm_13630235[sm_13630235_Idx].sx[sm_13630235[sm_13630235_Idx].si], item_13630236, NTI13621265);
    sm_13630235[sm_13630235_Idx].ss[item_13630236.Field0] = sm_13630235[sm_13630235_Idx].si;
    sm_13630235[sm_13630235_Idx].si += 1;

  
}
function HEX2EHEX2E_3440220(a_3440225, b_3440227) {
  var result_3440229 = ({a: 0, b: 0});

    nimCopy(result_3440229, {a: a_3440225, b: b_3440227}, NTI2335020);

  return result_3440229;

}
function len_13655632(sm_13655634) {
  var result_13655635 = 0;

    result_13655635 = ((sm_13655634.si)|0);

  return result_13655635;

}
function hasState_13630214(sm_13630216, n_13630217) {
    var Tmp1;

  var result_13630218 = false;

    if (!(sm_13630216.ss[n_13630217] < sm_13630216.si)) Tmp1 = false; else {      Tmp1 = (sm_13630216.sx[sm_13630216.ss[n_13630217]].Field0 == n_13630217);    }    result_13630218 = Tmp1;

  return result_13630218;

}
function HEX3DHEX3D_3455064(a_3455066, b_3455067) {
  var result_3455068 = false;

  BeforeRet: do {
    result_3455068 = (((a_3455066)|0) == ((b_3455067)|0));
    break BeforeRet;
  } while (false);

  return result_3455068;

}
function contains_13130261(ut_13130263, utm_13130264) {
  var result_13130265 = false;

    result_13130265 = !(((ut_13130263 & utm_13130264) == 0));

  return result_13130265;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI1194635, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function unicodeTypes_13117027(cp_13117029) {
  var result_13117030 = 0;

    if (!((((cp_13117029)|0) <= 1114111))) {
    failedAssertImpl_1305480(makeNimstrLit("types.nim(23, 10) `cp.int <= 0x0010FFFF` "));
    }
    
    var blockOffset_13130201 = mulInt(((typesOffsets_13116675[chckIndx(divInt(((cp_13117029)|0), 64), 0, (typesOffsets_13116675).length-1)])|0), 64);
    var idx_13130202 = typesIndices_13116678[chckIndx(addInt(blockOffset_13130201, modInt(((cp_13117029)|0), 64)), 0, (typesIndices_13116678).length-1)];
    result_13117030 = ((typesData_13116689[chckIndx(idx_13130202, 0, (typesData_13116689).length-1)])|0);

  return result_13117030;

}
function isWord_13136040(r_13136042) {
  var result_13136043 = false;

    result_13136043 = contains_13130261(unicodeTypes_13117027(r_13136042), 128);

  return result_13136043;

}
function isDecimal_13140014(r_13140016) {
  var result_13140017 = false;

    result_13140017 = contains_13130261(unicodeTypes_13117027(r_13140016), 1);

  return result_13140017;

}
function isWhiteSpace_13200074(r_13200076) {
  var result_13200077 = false;

    result_13200077 = contains_13130261(unicodeTypes_13117027(r_13200076), 64);

  return result_13200077;

}
function hashWangYi1_10645417(x_10645420) {
  var result_10645421 = 0;

            if (typeof BigInt == 'undefined') {
          result_10645421 = x_10645420; // For Node < 10.4, etc. we do the old identity hash
        } else {          // Otherwise we match the low 32-bits of C/C++ hash
          function hi_xor_lo_js(a, b) {
            const prod = BigInt(a) * BigInt(b);
            const mask = (BigInt(1) << BigInt(64)) - BigInt(1);
            return (prod >> BigInt(64)) ^ (prod & mask);
          }
          const P0  = BigInt(0xa0761d64)<<BigInt(32)|BigInt(0x78bd642f);
          const P1  = BigInt(0xe7037ed1)<<BigInt(32)|BigInt(0xa0b428db);
          const P58 = BigInt(0xeb44acca)<<BigInt(32)|BigInt(0xb455d165)^BigInt(8);
          var res   = hi_xor_lo_js(hi_xor_lo_js(P0, BigInt(x_10645420) ^ P1), P58);
          result_10645421  = Number(res & ((BigInt(1) << BigInt(53)) - BigInt(1)));
        }

  return result_10645421;

}
function hash_12175001(x_12175004) {
  var result_12175005 = 0;

    result_12175005 = hashWangYi1_10645417(x_12175004);

  return result_12175005;

}
function isFilled_11810618(hcode_11810620) {
  var result_11810621 = false;

    result_11810621 = !((hcode_11810620 == 0));

  return result_11810621;

}
function nextTry_11815014(h_11815016, maxHash_11815017) {
  var result_11815018 = 0;

    result_11815018 = (addInt(h_11815016, 1) & maxHash_11815017);

  return result_11815018;

}
function rawGet_12170226(t_12170230, key_12170231, hc_12170232, hc_12170232_Idx) {
            var Tmp3;

  var result_12170233 = 0;

  BeforeRet: do {
    hc_12170232[hc_12170232_Idx] = hash_12175001(key_12170231);
    if ((hc_12170232[hc_12170232_Idx] == 0)) {
    hc_12170232[hc_12170232_Idx] = 314159265;
    }
    
    if (((t_12170230.data).length == 0)) {
    result_12170233 = -1;
    break BeforeRet;
    }
    
    var h_12180060 = (hc_12170232[hc_12170232_Idx] & (t_12170230.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11810618(t_12170230.data[chckIndx(h_12180060, 0, (t_12170230.data).length-1)].Field0)) break L2;
            if (!(t_12170230.data[chckIndx(h_12180060, 0, (t_12170230.data).length-1)].Field0 == hc_12170232[hc_12170232_Idx])) Tmp3 = false; else {              Tmp3 = HEX3DHEX3D_3455064(t_12170230.data[chckIndx(h_12180060, 0, (t_12170230.data).length-1)].Field1, key_12170231);            }          if (Tmp3) {
          result_12170233 = h_12180060;
          break BeforeRet;
          }
          
          h_12180060 = nextTry_11815014(h_12180060, (t_12170230.data).length - 1);
        }
    } while(false);
    result_12170233 = subInt(-1, h_12180060);
  } while (false);

  return result_12170233;

}
function contains_13220039(s_13220043, key_13220044) {
  var result_13220045 = false;

    var hc_13220046 = [0];
    var index_13220072 = rawGet_12170226(s_13220043, key_13220044, hc_13220046, 0);
    result_13220045 = (0 <= index_13220072);

  return result_13220045;

}
function HEX3CHEX3D_11906235(x_11906237, y_11906238) {
  var result_11906239 = false;

    result_11906239 = (((x_11906237)|0) <= ((y_11906238)|0));

  return result_11906239;

}
function contains_13200039(s_13200045, value_13200046) {
  var result_13200047 = false;

    result_13200047 = (HEX3CHEX3D_11906235(s_13200045.a, value_13200046) && HEX3CHEX3D_11906235(value_13200046, s_13200045.b));

  return result_13200047;

}
function contains_13195214(sr_13195221, r_13195222) {
  var result_13195223 = false;

    result_13195223 = false;
    L1: do {
      var sl_13195231 = null;
      var i_17530674 = 0;
      var L_17530675 = (sr_13195221).length;
      L2: do {
          L3: while (true) {
          if (!(i_17530674 < L_17530675)) break L3;
            sl_13195231 = sr_13195221[chckIndx(i_17530674, 0, (sr_13195221).length-1)];
            result_13195223 = contains_13200039(sl_13195231, r_13195222);
            if (result_13195223) {
            break L1;
            }
            
            i_17530674 = addInt(i_17530674, 1);
            if (!(((sr_13195221).length == L_17530675))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  return result_13195223;

}
function binarySearch_3459187(c_3459189, tab_3459191, len_3459192, stride_3459193) {
      var Tmp3;

  var result_3459194 = 0;

  BeforeRet: do {
    var n_3459195 = len_3459192;
    var t_3459197 = 0;
    L1: do {
        L2: while (true) {
        if (!(1 < n_3459195)) break L2;
          var m_3460001 = divInt(n_3459195, 2);
          var p_3460002 = addInt(t_3459197, mulInt(m_3460001, stride_3459193));
          if ((tab_3459191[chckIndx(p_3460002, 0, (tab_3459191).length-1)] <= ((c_3459189)|0))) {
          t_3459197 = p_3460002;
          n_3459195 = subInt(n_3459195, m_3460001);
          }
          else {
            n_3459195 = m_3460001;
          }
          
        }
    } while(false);
      if (!!((n_3459195 == 0))) Tmp3 = false; else {        Tmp3 = (tab_3459191[chckIndx(t_3459197, 0, (tab_3459191).length-1)] <= ((c_3459189)|0));      }    if (Tmp3) {
    result_3459194 = t_3459197;
    break BeforeRet;
    }
    
    result_3459194 = -1;
    break BeforeRet;
  } while (false);

  return result_3459194;

}
function nuctoLower(c_3475016) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_3475017 = 0;

  BeforeRet: do {
    var c_3475018 = c_3475016;
    var p_3475041 = binarySearch_3459187(c_3475018, toLowerRanges_3455223, 45, 3);
      if (!(0 <= p_3475041)) Tmp2 = false; else {        Tmp2 = (toLowerRanges_3455223[chckIndx(p_3475041, 0, (toLowerRanges_3455223).length-1)] <= ((c_3475018)|0));      }      if (!Tmp2) Tmp1 = false; else {        Tmp1 = (((c_3475018)|0) <= toLowerRanges_3455223[chckIndx(addInt(p_3475041, 1), 0, (toLowerRanges_3455223).length-1)]);      }    if (Tmp1) {
    result_3475017 = ((subInt(addInt(((c_3475018)|0), toLowerRanges_3455223[chckIndx(addInt(p_3475041, 2), 0, (toLowerRanges_3455223).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    p_3475041 = binarySearch_3459187(c_3475018, toLowerSinglets_3456470, 610, 2);
      if (!(0 <= p_3475041)) Tmp3 = false; else {        Tmp3 = (((c_3475018)|0) == toLowerSinglets_3456470[chckIndx(p_3475041, 0, (toLowerSinglets_3456470).length-1)]);      }    if (Tmp3) {
    result_3475017 = ((subInt(addInt(((c_3475018)|0), toLowerSinglets_3456470[chckIndx(addInt(p_3475041, 1), 0, (toLowerSinglets_3456470).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    result_3475017 = c_3475018;
    break BeforeRet;
  } while (false);

  return result_3475017;

}
function nuctoUpper(c_3490062) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_3490063 = 0;

  BeforeRet: do {
    var c_3490064 = c_3490062;
    var p_3490087 = binarySearch_3459187(c_3490064, toUpperRanges_3456615, 46, 3);
      if (!(0 <= p_3490087)) Tmp2 = false; else {        Tmp2 = (toUpperRanges_3456615[chckIndx(p_3490087, 0, (toUpperRanges_3456615).length-1)] <= ((c_3490064)|0));      }      if (!Tmp2) Tmp1 = false; else {        Tmp1 = (((c_3490064)|0) <= toUpperRanges_3456615[chckIndx(addInt(p_3490087, 1), 0, (toUpperRanges_3456615).length-1)]);      }    if (Tmp1) {
    result_3490063 = ((subInt(addInt(((c_3490064)|0), toUpperRanges_3456615[chckIndx(addInt(p_3490087, 2), 0, (toUpperRanges_3456615).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    p_3490087 = binarySearch_3459187(c_3490064, toUpperSinglets_3457879, 624, 2);
      if (!(0 <= p_3490087)) Tmp3 = false; else {        Tmp3 = (((c_3490064)|0) == toUpperSinglets_3457879[chckIndx(p_3490087, 0, (toUpperSinglets_3457879).length-1)]);      }    if (Tmp3) {
    result_3490063 = ((subInt(addInt(((c_3490064)|0), toUpperSinglets_3457879[chckIndx(addInt(p_3490087, 1), 0, (toUpperSinglets_3457879).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    result_3490063 = c_3490064;
    break BeforeRet;
  } while (false);

  return result_3490063;

}
function swapCase_13210014(r_13210016) {
  var result_13210017 = 0;

  BeforeRet: do {
    result_13210017 = nuctoLower(r_13210016);
    if (!(HEX3DHEX3D_3455064(result_13210017, r_13210016))) {
    break BeforeRet;
    }
    
    result_13210017 = nuctoUpper(r_13210016);
  } while (false);

  return result_13210017;

}
function isWordAscii_13145014(r_13145016) {
    var Tmp1;

  var result_13145017 = false;

    switch (((r_13145016)|0)) {
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 95:
      Tmp1 = true;
      break;
    default: 
      Tmp1 = false;
      break;
    }
    result_13145017 = Tmp1;

  return result_13145017;

}
function isDigitAscii_13205055(r_13205057) {
    var Tmp1;

  var result_13205058 = false;

    switch (((r_13205057)|0)) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      Tmp1 = true;
      break;
    default: 
      Tmp1 = false;
      break;
    }
    result_13205058 = Tmp1;

  return result_13205058;

}
function isWhiteSpaceAscii_13205014(r_13205016) {
    var Tmp1;

  var result_13205017 = false;

    switch (((r_13205016)|0)) {
    case 32:
    case 9:
    case 10:
    case 13:
    case 12:
    case 11:
      Tmp1 = true;
      break;
    default: 
      Tmp1 = false;
      break;
    }
    result_13205017 = Tmp1;

  return result_13205017;

}
function contains_11833029(a_11833031, b_11833032) {
  var result_11833033 = false;

    result_11833033 = !(((((b_11833032)|0) & ((a_11833031)|0)) == 0));

  return result_11833033;

}
function unicodeCategory_11900276(props_11900278) {
  var result_11900279 = 0;

    result_11900279 = props_11900278[chckIndx(0, 0, (props_11900278).length-1)];

  return result_11900279;

}
function properties_11885028(cp_11885030) {
  var result_11885031 = new Int32Array(4);

    if (!((((cp_11885030)|0) <= 1114111))) {
    failedAssertImpl_1305480(makeNimstrLit("properties.nim(197, 10) `cp.int <= 0x0010FFFF` "));
    }
    
    var blockOffset_11900201 = mulInt(((propsOffsets_11824946[chckIndx(divInt(((cp_11885030)|0), 128), 0, (propsOffsets_11824946).length-1)])|0), 128);
    var idx_11900202 = propsIndices_11832406[chckIndx(addInt(blockOffset_11900201, modInt(((cp_11885030)|0), 128)), 0, (propsIndices_11832406).length-1)];
    nimCopy(result_11885031, propsData_11832837[chckIndx(idx_11900202, 0, (propsData_11832837).length-1)], NTI11832408);

  return result_11885031;

}
function unicodeCategory_11900293(cp_11900295) {
  var result_11900296 = 0;

    result_11900296 = unicodeCategory_11900276(properties_11885028(cp_11900295));

  return result_11900296;

}
function isAnyAscii_13205080(r_13205082) {
    var Tmp1;

  var result_13205083 = false;

    if (!(((r_13205082)|0) <= 127)) Tmp1 = false; else {      Tmp1 = !(HEX3DHEX3D_3455064(r_13205082, 10));    }    result_13205083 = Tmp1;

  return result_13205083;

}
function match_13215014(n_13215016, r_13215017) {
    var Tmp1;

  var result_13215018 = false;

  BeforeRet: do {
    if ((((r_13215017)|0) < 0)) {
    result_13215018 = (n_13215016.kind == 45);
    break BeforeRet;
    }
    
    switch (n_13215016.kind) {
    case 45:
      Tmp1 = HEX3DHEX3D_3455064(r_13215017, -1);
      break;
    case 18:
      Tmp1 = isWord_13136040(r_13215017);
      break;
    case 22:
      Tmp1 = !(isWord_13136040(r_13215017));
      break;
    case 19:
      Tmp1 = isDecimal_13140014(r_13215017);
      break;
    case 23:
      Tmp1 = !(isDecimal_13140014(r_13215017));
      break;
    case 20:
      Tmp1 = isWhiteSpace_13200074(r_13215017);
      break;
    case 24:
      Tmp1 = !(isWhiteSpace_13200074(r_13215017));
      break;
    case 38:
    case 39:
      var matches_13225002 = (contains_13220039(n_13215016.cps, r_13215017) || contains_13195214(n_13215016.ranges, r_13215017));
      if (!(matches_13225002)) {
      L2: do {
        var nn_13225010 = null;
        var i_17413570 = 0;
        var L_17413571 = (n_13215016.shorthands).length;
        L3: do {
            L4: while (true) {
            if (!(i_17413570 < L_17413571)) break L4;
              nn_13225010 = n_13215016.shorthands[chckIndx(i_17413570, 0, (n_13215016.shorthands).length-1)];
              matches_13225002 = match_13215014(nn_13225010, r_13215017);
              if (matches_13225002) {
              break L2;
              }
              
              i_17413570 = addInt(i_17413570, 1);
              if (!(((n_13215016.shorthands).length == L_17413571))) {
              failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      }
      
      Tmp1 = ((matches_13225002 && (n_13215016.kind == 38)) || (!(matches_13225002) && (n_13215016.kind == 39)));
      break;
    case 26:
      Tmp1 = !(HEX3DHEX3D_3455064(r_13215017, 10));
      break;
    case 27:
      Tmp1 = true;
      break;
    case 1:
      Tmp1 = (HEX3DHEX3D_3455064(r_13215017, n_13215016.cp) || HEX3DHEX3D_3455064(r_13215017, swapCase_13210014(n_13215016.cp)));
      break;
    case 30:
      Tmp1 = isWordAscii_13145014(r_13215017);
      break;
    case 31:
      Tmp1 = isDigitAscii_13205055(r_13215017);
      break;
    case 32:
      Tmp1 = isWhiteSpaceAscii_13205014(r_13215017);
      break;
    case 21:
      Tmp1 = contains_11833029(n_13215016.cc, unicodeCategory_11900293(r_13215017));
      break;
    case 33:
      Tmp1 = !(isWordAscii_13145014(r_13215017));
      break;
    case 34:
      Tmp1 = !(isDigitAscii_13205055(r_13215017));
      break;
    case 35:
      Tmp1 = !(isWhiteSpaceAscii_13205014(r_13215017));
      break;
    case 25:
      Tmp1 = !(contains_11833029(n_13215016.cc, unicodeCategory_11900293(r_13215017)));
      break;
    case 36:
      Tmp1 = isAnyAscii_13205080(r_13215017);
      break;
    case 37:
      Tmp1 = (isAnyAscii_13205080(r_13215017) || HEX3DHEX3D_3455064(r_13215017, 10));
      break;
    default: 
      if (!((n_13215016.kind == 0))) {
      failedAssertImpl_1305480(makeNimstrLit("nodematch.nim(176, 12) `n.kind == reChar` "));
      }
      
      Tmp1 = HEX3DHEX3D_3455064(n_13215016.cp, r_13215017);
      break;
    }
    result_13215018 = Tmp1;
  } while (false);

  return result_13215018;

}
function isWordBoundary_13145077(r_13145079, nxt_13145080) {
    var Tmp1;
    var Tmp2;

  var result_13145081 = false;

    if (!(-1 < ((r_13145079)|0))) Tmp1 = false; else {      Tmp1 = isWord_13136040(r_13145079);    }    if (!(-1 < ((nxt_13145080)|0))) Tmp2 = false; else {      Tmp2 = isWord_13136040(nxt_13145080);    }    result_13145081 = (Tmp1 != Tmp2);

  return result_13145081;

}
function isWordBoundaryAscii_13160014(r_13160016, nxt_13160017) {
    var Tmp1;
    var Tmp2;

  var result_13160018 = false;

    if (!(-1 < ((r_13160016)|0))) Tmp1 = false; else {      Tmp1 = isWordAscii_13145014(r_13160016);    }    if (!(-1 < ((nxt_13160017)|0))) Tmp2 = false; else {      Tmp2 = isWordAscii_13145014(nxt_13160017);    }    result_13160018 = (Tmp1 != Tmp2);

  return result_13160018;

}
function match_13175014(n_13175016, r_13175017, nxt_13175018) {
    var Tmp1;

  var result_13175019 = false;

    switch (n_13175016.kind) {
    case 14:
    case 10:
      Tmp1 = HEX3DHEX3D_3455064(r_13175017, -1);
      break;
    case 15:
    case 11:
      Tmp1 = HEX3DHEX3D_3455064(nxt_13175018, -1);
      break;
    case 12:
      Tmp1 = (HEX3DHEX3D_3455064(r_13175017, -1) || HEX3DHEX3D_3455064(r_13175017, 10));
      break;
    case 13:
      Tmp1 = (HEX3DHEX3D_3455064(nxt_13175018, -1) || HEX3DHEX3D_3455064(nxt_13175018, 10));
      break;
    case 16:
      Tmp1 = isWordBoundary_13145077(r_13175017, nxt_13175018);
      break;
    case 17:
      Tmp1 = !(isWordBoundary_13145077(r_13175017, nxt_13175018));
      break;
    case 28:
      Tmp1 = isWordBoundaryAscii_13160014(r_13175017, nxt_13175018);
      break;
    case 29:
      Tmp1 = !(isWordBoundaryAscii_13160014(r_13175017, nxt_13175018));
      break;
    case 40:
      Tmp1 = HEX3DHEX3D_3455064(n_13175016.cp, nxt_13175018);
      break;
    case 42:
      Tmp1 = !(HEX3DHEX3D_3455064(n_13175016.cp, nxt_13175018));
      break;
    case 41:
      Tmp1 = HEX3DHEX3D_3455064(n_13175016.cp, r_13175017);
      break;
    case 43:
      Tmp1 = !(HEX3DHEX3D_3455064(n_13175016.cp, r_13175017));
      break;
    default: 
      if (true) {
      failedAssertImpl_1305480(makeNimstrLit("nodematch.nim(74, 12) `false` "));
      }
      
      Tmp1 = false;
      break;
    }
    result_13175019 = Tmp1;

  return result_13175019;

}
function submatch2_14410236(smA_14410239, smA_14410239_Idx, smB_14410240, smB_14410240_Idx, regex_14410241, i_14410242, cPrev_14410243, c_14410244) {
                          var Tmp9;

  BeforeRet: do {
    clear_13655649(smB_14410240, smB_14410240_Idx);
    var matched_14410249 = true;
    L1: do {
      var n_14410250 = 0;
      var capt_14410251 = 0;
      var bounds_14410252 = ({a: 0, b: 0});
      L2: do {
        var i_17530661 = 0;
        var colontmp__17530662 = 0;
        colontmp__17530662 = subInt(len_13655632(smA_14410239[smA_14410239_Idx]), 1);
        var res_17530663 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_17530663 <= colontmp__17530662)) break L4;
              i_17530661 = res_17530663;
              n_14410250 = smA_14410239[smA_14410239_Idx].sx[chckIndx(i_17530661, 0, (smA_14410239[smA_14410239_Idx].sx).length-1)]["Field0"];
              capt_14410251 = smA_14410239[smA_14410239_Idx].sx[chckIndx(i_17530661, 0, (smA_14410239[smA_14410239_Idx].sx).length-1)]["Field1"];
              nimCopy(bounds_14410252, smA_14410239[smA_14410239_Idx].sx[chckIndx(i_17530661, 0, (smA_14410239[smA_14410239_Idx].sx).length-1)]["Field2"], NTI2335020);
              if ((regex_14410241.litOpt.nfa[chckIndx(n_14410250, 0, (regex_14410241.litOpt.nfa).length-1)].kind == 45)) {
              add_13630232(smB_14410240, smB_14410240_Idx, {Field0: n_14410250, Field1: capt_14410251, Field2: nimCopy(null, bounds_14410252, NTI2335020)});
              break L1;
              }
              
              L5: do {
                var nti_14420010 = 0;
                var nt_14420011 = 0;
                var colontmp__17530656 = [];
                colontmp__17530656 = regex_14410241.litOpt.nfa[chckIndx(n_14410250, 0, (regex_14410241.litOpt.nfa).length-1)].next;
                var i_17530657 = 0;
                var L_17530658 = (colontmp__17530656).length;
                L6: do {
                    L7: while (true) {
                    if (!(i_17530657 < L_17530658)) break L7;
                      nti_14420010 = i_17530657;
                      nt_14420011 = colontmp__17530656[chckIndx(i_17530657, 0, (colontmp__17530656).length-1)];
                      L8: do {
                        if (hasState_13630214(smB_14410240[smB_14410240_Idx], nt_14420011)) {
                        break L8;
                        }
                        
                          if (!!((regex_14410241.litOpt.nfa[chckIndx(nt_14420011, 0, (regex_14410241.litOpt.nfa).length-1)].kind == 45))) Tmp9 = false; else {                            Tmp9 = !(match_13215014(regex_14410241.litOpt.nfa[chckIndx(nt_14420011, 0, (regex_14410241.litOpt.nfa).length-1)], c_14410244));                          }                        if (Tmp9) {
                        break L8;
                        }
                        
                        matched_14410249 = true;
                        if ((-1 < regex_14410241.litOpt.tns.allZ[chckIndx(n_14410250, 0, (regex_14410241.litOpt.tns.allZ).length-1)][chckIndx(nti_14420010, 0, (regex_14410241.litOpt.tns.allZ[chckIndx(n_14410250, 0, (regex_14410241.litOpt.tns.allZ).length-1)]).length-1)])) {
                        L10: do {
                          var z_14455008 = null;
                          var colontmp__17530652 = [];
                          colontmp__17530652 = regex_14410241.litOpt.tns.z[chckIndx(regex_14410241.litOpt.tns.allZ[chckIndx(n_14410250, 0, (regex_14410241.litOpt.tns.allZ).length-1)][chckIndx(nti_14420010, 0, (regex_14410241.litOpt.tns.allZ[chckIndx(n_14410250, 0, (regex_14410241.litOpt.tns.allZ).length-1)]).length-1)], 0, (regex_14410241.litOpt.tns.z).length-1)];
                          var i_17530653 = 0;
                          var L_17530654 = (colontmp__17530652).length;
                          L11: do {
                              L12: while (true) {
                              if (!(i_17530653 < L_17530654)) break L12;
                                z_14455008 = colontmp__17530652[chckIndx(i_17530653, 0, (colontmp__17530652).length-1)];
                                if ((ConstSet2[z_14455008.kind] != undefined)) {
                                matched_14410249 = match_13175014(z_14455008, c_14410244, cPrev_14410243);
                                }
                                
                                if (!(matched_14410249)) {
                                break L10;
                                }
                                
                                i_17530653 = addInt(i_17530653, 1);
                                if (!(((colontmp__17530652).length == L_17530654))) {
                                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          } while(false);
                        } while(false);
                        }
                        
                        if (matched_14410249) {
                        add_13630232(smB_14410240, smB_14410240_Idx, {Field0: nt_14420011, Field1: capt_14410251, Field2: HEX2EHEX2E_3440220(i_14410242, bounds_14410252.b)});
                        if ((regex_14410241.litOpt.nfa[chckIndx(nt_14420011, 0, (regex_14410241.litOpt.nfa).length-1)].kind == 45)) {
                        var Tmp13 = smA_14410239[smA_14410239_Idx]; smA_14410239[smA_14410239_Idx] = smB_14410240[smB_14410240_Idx]; smB_14410240[smB_14410240_Idx] = Tmp13;                        break BeforeRet;
                        }
                        
                        }
                        
                      } while(false);
                      i_17530657 = addInt(i_17530657, 1);
                      if (!(((colontmp__17530656).length == L_17530658))) {
                      failedAssertImpl_1305480(makeNimstrLit("iterators.nim(137, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while(false);
              } while(false);
              res_17530663 = addInt(res_17530663, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    var Tmp14 = smA_14410239[smA_14410239_Idx]; smA_14410239[smA_14410239_Idx] = smB_14410240[smB_14410240_Idx]; smB_14410240[smB_14410240_Idx] = Tmp14;  } while (false);

  
}
function HEX5BHEX5D_13621601(sm_13621603, i_13621604) {
  var result_13621605 = {Field0: 0, Field1: 0, Field2: ({a: 0, b: 0})};

    nimCopy(result_13621605, sm_13621603.sx[i_13621604], NTI13621265);

  return result_13621605;

}
function matchPrefixImpl_14465033(text_14465035, regex_14465036, smA_14465038, smA_14465038_Idx, smB_14465039, smB_14465039_Idx, start_14465040, limit_14465041) {
                var Tmp5;
          var Tmp8;

  var result_14465042 = 0;

  BeforeRet: do {
    if (!((start_14465040 < (text_14465035).length))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(307, 12) `start < len(text)` "));
    }
    
    if (!((limit_14465041 <= start_14465040))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(308, 12) `start >= limit` "));
    }
    
    clear_13655649(smA_14465038, smA_14465038_Idx);
    clear_13655649(smB_14465039, smB_14465039_Idx);
    var c_14490201 = -1;
    var cPrev_14490202 = runeAt_2563357(text_14465035, start_14465040);
    var i_14490203 = start_14465040;
    var iPrev_14490204 = start_14465040;
    add_13630232(smA_14465038, smA_14465038_Idx, {Field0: 0, Field1: -1, Field2: HEX2EHEX2E_3440220(i_14490203, subInt(i_14490203, 1))});
    L1: do {
        L2: while (true) {
        if (!(limit_14465041 < i_14490203)) break L2;
          if (!((0 < i_14490203))) {
          failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(259, 12) `i > 0` "));
          }
          
          if (!((i_14490203 <= subInt((text_14465035).length, 1)))) {
          failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(260, 12) `i <= text.len - 1` "));
          }
          
          i_14490203 = subInt(i_14490203, 1);
          L3: do {
              L4: while (true) {
                if (!(0 < i_14490203)) Tmp5 = false; else {                  Tmp5 = ((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >> 6) == 2);                }              if (!Tmp5) break L4;
                i_14490203 = subInt(i_14490203, 1);
              }
          } while(false);
          if ((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] <= 127)) {
          c_14490201 = chckRange(text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)], -2147483648, 2147483647);
          }
          else {
          if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 5) == 6)) {
          if ((i_14490203 <= subInt((text_14465035).length, 2))) {
          c_14490201 = chckRange((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 31) << 6) | (text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
          }
          else {
            c_14490201 = 65533;
          }
          
          }
          else {
          if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 4) == 14)) {
          if ((i_14490203 <= subInt((text_14465035).length, 3))) {
          c_14490201 = chckRange(((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 15) << 12) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
          }
          else {
            c_14490201 = 65533;
          }
          
          }
          else {
          if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 3) == 30)) {
          if ((i_14490203 <= subInt((text_14465035).length, 4))) {
          c_14490201 = chckRange((((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 7) << 18) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 12)) | ((text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 3), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
          }
          else {
            c_14490201 = 65533;
          }
          
          }
          else {
          if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 2) == 62)) {
          if ((i_14490203 <= subInt((text_14465035).length, 5))) {
          c_14490201 = chckRange(((((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 3) << 24) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 18)) | ((text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63) << 12)) | ((text_14465035[chckIndx(addInt(i_14490203, 3), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 4), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
          }
          else {
            c_14490201 = 65533;
          }
          
          }
          else {
          if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 1) == 126)) {
          if ((i_14490203 <= subInt((text_14465035).length, 6))) {
          c_14490201 = chckRange((((((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 1) << 30) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 24)) | ((text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63) << 18)) | ((text_14465035[chckIndx(addInt(i_14490203, 3), 0, (text_14465035).length-1)] & 63) << 12)) | ((text_14465035[chckIndx(addInt(i_14490203, 4), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 5), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
          }
          else {
            c_14490201 = 65533;
          }
          
          }
          else {
            c_14490201 = chckRange(text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)], -2147483648, 2147483647);
          }
          }}}}}
          submatch2_14410236(smA_14465038, smA_14465038_Idx, smB_14465039, smB_14465039_Idx, regex_14465036, iPrev_14490204, cPrev_14490202, c_14490201);
          if ((len_13655632(smA_14465038[smA_14465038_Idx]) == 0)) {
          result_14465042 = -1;
          break BeforeRet;
          }
          
          if ((regex_14465036.litOpt.nfa[chckIndx(HEX5BHEX5D_13621601(smA_14465038[smA_14465038_Idx], 0).Field0, 0, (regex_14465036.litOpt.nfa).length-1)].kind == 45)) {
          result_14465042 = HEX5BHEX5D_13621601(smA_14465038[smA_14465038_Idx], 0).Field2.a;
          break BeforeRet;
          }
          
          iPrev_14490204 = i_14490203;
          cPrev_14490202 = c_14490201;
        }
    } while(false);
    if ((0 < i_14490203)) {
    if (!((0 < i_14490203))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(259, 12) `i > 0` "));
    }
    
    if (!((i_14490203 <= subInt((text_14465035).length, 1)))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(260, 12) `i <= text.len - 1` "));
    }
    
    i_14490203 = subInt(i_14490203, 1);
    L6: do {
        L7: while (true) {
          if (!(0 < i_14490203)) Tmp8 = false; else {            Tmp8 = ((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >> 6) == 2);          }        if (!Tmp8) break L7;
          i_14490203 = subInt(i_14490203, 1);
        }
    } while(false);
    if ((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] <= 127)) {
    c_14490201 = chckRange(text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)], -2147483648, 2147483647);
    }
    else {
    if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 5) == 6)) {
    if ((i_14490203 <= subInt((text_14465035).length, 2))) {
    c_14490201 = chckRange((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 31) << 6) | (text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      c_14490201 = 65533;
    }
    
    }
    else {
    if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 4) == 14)) {
    if ((i_14490203 <= subInt((text_14465035).length, 3))) {
    c_14490201 = chckRange(((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 15) << 12) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      c_14490201 = 65533;
    }
    
    }
    else {
    if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 3) == 30)) {
    if ((i_14490203 <= subInt((text_14465035).length, 4))) {
    c_14490201 = chckRange((((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 7) << 18) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 12)) | ((text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 3), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      c_14490201 = 65533;
    }
    
    }
    else {
    if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 2) == 62)) {
    if ((i_14490203 <= subInt((text_14465035).length, 5))) {
    c_14490201 = chckRange(((((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 3) << 24) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 18)) | ((text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63) << 12)) | ((text_14465035[chckIndx(addInt(i_14490203, 3), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 4), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      c_14490201 = 65533;
    }
    
    }
    else {
    if ((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] >>> 0) >>> 1) == 126)) {
    if ((i_14490203 <= subInt((text_14465035).length, 6))) {
    c_14490201 = chckRange((((((((text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)] & 1) << 30) | ((text_14465035[chckIndx(addInt(i_14490203, 1), 0, (text_14465035).length-1)] & 63) << 24)) | ((text_14465035[chckIndx(addInt(i_14490203, 2), 0, (text_14465035).length-1)] & 63) << 18)) | ((text_14465035[chckIndx(addInt(i_14490203, 3), 0, (text_14465035).length-1)] & 63) << 12)) | ((text_14465035[chckIndx(addInt(i_14490203, 4), 0, (text_14465035).length-1)] & 63) << 6)) | (text_14465035[chckIndx(addInt(i_14490203, 5), 0, (text_14465035).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      c_14490201 = 65533;
    }
    
    }
    else {
      c_14490201 = chckRange(text_14465035[chckIndx(i_14490203, 0, (text_14465035).length-1)], -2147483648, 2147483647);
    }
    }}}}}
    }
    else {
      c_14490201 = -1;
    }
    
    submatch2_14410236(smA_14465038, smA_14465038_Idx, smB_14465039, smB_14465039_Idx, regex_14465036, iPrev_14490204, cPrev_14490202, c_14490201);
    L9: do {
      var n_15075201 = 0;
      var capt_15075202 = 0;
      var bounds_15075203 = ({a: 0, b: 0});
      L10: do {
        var i_17530637 = 0;
        var colontmp__17530638 = 0;
        colontmp__17530638 = subInt(len_13655632(smA_14465038[smA_14465038_Idx]), 1);
        var res_17530639 = 0;
        L11: do {
            L12: while (true) {
            if (!(res_17530639 <= colontmp__17530638)) break L12;
              i_17530637 = res_17530639;
              n_15075201 = smA_14465038[smA_14465038_Idx].sx[chckIndx(i_17530637, 0, (smA_14465038[smA_14465038_Idx].sx).length-1)]["Field0"];
              capt_15075202 = smA_14465038[smA_14465038_Idx].sx[chckIndx(i_17530637, 0, (smA_14465038[smA_14465038_Idx].sx).length-1)]["Field1"];
              nimCopy(bounds_15075203, smA_14465038[smA_14465038_Idx].sx[chckIndx(i_17530637, 0, (smA_14465038[smA_14465038_Idx].sx).length-1)]["Field2"], NTI2335020);
              if ((regex_14465036.litOpt.nfa[chckIndx(n_15075201, 0, (regex_14465036.litOpt.nfa).length-1)].kind == 45)) {
              result_14465042 = bounds_15075203.a;
              break BeforeRet;
              }
              
              res_17530639 = addInt(res_17530639, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    result_14465042 = -1;
    break BeforeRet;
  } while (false);

  return result_14465042;

}
function bwRuneAt_13657132(s_13657134, n_13657135) {
          var Tmp3;

  var result_13657136 = 0;

    if (!((0 <= n_13657135))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(46, 12) `n >= 0` "));
    }
    
    if (!((n_13657135 <= subInt((s_13657134).length, 1)))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(47, 12) `n <= s.len - 1` "));
    }
    
    var n_13680201 = n_13657135;
    L1: do {
        L2: while (true) {
          if (!(0 < n_13680201)) Tmp3 = false; else {            Tmp3 = ((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] >> 6) == 2);          }        if (!Tmp3) break L2;
          n_13680201 = subInt(n_13680201, 1);
        }
    } while(false);
    if ((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] <= 127)) {
    result_13657136 = chckRange(s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)], -2147483648, 2147483647);
    }
    else {
    if ((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] >>> 0) >>> 5) == 6)) {
    if ((n_13680201 <= subInt((s_13657134).length, 2))) {
    result_13657136 = chckRange((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] & 31) << 6) | (s_13657134[chckIndx(addInt(n_13680201, 1), 0, (s_13657134).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_13657136 = 65533;
    }
    
    }
    else {
    if ((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] >>> 0) >>> 4) == 14)) {
    if ((n_13680201 <= subInt((s_13657134).length, 3))) {
    result_13657136 = chckRange(((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] & 15) << 12) | ((s_13657134[chckIndx(addInt(n_13680201, 1), 0, (s_13657134).length-1)] & 63) << 6)) | (s_13657134[chckIndx(addInt(n_13680201, 2), 0, (s_13657134).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_13657136 = 65533;
    }
    
    }
    else {
    if ((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] >>> 0) >>> 3) == 30)) {
    if ((n_13680201 <= subInt((s_13657134).length, 4))) {
    result_13657136 = chckRange((((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] & 7) << 18) | ((s_13657134[chckIndx(addInt(n_13680201, 1), 0, (s_13657134).length-1)] & 63) << 12)) | ((s_13657134[chckIndx(addInt(n_13680201, 2), 0, (s_13657134).length-1)] & 63) << 6)) | (s_13657134[chckIndx(addInt(n_13680201, 3), 0, (s_13657134).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_13657136 = 65533;
    }
    
    }
    else {
    if ((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] >>> 0) >>> 2) == 62)) {
    if ((n_13680201 <= subInt((s_13657134).length, 5))) {
    result_13657136 = chckRange(((((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] & 3) << 24) | ((s_13657134[chckIndx(addInt(n_13680201, 1), 0, (s_13657134).length-1)] & 63) << 18)) | ((s_13657134[chckIndx(addInt(n_13680201, 2), 0, (s_13657134).length-1)] & 63) << 12)) | ((s_13657134[chckIndx(addInt(n_13680201, 3), 0, (s_13657134).length-1)] & 63) << 6)) | (s_13657134[chckIndx(addInt(n_13680201, 4), 0, (s_13657134).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_13657136 = 65533;
    }
    
    }
    else {
    if ((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] >>> 0) >>> 1) == 126)) {
    if ((n_13680201 <= subInt((s_13657134).length, 6))) {
    result_13657136 = chckRange((((((((s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)] & 1) << 30) | ((s_13657134[chckIndx(addInt(n_13680201, 1), 0, (s_13657134).length-1)] & 63) << 24)) | ((s_13657134[chckIndx(addInt(n_13680201, 2), 0, (s_13657134).length-1)] & 63) << 18)) | ((s_13657134[chckIndx(addInt(n_13680201, 3), 0, (s_13657134).length-1)] & 63) << 12)) | ((s_13657134[chckIndx(addInt(n_13680201, 4), 0, (s_13657134).length-1)] & 63) << 6)) | (s_13657134[chckIndx(addInt(n_13680201, 5), 0, (s_13657134).length-1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_13657136 = 65533;
    }
    
    }
    else {
      result_13657136 = chckRange(s_13657134[chckIndx(n_13680201, 0, (s_13657134).length-1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_13657136;

}
function len_13930234(ms_13930236) {
  var result_13930237 = 0;

    result_13930237 = ms_13930236.i;

  return result_13930237;

}
function add_13930251(ms_13930254, m_13930255) {
    var size_13930257 = 0;
    L1: do {
      var i_13930264 = 0;
      var colontmp__17530787 = 0;
      colontmp__17530787 = subInt(len_13930234(ms_13930254), 1);
      var res_17530792 = colontmp__17530787;
      L2: do {
          L3: while (true) {
          if (!(0 <= res_17530792)) break L3;
            i_13930264 = res_17530792;
            if ((nimMax(ms_13930254.s[chckIndx(i_13930264, 0, (ms_13930254.s).length-1)].Field1.b, ms_13930254.s[chckIndx(i_13930264, 0, (ms_13930254.s).length-1)].Field1.a) < m_13930255.Field1.a)) {
            size_13930257 = addInt(i_13930264, 1);
            break L1;
            }
            
            res_17530792 = subInt(res_17530792, 1);
          }
      } while(false);
    } while(false);
    ms_13930254.i = size_13930257;
    if ((ms_13930254.i <= subInt((ms_13930254.s).length, 1))) {
    nimCopy(ms_13930254.s[chckIndx(ms_13930254.i, 0, (ms_13930254.s).length-1)], m_13930255, NTI13930217);
    }
    else {
      var Tmp4 = nimCopy(null, m_13930255, NTI13930217);
    ms_13930254.s.push(Tmp4);;
    }
    
    ms_13930254.i = addInt(ms_13930254.i, 1);

  
}
function submatch_13960062(ms_13960065, regex_13960066, i_13960067, cPrev_13960068, c_13960069) {
                      var Tmp7;
                      var Tmp8;
                      var Tmp10;

    clear_13655649(ms_13960065, "b");
    var captx_13965002 = 0;
    var matched_13965003 = true;
    var eoeFound_13965004 = false;
    var smi_13965006 = 0;
    L1: do {
        L2: while (true) {
        if (!(smi_13965006 < len_13655632(ms_13960065.a))) break L2;
          L3: do {
            var nti_13980010 = 0;
            var nt_13980011 = 0;
            var colontmp__17530782 = [];
            colontmp__17530782 = regex_13960066.nfa[chckIndx(HEX5BHEX5D_13621601(ms_13960065.a, smi_13965006).Field0, 0, (regex_13960066.nfa).length-1)].next;
            var i_17530783 = 0;
            var L_17530784 = (colontmp__17530782).length;
            L4: do {
                L5: while (true) {
                if (!(i_17530783 < L_17530784)) break L5;
                  nti_13980010 = i_17530783;
                  nt_13980011 = colontmp__17530782[chckIndx(i_17530783, 0, (colontmp__17530782).length-1)];
                  L6: do {
                    if (hasState_13630214(ms_13960065.b, nt_13980011)) {
                    break L6;
                    }
                    
                      if (!!((regex_13960066.nfa[chckIndx(nt_13980011, 0, (regex_13960066.nfa).length-1)].kind == 45))) Tmp7 = false; else {                        Tmp7 = !(match_13215014(regex_13960066.nfa[chckIndx(nt_13980011, 0, (regex_13960066.nfa).length-1)], c_13960069));                      }                    if (Tmp7) {
                    break L6;
                    }
                    
                    matched_13965003 = true;
                    captx_13965002 = HEX5BHEX5D_13621601(ms_13960065.a, smi_13965006).Field1;
                    if ((-1 < (Tmp8 = regex_13960066.transitions.allZ[chckIndx(HEX5BHEX5D_13621601(ms_13960065.a, smi_13965006).Field0, 0, (regex_13960066.transitions.allZ).length-1)], Tmp8)[chckIndx(nti_13980010, 0, (Tmp8).length-1)])) {
                    L9: do {
                      var z_14035008 = null;
                      var colontmp__17530778 = [];
                      colontmp__17530778 = regex_13960066.transitions.z[chckIndx((Tmp10 = regex_13960066.transitions.allZ[chckIndx(HEX5BHEX5D_13621601(ms_13960065.a, smi_13965006).Field0, 0, (regex_13960066.transitions.allZ).length-1)], Tmp10)[chckIndx(nti_13980010, 0, (Tmp10).length-1)], 0, (regex_13960066.transitions.z).length-1)];
                      var i_17530779 = 0;
                      var L_17530780 = (colontmp__17530778).length;
                      L11: do {
                          L12: while (true) {
                          if (!(i_17530779 < L_17530780)) break L12;
                            z_14035008 = colontmp__17530778[chckIndx(i_17530779, 0, (colontmp__17530778).length-1)];
                            if (!(matched_13965003)) {
                            break L9;
                            }
                            
                            switch (z_14035008.kind) {
                            case 3:
                            case 4:
                              ms_13960065.c.push({parent: captx_13965002, bound: i_13960067, idx: z_14035008.idx});;
                              captx_13965002 = ((subInt((ms_13960065.c).length, 1))|0);
                              break;
                            case 10:
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                            case 16:
                            case 17:
                            case 28:
                            case 29:
                            case 40:
                            case 41:
                            case 42:
                            case 43:
                              matched_13965003 = match_13175014(z_14035008, cPrev_13960068, c_13960069);
                              break;
                            default: 
                              if (true) {
                              failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(178, 20) `false` "));
                              }
                              
                              break;
                            }
                            i_17530779 = addInt(i_17530779, 1);
                            if (!(((colontmp__17530778).length == L_17530780))) {
                            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    }
                    
                    if (matched_13965003) {
                    if ((regex_13960066.nfa[chckIndx(nt_13980011, 0, (regex_13960066.nfa).length-1)].kind == 45)) {
                    add_13930251(ms_13960065.m, {Field0: captx_13965002, Field1: HEX2EHEX2E_3440220(HEX5BHEX5D_13621601(ms_13960065.a, smi_13965006).Field2.a, subInt(i_13960067, 1))});
                    clear_13655649(ms_13960065, "a");
                    if (!(eoeFound_13965004)) {
                    eoeFound_13965004 = true;
                    add_13630232(ms_13960065, "a", {Field0: 0, Field1: -1, Field2: HEX2EHEX2E_3440220(i_13960067, subInt(i_13960067, 1))});
                    }
                    
                    smi_13965006 = -1;
                    break L3;
                    }
                    
                    add_13630232(ms_13960065, "b", {Field0: nt_13980011, Field1: captx_13965002, Field2: HEX2EHEX2E_3440220(HEX5BHEX5D_13621601(ms_13960065.a, smi_13965006).Field2.a, subInt(i_13960067, 1))});
                    }
                    
                  } while(false);
                  i_17530783 = addInt(i_17530783, 1);
                  if (!(((colontmp__17530782).length == L_17530784))) {
                  failedAssertImpl_1305480(makeNimstrLit("iterators.nim(137, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while(false);
          } while(false);
          smi_13965006 = addInt(smi_13965006, 1);
        }
    } while(false);
    var Tmp13 = ms_13960065.a; ms_13960065.a = ms_13960065.b; ms_13960065.b = Tmp13;
  
}
function hasMatches_13930342(ms_13930344) {
  var result_13930345 = false;

  BeforeRet: do {
    result_13930345 = (0 < len_13930234(ms_13930344.m));
    break BeforeRet;
  } while (false);

  return result_13930345;

}
function findSomeImpl_14095036(text_14095038, regex_14095039, ms_14095041, start_14095042, flags_14095046) {
      var Tmp1;
      var Tmp2;

  var result_14095047 = 0;

  BeforeRet: do {
    if ((ms_14095041.a == null)) {
    if (!((ms_14095041.b == null))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(93, 12) `ms.b == nil` "));
    }
    
    ms_14095041.a = newSubmatches_13621285((regex_14095039.nfa).length);
    ms_14095041.b = newSubmatches_13621285((regex_14095039.nfa).length);
    }
    
      if (!((regex_14095039.nfa).length <= cap_13655691(ms_14095041.a))) Tmp1 = false; else {        Tmp1 = ((regex_14095039.nfa).length <= cap_13655691(ms_14095041.b));      }    if (!(Tmp1)) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(202, 16) `ms.a.cap >= regex.nfa.len and ms.b.cap >= regex.nfa.len` "));
    }
    
    clear_13935014(ms_14095041);
    var c_14130201 = -1;
    var cPrev_14130202 = -1;
    var i_14130203 = start_14095042;
    var iPrev_14130204 = start_14095042;
    var optFlag_14135007 = (flags_14095046[3] != undefined);
    add_13630232(ms_14095041, "a", {Field0: 0, Field1: -1, Field2: HEX2EHEX2E_3440220(i_14130203, subInt(i_14130203, 1))});
      if (!(0 <= subInt(start_14095042, 1))) Tmp2 = false; else {        Tmp2 = (subInt(start_14095042, 1) <= subInt((text_14095038).length, 1));      }    if (Tmp2) {
    cPrev_14130202 = bwRuneAt_13657132(text_14095038, subInt(start_14095042, 1));
    }
    
    L3: do {
        L4: while (true) {
        if (!(i_14130203 < (text_14095038).length)) break L4;
          if ((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] <= 127)) {
          c_14130201 = chckRange(text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)], -2147483648, 2147483647);
          i_14130203 = addInt(i_14130203, 1);
          }
          else {
          if ((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] >>> 0) >>> 5) == 6)) {
          if ((i_14130203 <= subInt((text_14095038).length, 2))) {
          c_14130201 = chckRange((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] & 31) << 6) | (text_14095038[chckIndx(addInt(i_14130203, 1), 0, (text_14095038).length-1)] & 63)), -2147483648, 2147483647);
          i_14130203 = addInt(i_14130203, 2);
          }
          else {
            c_14130201 = 65533;
            i_14130203 = addInt(i_14130203, 1);
          }
          
          }
          else {
          if ((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] >>> 0) >>> 4) == 14)) {
          if ((i_14130203 <= subInt((text_14095038).length, 3))) {
          c_14130201 = chckRange(((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] & 15) << 12) | ((text_14095038[chckIndx(addInt(i_14130203, 1), 0, (text_14095038).length-1)] & 63) << 6)) | (text_14095038[chckIndx(addInt(i_14130203, 2), 0, (text_14095038).length-1)] & 63)), -2147483648, 2147483647);
          i_14130203 = addInt(i_14130203, 3);
          }
          else {
            c_14130201 = 65533;
            i_14130203 = addInt(i_14130203, 1);
          }
          
          }
          else {
          if ((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] >>> 0) >>> 3) == 30)) {
          if ((i_14130203 <= subInt((text_14095038).length, 4))) {
          c_14130201 = chckRange((((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] & 7) << 18) | ((text_14095038[chckIndx(addInt(i_14130203, 1), 0, (text_14095038).length-1)] & 63) << 12)) | ((text_14095038[chckIndx(addInt(i_14130203, 2), 0, (text_14095038).length-1)] & 63) << 6)) | (text_14095038[chckIndx(addInt(i_14130203, 3), 0, (text_14095038).length-1)] & 63)), -2147483648, 2147483647);
          i_14130203 = addInt(i_14130203, 4);
          }
          else {
            c_14130201 = 65533;
            i_14130203 = addInt(i_14130203, 1);
          }
          
          }
          else {
          if ((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] >>> 0) >>> 2) == 62)) {
          if ((i_14130203 <= subInt((text_14095038).length, 5))) {
          c_14130201 = chckRange(((((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] & 3) << 24) | ((text_14095038[chckIndx(addInt(i_14130203, 1), 0, (text_14095038).length-1)] & 63) << 18)) | ((text_14095038[chckIndx(addInt(i_14130203, 2), 0, (text_14095038).length-1)] & 63) << 12)) | ((text_14095038[chckIndx(addInt(i_14130203, 3), 0, (text_14095038).length-1)] & 63) << 6)) | (text_14095038[chckIndx(addInt(i_14130203, 4), 0, (text_14095038).length-1)] & 63)), -2147483648, 2147483647);
          i_14130203 = addInt(i_14130203, 5);
          }
          else {
            c_14130201 = 65533;
            i_14130203 = addInt(i_14130203, 1);
          }
          
          }
          else {
          if ((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] >>> 0) >>> 1) == 126)) {
          if ((i_14130203 <= subInt((text_14095038).length, 6))) {
          c_14130201 = chckRange((((((((text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)] & 1) << 30) | ((text_14095038[chckIndx(addInt(i_14130203, 1), 0, (text_14095038).length-1)] & 63) << 24)) | ((text_14095038[chckIndx(addInt(i_14130203, 2), 0, (text_14095038).length-1)] & 63) << 18)) | ((text_14095038[chckIndx(addInt(i_14130203, 3), 0, (text_14095038).length-1)] & 63) << 12)) | ((text_14095038[chckIndx(addInt(i_14130203, 4), 0, (text_14095038).length-1)] & 63) << 6)) | (text_14095038[chckIndx(addInt(i_14130203, 5), 0, (text_14095038).length-1)] & 63)), -2147483648, 2147483647);
          i_14130203 = addInt(i_14130203, 6);
          }
          else {
            c_14130201 = 65533;
            i_14130203 = addInt(i_14130203, 1);
          }
          
          }
          else {
            c_14130201 = chckRange(text_14095038[chckIndx(i_14130203, 0, (text_14095038).length-1)], -2147483648, 2147483647);
            i_14130203 = addInt(i_14130203, 1);
          }
          }}}}}
          submatch_13960062(ms_14095041, regex_14095039, iPrev_14130204, cPrev_14130202, c_14130201);
          if ((len_13655632(ms_14095041.a) == 0)) {
          if ((i_14130203 < (text_14095038).length)) {
          if (hasMatches_13930342(ms_14095041)) {
          result_14095047 = i_14130203;
          break BeforeRet;
          }
          
          if (optFlag_14135007) {
          result_14095047 = i_14130203;
          break BeforeRet;
          }
          
          }
          
          }
          
          add_13630232(ms_14095041, "a", {Field0: 0, Field1: -1, Field2: HEX2EHEX2E_3440220(i_14130203, subInt(i_14130203, 1))});
          iPrev_14130204 = i_14130203;
          cPrev_14130202 = c_14130201;
        }
    } while(false);
    submatch_13960062(ms_14095041, regex_14095039, iPrev_14130204, cPrev_14130202, -1);
    if (!((len_13655632(ms_14095041.a) == 0))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(233, 12) `smA.len == 0` "));
    }
    
    if (hasMatches_13930342(ms_14095041)) {
    result_14095047 = i_14130203;
    break BeforeRet;
    }
    
    result_14095047 = -1;
    break BeforeRet;
  } while (false);

  return result_14095047;

}
function findSomeOptImpl_15080019(text_15080021, regex_15080022, ms_15080024, start_15080025) {
      var Tmp1;

  var result_15080026 = 0;

  BeforeRet: do {
    if (!((0 < (regex_15080022.litOpt.nfa).length))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(354, 12) `opt.nfa.len > 0` "));
    }
    
    if ((ms_15080024.a == null)) {
    if (!((ms_15080024.b == null))) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(249, 12) `ms.b == nil` "));
    }
    
    ms_15080024.a = newSubmatches_13621285(nimMax((regex_15080022.litOpt.nfa).length, (regex_15080022.nfa).length));
    ms_15080024.b = newSubmatches_13621285(nimMax((regex_15080022.litOpt.nfa).length, (regex_15080022.nfa).length));
    }
    
      if (!(nimMax((regex_15080022.litOpt.nfa).length, (regex_15080022.nfa).length) <= cap_13655691(ms_15080024.a))) Tmp1 = false; else {        Tmp1 = (nimMax((regex_15080022.litOpt.nfa).length, (regex_15080022.nfa).length) <= cap_13655691(ms_15080024.b));      }    if (!(Tmp1)) {
    failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(355, 16) `ms.a.cap >= max(len(regex.litOpt.nfa), len(regex.nfa)) and\x0A    ms.b.cap >= max(len(regex.litOpt.nfa), len(regex.nfa))` "));
    }
    
    clear_13935014(ms_15080024);
    var limit_15140201 = start_15080025;
    var i_15140202 = start_15080025;
    var i2_15140204 = -1;
    L2: do {
        L3: while (true) {
        if (!(i_15140202 < (text_15080021).length)) break L3;
          if (!((i2_15140204 < i_15140202))) {
          failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(361, 14) `i > i2` "));
          }
          
          i2_15140204 = i_15140202;
          var litIdx_15160001 = nsuFindChar(text_15080021, chckRange(regex_15080022.litOpt.lit, 0, 255), chckRange(i_15140202, 0, 2147483647), 0);
          if ((litIdx_15160001 == -1)) {
          result_15080026 = -1;
          break BeforeRet;
          }
          
          if (!((i_15140202 <= litIdx_15160001))) {
          failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(368, 14) `litIdx >= i` "));
          }
          
          i_15140202 = litIdx_15160001;
          i_15140202 = matchPrefixImpl_14465033(text_15080021, regex_15080022, ms_15080024, "a", ms_15080024, "b", chckRange(i_15140202, 0, 2147483647), chckRange(limit_15140201, 0, 2147483647));
          if ((i_15140202 == -1)) {
          i_15140202 = addInt(litIdx_15160001, 1);
          }
          else {
            if (!((i_15140202 <= litIdx_15160001))) {
            failedAssertImpl_1305480(makeNimstrLit("nfafindall.nim(375, 16) `i <= litIdx` "));
            }
            
            i_15140202 = findSomeImpl_14095036(text_15080021, regex_15080022, ms_15080024, chckRange(i_15140202, 0, 2147483647), ConstSet3);
            if (hasMatches_13930342(ms_15080024)) {
            result_15080026 = i_15140202;
            break BeforeRet;
            }
            
            if ((i_15140202 == -1)) {
            result_15080026 = -1;
            break BeforeRet;
            }
            
          }
          
        }
    } while(false);
    result_15080026 = -1;
    break BeforeRet;
  } while (false);

  return result_15080026;

}
function len_13615158(t_13615163) {
  var result_13615164 = 0;

    result_13615164 = t_13615163.counter;

  return result_13615164;

}
function HEX5BHEX5D_13560005(s_13560010, i_13560011) {
  var result_13560013 = null;

    result_13560013 = s_13560010[chckIndx(subInt((s_13560010).length, i_13560011), 0, (s_13560010).length-1)];

  return result_13560013;

}
function reverse_13605231(a_13605236, first_13605237, last_13605238) {
    var x_13605239 = first_13605237;
    var y_13605240 = last_13605238;
    L1: do {
        L2: while (true) {
        if (!(x_13605239 < y_13605240)) break L2;
          var Tmp3 = a_13605236[chckIndx(x_13605239, 0, (a_13605236).length-1)]; a_13605236[chckIndx(x_13605239, 0, (a_13605236).length-1)] = a_13605236[chckIndx(y_13605240, 0, (a_13605236).length-1)]; a_13605236[chckIndx(y_13605240, 0, (a_13605236).length-1)] = Tmp3;          y_13605240 = subInt(y_13605240, 1);
          x_13605239 = addInt(x_13605239, 1);
        }
    } while(false);

  
}
function reverse_13605219(a_13605224) {
    reverse_13605231(a_13605224, 0, chckRange(nimMax(0, (a_13605224).length - 1), 0, 2147483647));

  
}
function constructSubmatches_13531036(captures_13531039, captures_13531039_Idx, capts_13531040, capt_13531041, size_13531042) {
  BeforeRet: do {
    if (captures_13531039[captures_13531039_Idx].length < chckRange(size_13531042, 0, 2147483647)) { for (var i=captures_13531039[captures_13531039_Idx].length;i<chckRange(size_13531042, 0, 2147483647);++i) captures_13531039[captures_13531039_Idx].push([]); }
               else { captures_13531039[captures_13531039_Idx].length = chckRange(size_13531042, 0, 2147483647); };
    L1: do {
      var i_13531067 = 0;
      var colontmp__17530798 = 0;
      colontmp__17530798 = subInt((captures_13531039[captures_13531039_Idx]).length, 1);
      var res_17530799 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_17530799 <= colontmp__17530798)) break L3;
            i_13531067 = res_17530799;
            if (captures_13531039[captures_13531039_Idx][chckIndx(i_13531067, 0, (captures_13531039[captures_13531039_Idx]).length-1)].length < 0) { for (var i=captures_13531039[captures_13531039_Idx][chckIndx(i_13531067, 0, (captures_13531039[captures_13531039_Idx]).length-1)].length;i<0;++i) captures_13531039[captures_13531039_Idx][chckIndx(i_13531067, 0, (captures_13531039[captures_13531039_Idx]).length-1)].push(({a: 0, b: 0})); }
               else { captures_13531039[captures_13531039_Idx][chckIndx(i_13531067, 0, (captures_13531039[captures_13531039_Idx]).length-1)].length = 0; };
            res_17530799 = addInt(res_17530799, 1);
          }
      } while(false);
    } while(false);
    if (((capts_13531040).length == 0)) {
    break BeforeRet;
    }
    
    var capt_13531080 = capt_13531041;
    L4: do {
        L5: while (true) {
        if (!!((capt_13531080 == -1))) break L5;
          if (((captures_13531039[captures_13531039_Idx][chckIndx(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].idx, 0, (captures_13531039[captures_13531039_Idx]).length-1)]).length == 0)) {
          captures_13531039[captures_13531039_Idx][chckIndx(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].idx, 0, (captures_13531039[captures_13531039_Idx]).length-1)].push(HEX2EHEX2E_3440220(-2, -2));;
          }
          
          if (!((HEX5BHEX5D_13560005(captures_13531039[captures_13531039_Idx][chckIndx(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].idx, 0, (captures_13531039[captures_13531039_Idx]).length-1)], 1).a == -2))) {
          captures_13531039[captures_13531039_Idx][chckIndx(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].idx, 0, (captures_13531039[captures_13531039_Idx]).length-1)].push(HEX2EHEX2E_3440220(-2, -2));;
          }
          
          if ((HEX5BHEX5D_13560005(captures_13531039[captures_13531039_Idx][chckIndx(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].idx, 0, (captures_13531039[captures_13531039_Idx]).length-1)], 1).b == -2)) {
          HEX5BHEX5D_13560005(captures_13531039[captures_13531039_Idx][chckIndx(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].idx, 0, (captures_13531039[captures_13531039_Idx]).length-1)], 1).b = subInt(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].bound, 1);
          }
          else {
            HEX5BHEX5D_13560005(captures_13531039[captures_13531039_Idx][chckIndx(capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].idx, 0, (captures_13531039[captures_13531039_Idx]).length-1)], 1).a = capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].bound;
          }
          
          capt_13531080 = ((capts_13531040[chckIndx(capt_13531080, 0, (capts_13531040).length-1)].parent)|0);
        }
    } while(false);
    L6: do {
      var c_13605214 = null;
      var c_13605214_Idx = 0;
      var i_17530811 = 0;
      var L_17530812 = (captures_13531039[captures_13531039_Idx]).length;
      L7: do {
          L8: while (true) {
          if (!(i_17530811 < L_17530812)) break L8;
            c_13605214 = captures_13531039[captures_13531039_Idx]; c_13605214_Idx = chckIndx(i_17530811, 0, (captures_13531039[captures_13531039_Idx]).length-1);
            reverse_13605219(c_13605214[c_13605214_Idx]);
            i_17530811 = addInt(i_17530811, 1);
            if (!(((captures_13531039[captures_13531039_Idx]).length == L_17530812))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function fillMatchImpl_13935095(m_13935098, mi_13935099, ms_13935100, regex_13935101) {
    if (!((len_13615158(m_13935098.namedGroups) == len_13615158(regex_13935101.namedGroups)))) {
    nimCopy(m_13935098.namedGroups, regex_13935101.namedGroups, NTI12480101);
    }
    
    constructSubmatches_13531036(m_13935098, "captures", ms_13935100.c, ((ms_13935100.m.s[chckIndx(mi_13935099, 0, (ms_13935100.m.s).length-1)].Field0)|0), ((regex_13935101.groupsCount)|0));
    nimCopy(m_13935098.boundaries, ms_13935100.m.s[chckIndx(mi_13935099, 0, (ms_13935100.m.s).length-1)].Field1, NTI2335020);

  
}
function nextPowerOfTwo_2530014(x_2530016) {
  var result_2530017 = 0;

    result_2530017 = (x_2530016 - 1);
    result_2530017 = (result_2530017 | (result_2530017 >> 16));
    result_2530017 = (result_2530017 | (result_2530017 >> 8));
    result_2530017 = (result_2530017 | (result_2530017 >> 4));
    result_2530017 = (result_2530017 | (result_2530017 >> 2));
    result_2530017 = (result_2530017 | (result_2530017 >> 1));
    result_2530017 += (1 + ((x_2530016 <= 0) ? 1:0));

  return result_2530017;

}
function slotsNeeded_10710048(count_10710050) {
  var result_10710051 = 0;

    result_10710051 = nextPowerOfTwo_2530014(addInt(divInt(mulInt(count_10710050, 3), 2), 4));

  return result_10710051;

}
function imul_10646082(a_10646084, b_10646085) {
  var result_10646086 = 0;

    var mask_10646087 = 65535;
    var aHi_10646096 = (((a_10646084 >>> 0) >>> 16) & mask_10646087);
    var aLo_10646097 = (a_10646084 & mask_10646087);
    var bHi_10646106 = (((b_10646085 >>> 0) >>> 16) & mask_10646087);
    var bLo_10646107 = (b_10646085 & mask_10646087);
    result_10646086 = ((((aLo_10646097 * bLo_10646107) >>> 0) + (((((aHi_10646096 * bLo_10646107) >>> 0) + ((aLo_10646097 * bHi_10646106) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_10646086;

}
function rotl32_10646201(x_10646203, r_10646204) {
  var result_10646205 = 0;

    result_10646205 = ((x_10646203 << r_10646204) | ((x_10646203 >>> 0) >>> subInt(32, r_10646204)));

  return result_10646205;

}
function murmurHash_10646229(x_10646232) {
  var result_10646233 = 0;

  BeforeRet: do {
    var size_10646243 = (x_10646232).length;
    var stepSize_10646245 = 4;
    var n_10646246 = divInt(size_10646243, stepSize_10646245);
    var h1_10646247 = 0;
    var i_10646249 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_10646249 < mulInt(n_10646246, stepSize_10646245))) break L2;
          var k1_10646250 = 0;
          var j_10646251 = stepSize_10646245;
          L3: do {
              L4: while (true) {
              if (!(0 < j_10646251)) break L4;
                j_10646251 = subInt(j_10646251, 1);
                k1_10646250 = ((k1_10646250 << 8) | x_10646232[chckIndx(addInt(i_10646249, j_10646251), 0, (x_10646232).length-1)]);
              }
          } while(false);
          i_10646249 = addInt(i_10646249, stepSize_10646245);
          k1_10646250 = imul_10646082(k1_10646250, 3432918353);
          k1_10646250 = rotl32_10646201(k1_10646250, 15);
          k1_10646250 = imul_10646082(k1_10646250, 461845907);
          h1_10646247 = (h1_10646247 ^ k1_10646250);
          h1_10646247 = rotl32_10646201(h1_10646247, 13);
          h1_10646247 = ((((h1_10646247 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    var k1_10650207 = 0;
    var rem_10650208 = modInt(size_10646243, stepSize_10646245);
    L5: do {
        L6: while (true) {
        if (!(0 < rem_10650208)) break L6;
          rem_10650208 = subInt(rem_10650208, 1);
          k1_10650207 = ((k1_10650207 << 8) | x_10646232[chckIndx(addInt(i_10646249, rem_10650208), 0, (x_10646232).length-1)]);
        }
    } while(false);
    k1_10650207 = imul_10646082(k1_10650207, 3432918353);
    k1_10650207 = rotl32_10646201(k1_10650207, 15);
    k1_10650207 = imul_10646082(k1_10650207, 461845907);
    h1_10646247 = (h1_10646247 ^ k1_10650207);
    h1_10646247 = (h1_10646247 ^ size_10646243);
    h1_10646247 = (h1_10646247 ^ ((h1_10646247 >>> 0) >>> 16));
    h1_10646247 = imul_10646082(h1_10646247, 2246822507);
    h1_10646247 = (h1_10646247 ^ ((h1_10646247 >>> 0) >>> 13));
    h1_10646247 = imul_10646082(h1_10646247, 3266489909);
    h1_10646247 = (h1_10646247 ^ ((h1_10646247 >>> 0) >>> 16));
    result_10646233 = (h1_10646247|0);
    break BeforeRet;
  } while (false);

  return result_10646233;

}
function hash_10685214(x_10685216) {
  var result_10685217 = 0;

    result_10685217 = murmurHash_10646229((x_10685216.slice(0, (x_10685216).length - 1+1)));

  return result_10685217;

}
function isFilled_10706218(hcode_10706220) {
  var result_10706221 = false;

    result_10706221 = !((hcode_10706220 == 0));

  return result_10706221;

}
function nextTry_10710014(h_10710016, maxHash_10710017) {
  var result_10710018 = 0;

    result_10710018 = (addInt(h_10710016, 1) & maxHash_10710017);

  return result_10710018;

}
function rawGet_17450602(t_17450606, key_17450607, hc_17450608, hc_17450608_Idx) {
            var Tmp3;

  var result_17450609 = 0;

  BeforeRet: do {
    hc_17450608[hc_17450608_Idx] = hash_10685214(key_17450607);
    if ((hc_17450608[hc_17450608_Idx] == 0)) {
    hc_17450608[hc_17450608_Idx] = 314159265;
    }
    
    if (((t_17450606.data).length == 0)) {
    result_17450609 = -1;
    break BeforeRet;
    }
    
    var h_17460138 = (hc_17450608[hc_17450608_Idx] & (t_17450606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10706218(t_17450606.data[chckIndx(h_17460138, 0, (t_17450606.data).length-1)].Field0)) break L2;
            if (!(t_17450606.data[chckIndx(h_17460138, 0, (t_17450606.data).length-1)].Field0 == hc_17450608[hc_17450608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_17450606.data[chckIndx(h_17460138, 0, (t_17450606.data).length-1)].Field1, key_17450607);            }          if (Tmp3) {
          result_17450609 = h_17460138;
          break BeforeRet;
          }
          
          h_17460138 = nextTry_10710014(h_17460138, (t_17450606.data).length - 1);
        }
    } while(false);
    result_17450609 = subInt(-1, h_17460138);
  } while (false);

  return result_17450609;

}
function mustRehash_17475601(t_17475604) {
  var result_17475605 = false;

    if (!((t_17475604.counter < (t_17475604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_17475605 = ((mulInt((t_17475604.data).length, 2) < mulInt(t_17475604.counter, 3)) || (subInt((t_17475604.data).length, t_17475604.counter) < 4));

  return result_17475605;

}
function rawInsert_17501108(t_17501114, data_17501117, data_17501117_Idx, key_17501118, val_17501120, hc_17501121, h_17501122) {
    data_17501117[data_17501117_Idx][chckIndx(h_17501122, 0, (data_17501117[data_17501117_Idx]).length-1)].Field1 = nimCopy(null, key_17501118, NTI1188013);
    data_17501117[data_17501117_Idx][chckIndx(h_17501122, 0, (data_17501117[data_17501117_Idx]).length-1)].Field2 = nimCopy(null, val_17501120, NTI1188013);
    data_17501117[data_17501117_Idx][chckIndx(h_17501122, 0, (data_17501117[data_17501117_Idx]).length-1)].Field0 = hc_17501121;

  
}
function enlarge_17500161(t_17500167) {
    var n_17500175 = [];
    n_17500175 = new Array(chckRange(mulInt((t_17500167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_17500167.data).length, 2), 0, 2147483647);++i) {n_17500175[i]={Field0: 0, Field1: [], Field2: []};}    var Tmp1 = t_17500167.data; t_17500167.data = n_17500175; n_17500175 = Tmp1;    L2: do {
      var i_17500334 = 0;
      var colontmp__17530823 = 0;
      colontmp__17530823 = (n_17500175).length - 1;
      var res_17530824 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_17530824 <= colontmp__17530823)) break L4;
            i_17500334 = res_17530824;
            var eh_17500483 = n_17500175[chckIndx(i_17500334, 0, (n_17500175).length-1)].Field0;
            if (isFilled_10706218(eh_17500483)) {
            var j_17500490 = (eh_17500483 & (t_17500167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10706218(t_17500167.data[chckIndx(j_17500490, 0, (t_17500167.data).length-1)].Field0)) break L6;
                  j_17500490 = nextTry_10710014(j_17500490, (t_17500167.data).length - 1);
                }
            } while(false);
            rawInsert_17501108(t_17500167, t_17500167, "data", n_17500175[chckIndx(i_17500334, 0, (n_17500175).length-1)].Field1, n_17500175[chckIndx(i_17500334, 0, (n_17500175).length-1)].Field2, eh_17500483, j_17500490);
            }
            
            res_17530824 = addInt(res_17530824, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_17501594(t_17501598, key_17501599, hc_17501600) {
  var result_17501601 = 0;

  BeforeRet: do {
    if (((t_17501598.data).length == 0)) {
    result_17501601 = -1;
    break BeforeRet;
    }
    
    var h_17505138 = (hc_17501600 & (t_17501598.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10706218(t_17501598.data[chckIndx(h_17505138, 0, (t_17501598.data).length-1)].Field0)) break L2;
          if (((t_17501598.data[chckIndx(h_17505138, 0, (t_17501598.data).length-1)].Field0 == hc_17501600) && eqStrings(t_17501598.data[chckIndx(h_17505138, 0, (t_17501598.data).length-1)].Field1, key_17501599))) {
          result_17501601 = h_17505138;
          break BeforeRet;
          }
          
          h_17505138 = nextTry_10710014(h_17505138, (t_17501598.data).length - 1);
        }
    } while(false);
    result_17501601 = subInt(-1, h_17505138);
  } while (false);

  return result_17501601;

}
function HEX5BHEX5DHEX3D_17435378(t_17435384, key_17435385, val_17435387) {
    if (((t_17435384.data).length == 0)) {
    var correctSizeHEX60gensym5_17445001 = slotsNeeded_10710048(32);
    t_17435384.counter = 0;
    t_17435384.data = new Array(chckRange(correctSizeHEX60gensym5_17445001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym5_17445001, 0, 2147483647);++i) {t_17435384.data[i]={Field0: 0, Field1: [], Field2: []};}    }
    
    var hc_17450601 = [0];
    var index_17460605 = rawGet_17450602(t_17435384, key_17435385, hc_17450601, 0);
    if ((0 <= index_17460605)) {
    t_17435384.data[chckIndx(index_17460605, 0, (t_17435384.data).length-1)].Field2 = nimCopy(null, val_17435387, NTI1188013);
    }
    else {
      if (((t_17435384.data).length == 0)) {
      var correctSizeHEX60gensym10_17470001 = slotsNeeded_10710048(32);
      t_17435384.counter = 0;
      t_17435384.data = new Array(chckRange(correctSizeHEX60gensym10_17470001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym10_17470001, 0, 2147483647);++i) {t_17435384.data[i]={Field0: 0, Field1: [], Field2: []};}      }
      
      if (mustRehash_17475601(t_17435384)) {
      enlarge_17500161(t_17435384);
      index_17460605 = rawGetKnownHC_17501594(t_17435384, key_17435385, hc_17450601[0]);
      }
      
      index_17460605 = subInt(-1, index_17460605);
      rawInsert_17501108(t_17435384, t_17435384, "data", key_17435385, val_17435387, hc_17450601[0], index_17460605);
      t_17435384.counter = addInt(t_17435384.counter, 1);
    }
    

  
}
function HEX5BHEX5D_3440283(s_3440287, x_3440289) {
  var result_3440290 = [];

    var a_3440401 = x_3440289.a;
    var L_3440601 = addInt(subInt(x_3440289.b, a_3440401), 1);
    result_3440290 = nimCopy(null, mnewString(chckRange(L_3440601, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_3440609 = 0;
      var i_17530846 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530846 < L_3440601)) break L3;
            i_3440609 = i_17530846;
            result_3440290[chckIndx(i_3440609, 0, (result_3440290).length-1)] = s_3440287[chckIndx(addInt(i_3440609, a_3440401), 0, (s_3440287).length-1)];
            i_17530846 = addInt(i_17530846, 1);
          }
      } while(false);
    } while(false);

  return result_3440290;

}
function groupFirstCapture_15630351(m_15630353, i_15630354, text_15630355) {
  var result_15630356 = [];

  BeforeRet: do {
    L1: do {
      var bounds_15630357 = ({a: 0, b: 0});
      L2: do {
        var capt_17530838 = null;
        var colontmp__17530839 = [];
        colontmp__17530839 = m_15630353.captures[chckIndx(i_15630354, 0, (m_15630353.captures).length-1)];
        var i_17530840 = 0;
        var L_17530841 = (colontmp__17530839).length;
        L3: do {
            L4: while (true) {
            if (!(i_17530840 < L_17530841)) break L4;
              capt_17530838 = colontmp__17530839[chckIndx(i_17530840, 0, (colontmp__17530839).length-1)];
              nimCopy(bounds_15630357, capt_17530838, NTI2335020);
              result_15630356 = nimCopy(null, HEX5BHEX5D_3440283(text_15630355, bounds_15630357), NTI1188013);
              break BeforeRet;
              i_17530840 = addInt(i_17530840, 1);
              if (!(((colontmp__17530839).length == L_17530841))) {
              failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
    } while(false);
  } while (false);

  return result_15630356;

}
function newSeq_1840232(len_1840235) {
  var result_1840237 = [];

    result_1840237 = new Array(len_1840235); for (var i=0;i<len_1840235;++i) {result_1840237[i]=[];}
  return result_1840237;

}
function addsubstr_17245214(result_17245217, result_17245217_Idx, s_17245218, first_17245219, last_17245220) {
  BeforeRet: do {
    var first_17245221 = nimMax(first_17245219, 0);
    var last_17245223 = nimMin(last_17245220, (s_17245218).length - 1);
    if ((last_17245223 < first_17245221)) {
    break BeforeRet;
    }
    
    var n_17250001 = (result_17245217[result_17245217_Idx]).length;
    (result_17245217[result_17245217_Idx].length = chckRange(addInt(subInt(addInt((result_17245217[result_17245217_Idx]).length, last_17245223), first_17245221), 1), 0, 2147483647));
    var j_17250003 = 0;
    L1: do {
      var i_17250009 = 0;
      var res_17530864 = first_17245221;
      L2: do {
          L3: while (true) {
          if (!(res_17530864 <= last_17245223)) break L3;
            i_17250009 = res_17530864;
            result_17245217[result_17245217_Idx][chckIndx(addInt(n_17250001, j_17250003), 0, (result_17245217[result_17245217_Idx]).length-1)] = s_17245218[chckIndx(i_17250009, 0, (s_17245218).length-1)];
            j_17250003 = addInt(j_17250003, 1);
            res_17530864 = addInt(res_17530864, 1);
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function groupsCount_15655024(m_15655026) {
  var result_15655027 = 0;

    result_15655027 = (m_15655026.captures).length;

  return result_15655027;

}
function flatCaptures_17235020(result_17235024, result_17235024_Idx, m_17235025, s_17235026) {
    var i_17235028 = 0;
    var n_17235029 = 0;
    L1: do {
      var g_17235037 = 0;
      var colontmp__17530898 = 0;
      colontmp__17530898 = groupsCount_15655024(m_17235025);
      var i_17530899 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530899 < colontmp__17530898)) break L3;
            g_17235037 = i_17530899;
            n_17235029 = 0;
            L4: do {
              var sl_17235038 = ({a: 0, b: 0});
              L5: do {
                var capt_17530872 = null;
                var colontmp__17530873 = [];
                colontmp__17530873 = m_17235025.captures[chckIndx(g_17235037, 0, (m_17235025.captures).length-1)];
                var i_17530874 = 0;
                var L_17530875 = (colontmp__17530873).length;
                L6: do {
                    L7: while (true) {
                    if (!(i_17530874 < L_17530875)) break L7;
                      capt_17530872 = colontmp__17530873[chckIndx(i_17530874, 0, (colontmp__17530873).length-1)];
                      nimCopy(sl_17235038, capt_17530872, NTI2335020);
                      if ((sl_17235038.a <= sl_17235038.b)) {
                      n_17235029 = addInt(n_17235029, addInt(subInt(sl_17235038.b, sl_17235038.a), 1));
                      }
                      
                      i_17530874 = addInt(i_17530874, 1);
                      if (!(((colontmp__17530873).length == L_17530875))) {
                      failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while(false);
              } while(false);
            } while(false);
            i_17235028 = 0;
            (result_17235024[result_17235024_Idx][chckIndx(g_17235037, 0, (result_17235024[result_17235024_Idx]).length-1)].length = chckRange(n_17235029, 0, 2147483647));
            L8: do {
              var sl_17235045 = ({a: 0, b: 0});
              L9: do {
                var capt_17530893 = null;
                var colontmp__17530894 = [];
                colontmp__17530894 = m_17235025.captures[chckIndx(g_17235037, 0, (m_17235025.captures).length-1)];
                var i_17530895 = 0;
                var L_17530896 = (colontmp__17530894).length;
                L10: do {
                    L11: while (true) {
                    if (!(i_17530895 < L_17530896)) break L11;
                      capt_17530893 = colontmp__17530894[chckIndx(i_17530895, 0, (colontmp__17530894).length-1)];
                      nimCopy(sl_17235045, capt_17530893, NTI2335020);
                      L12: do {
                        var c_17235070 = 0;
                        L13: do {
                          var x_17530886 = 0;
                          var res_17530887 = sl_17235045.a;
                          L14: do {
                              L15: while (true) {
                              if (!(res_17530887 <= sl_17235045.b)) break L15;
                                x_17530886 = res_17530887;
                                c_17235070 = x_17530886;
                                result_17235024[result_17235024_Idx][chckIndx(g_17235037, 0, (result_17235024[result_17235024_Idx]).length-1)][chckIndx(i_17235028, 0, (result_17235024[result_17235024_Idx][chckIndx(g_17235037, 0, (result_17235024[result_17235024_Idx]).length-1)]).length-1)] = s_17235026[chckIndx(c_17235070, 0, (s_17235026).length-1)];
                                i_17235028 = addInt(i_17235028, 1);
                                res_17530887 = addInt(res_17530887, 1);
                              }
                          } while(false);
                        } while(false);
                      } while(false);
                      i_17530895 = addInt(i_17530895, 1);
                      if (!(((colontmp__17530894).length == L_17530896))) {
                      failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while(false);
              } while(false);
            } while(false);
            if (!((i_17235028 == n_17235029))) {
            failedAssertImpl_1305480(makeNimstrLit("regex.nim(773, 12) `i == n` "));
            }
            
            i_17530899 = addInt(i_17530899, 1);
          }
      } while(false);
    } while(false);

  
}
function invalidFormatString_10315046() {
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");

  
}
function nsuToLowerAsciiChar(c_9410023) {
  var result_9410024 = 0;

    if ((ConstSet9[c_9410023] != undefined)) {
    result_9410024 = chckRange(addInt(c_9410023, 32), 0, 255);
    }
    else {
      result_9410024 = c_9410023;
    }
    

  return result_9410024;

}
function nsuCmpIgnoreStyle(a_9490022, b_9490023) {
          var Tmp7;
          var Tmp8;

  var result_9490024 = 0;

  BeforeRet: do {
    var i_9490026 = 0;
    var j_9490028 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          L3: do {
              L4: while (true) {
              if (!((i_9490026 < (a_9490022).length) && (a_9490022[i_9490026] == 95))) break L4;
                i_9490026 += 1;
              }
          } while(false);
          L5: do {
              L6: while (true) {
              if (!((j_9490028 < (b_9490023).length) && (b_9490023[j_9490028] == 95))) break L6;
                j_9490028 += 1;
              }
          } while(false);
          if ((i_9490026 < (a_9490022).length)) {
          Tmp7 = nsuToLowerAsciiChar(a_9490022[i_9490026]);
          }
          else {
          Tmp7 = 0;
          }
          
          var aa_9490041 = Tmp7;
          if ((j_9490028 < (b_9490023).length)) {
          Tmp8 = nsuToLowerAsciiChar(b_9490023[j_9490028]);
          }
          else {
          Tmp8 = 0;
          }
          
          var bb_9490042 = Tmp8;
          result_9490024 = (aa_9490041 - bb_9490042);
          if (!((result_9490024 == 0))) {
          break BeforeRet;
          }
          
          if (((a_9490022).length <= i_9490026)) {
          if (((b_9490023).length <= j_9490028)) {
          result_9490024 = 0;
          break BeforeRet;
          }
          
          result_9490024 = -1;
          break BeforeRet;
          }
          else {
          if (((b_9490023).length <= j_9490028)) {
          result_9490024 = 1;
          break BeforeRet;
          }
          }
          i_9490026 += 1;
          j_9490028 += 1;
        }
    } while(false);
  } while (false);

  return result_9490024;

}
function findNormalized_10315014(x_10315016, inArray_10315018) {
  var result_10315019 = 0;

  BeforeRet: do {
    var i_10315021 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_10315021 < (inArray_10315018).length - 1)) break L2;
          if ((nsuCmpIgnoreStyle(x_10315016, inArray_10315018[chckIndx(i_10315021, 0, (inArray_10315018).length-1)]) == 0)) {
          result_10315019 = i_10315021;
          break BeforeRet;
          }
          
          i_10315021 = addInt(i_10315021, 2);
        }
    } while(false);
    result_10315019 = -1;
    break BeforeRet;
  } while (false);

  return result_10315019;

}
function substr_1571022(s_1571024, first_1571025, last_1571026) {
  var result_1571027 = [];

    var first_1571028 = nimMax(first_1571025, 0);
    var L_1571030 = nimMax(addInt(subInt(nimMin(last_1571026, (s_1571024).length - 1), first_1571028), 1), 0);
    result_1571027 = nimCopy(null, mnewString(chckRange(L_1571030, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_1571039 = 0;
      var colontmp__10462693 = 0;
      colontmp__10462693 = subInt(L_1571030, 1);
      var res_10462694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_10462694 <= colontmp__10462693)) break L3;
            i_1571039 = res_10462694;
            result_1571027[chckIndx(i_1571039, 0, (result_1571027).length-1)] = s_1571024[chckIndx(addInt(i_1571039, first_1571028), 0, (s_1571024).length-1)];
            res_10462694 = addInt(res_10462694, 1);
          }
      } while(false);
    } while(false);

  return result_1571027;

}
function nsuAddf(s_10320018, s_10320018_Idx, formatstr_10320019, a_10320021) {
                  var Tmp5;
            var Tmp6;
              var Tmp7;
            var Tmp10;
              var Tmp11;
                var Tmp12;
                  var Tmp15;
              var Tmp16;

    var i_10320025 = 0;
    var num_10320027 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_10320025 < (formatstr_10320019).length)) break L2;
          if (((formatstr_10320019[chckIndx(i_10320025, 0, (formatstr_10320019).length-1)] == 36) && (addInt(i_10320025, 1) < (formatstr_10320019).length))) {
          switch (formatstr_10320019[chckIndx(addInt(i_10320025, 1), 0, (formatstr_10320019).length-1)]) {
          case 35:
            if (((a_10320021).length - 1 < num_10320027)) {
            invalidFormatString_10315046();
            }
            
            s_10320018[s_10320018_Idx].push.apply(s_10320018[s_10320018_Idx], a_10320021[chckIndx(num_10320027, 0, (a_10320021).length-1)]);;
            i_10320025 = addInt(i_10320025, 2);
            num_10320027 = addInt(num_10320027, 1);
            break;
          case 36:
            addChar(s_10320018[s_10320018_Idx], 36);;
            i_10320025 = addInt(i_10320025, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_10325025 = 0;
            i_10320025 = addInt(i_10320025, 1);
            var negative_10325032 = (formatstr_10320019[chckIndx(i_10320025, 0, (formatstr_10320019).length-1)] == 45);
            if (negative_10325032) {
            i_10320025 = addInt(i_10320025, 1);
            }
            
            L3: do {
                L4: while (true) {
                  if (!(i_10320025 < (formatstr_10320019).length)) Tmp5 = false; else {                    Tmp5 = (ConstSet6[formatstr_10320019[chckIndx(i_10320025, 0, (formatstr_10320019).length-1)]] != undefined);                  }                if (!Tmp5) break L4;
                  j_10325025 = subInt(addInt(mulInt(j_10325025, 10), formatstr_10320019[chckIndx(i_10320025, 0, (formatstr_10320019).length-1)]), 48);
                  i_10320025 = addInt(i_10320025, 1);
                }
            } while(false);
            if (!(negative_10325032)) {
            Tmp6 = subInt(j_10325025, 1);
            }
            else {
            Tmp6 = subInt((a_10320021).length, j_10325025);
            }
            
            var idx_10330025 = Tmp6;
              if ((idx_10330025 < 0)) Tmp7 = true; else {                Tmp7 = ((a_10320021).length - 1 < idx_10330025);              }            if (Tmp7) {
            invalidFormatString_10315046();
            }
            
            s_10320018[s_10320018_Idx].push.apply(s_10320018[s_10320018_Idx], a_10320021[chckIndx(idx_10330025, 0, (a_10320021).length-1)]);;
            break;
          case 123:
            var j_10335006 = addInt(i_10320025, 2);
            var k_10335008 = 0;
            var negative_10335009 = (formatstr_10320019[chckIndx(j_10335006, 0, (formatstr_10320019).length-1)] == 45);
            if (negative_10335009) {
            j_10335006 = addInt(j_10335006, 1);
            }
            
            var isNumber_10335017 = 0;
            L8: do {
                L9: while (true) {
                if (!((j_10335006 < (formatstr_10320019).length) && !((ConstSet7[formatstr_10320019[chckIndx(j_10335006, 0, (formatstr_10320019).length-1)]] != undefined)))) break L9;
                  if ((ConstSet8[formatstr_10320019[chckIndx(j_10335006, 0, (formatstr_10320019).length-1)]] != undefined)) {
                  k_10335008 = subInt(addInt(mulInt(k_10335008, 10), formatstr_10320019[chckIndx(j_10335006, 0, (formatstr_10320019).length-1)]), 48);
                  if ((isNumber_10335017 == 0)) {
                  isNumber_10335017 = 1;
                  }
                  
                  }
                  else {
                    isNumber_10335017 = -1;
                  }
                  
                  j_10335006 = addInt(j_10335006, 1);
                }
            } while(false);
            if ((isNumber_10335017 == 1)) {
            if (!(negative_10335009)) {
            Tmp10 = subInt(k_10335008, 1);
            }
            else {
            Tmp10 = subInt((a_10320021).length, k_10335008);
            }
            
            var idx_10345025 = Tmp10;
              if ((idx_10345025 < 0)) Tmp11 = true; else {                Tmp11 = ((a_10320021).length - 1 < idx_10345025);              }            if (Tmp11) {
            invalidFormatString_10315046();
            }
            
            s_10320018[s_10320018_Idx].push.apply(s_10320018[s_10320018_Idx], a_10320021[chckIndx(idx_10345025, 0, (a_10320021).length-1)]);;
            }
            else {
              var x_10350006 = findNormalized_10315014(substr_1571022(formatstr_10320019, addInt(i_10320025, 2), subInt(j_10335006, 1)), a_10320021);
                if (!(0 <= x_10350006)) Tmp12 = false; else {                  Tmp12 = (x_10350006 < (a_10320021).length - 1);                }              if (Tmp12) {
              s_10320018[s_10320018_Idx].push.apply(s_10320018[s_10320018_Idx], a_10320021[chckIndx(addInt(x_10350006, 1), 0, (a_10320021).length-1)]);;
              }
              else {
              invalidFormatString_10315046();
              }
              
            }
            
            i_10320025 = addInt(j_10335006, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_10355006 = addInt(i_10320025, 1);
            L13: do {
                L14: while (true) {
                  if (!(j_10355006 < (formatstr_10320019).length)) Tmp15 = false; else {                    Tmp15 = (ConstSet10[formatstr_10320019[chckIndx(j_10355006, 0, (formatstr_10320019).length-1)]] != undefined);                  }                if (!Tmp15) break L14;
                  j_10355006 = addInt(j_10355006, 1);
                }
            } while(false);
            var x_10360013 = findNormalized_10315014(substr_1571022(formatstr_10320019, addInt(i_10320025, 1), subInt(j_10355006, 1)), a_10320021);
              if (!(0 <= x_10360013)) Tmp16 = false; else {                Tmp16 = (x_10360013 < (a_10320021).length - 1);              }            if (Tmp16) {
            s_10320018[s_10320018_Idx].push.apply(s_10320018[s_10320018_Idx], a_10320021[chckIndx(addInt(x_10360013, 1), 0, (a_10320021).length-1)]);;
            }
            else {
            invalidFormatString_10315046();
            }
            
            i_10320025 = j_10355006;
            break;
          default: 
            invalidFormatString_10315046();
            break;
          }
          }
          else {
            addChar(s_10320018[s_10320018_Idx], formatstr_10320019[chckIndx(i_10320025, 0, (formatstr_10320019).length-1)]);;
            i_10320025 = addInt(i_10320025, 1);
          }
          
        }
    } while(false);

  
}
function addsubstr_17250029(result_17250032, result_17250032_Idx, s_17250033, first_17250034) {
    addsubstr_17245214(result_17250032, result_17250032_Idx, s_17250033, first_17250034, (s_17250033).length - 1);

  
}
function replace_17250049(s_17250051, pattern_17250052, by_17250053, limit_17250054) {
            var Tmp4;
                        var Tmp9;

  var result_17250056 = [[]];

    result_17250056[0] = nimCopy(null, [], NTI1188013);
    var i_17250058 = 0;
    var j_17250059 = 0;
    var capts_17250076 = [newSeq_1840232(chckRange(pattern_17250052.groupsCount, 0, 2147483647))];
    L1: do {
      var m_17250077 = ({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})});
      var i_17530849 = 0;
      var i2_17530850 = -1;
      var m_17530851 = [({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})})];
      var ms_17530852 = [({a: null, b: null, m: ({s: [], i: 0}), c: []})];
      L2: do {
          L3: while (true) {
          if (!(i_17530849 <= (s_17250051).length)) break L3;
            if (!((i2_17530850 < i_17530849))) {
            failedAssertImpl_1305480(makeNimstrLit("regex.nim(597, 13) `i > i2` "));
            }
            
            i2_17530850 = i_17530849;
            if (canOpt_13515054(pattern_17250052.litOpt)) {
            Tmp4 = findSomeOptImpl_15080019(s_17250051, pattern_17250052, ms_17530852[0], chckRange(i_17530849, 0, 2147483647));
            }
            else {
            Tmp4 = findSomeImpl_14095036(s_17250051, pattern_17250052, ms_17530852[0], chckRange(i_17530849, 0, 2147483647), ConstSet5);
            }
            
            i_17530849 = Tmp4;
            if ((i_17530849 < 0)) {
            break L2;
            }
            
            L5: do {
              var mi_17530855 = 0;
              L6: do {
                var i_17530857 = 0;
                var colontmp__17530858 = 0;
                colontmp__17530858 = subInt(len_13930234(ms_17530852[0].m), 1);
                var res_17530859 = 0;
                L7: do {
                    L8: while (true) {
                    if (!(res_17530859 <= colontmp__17530858)) break L8;
                      i_17530857 = res_17530859;
                      mi_17530855 = i_17530857;
                      fillMatchImpl_13935095(m_17530851[0], mi_17530855, ms_17530852[0], pattern_17250052);
                      nimCopy(m_17250077, m_17530851[0], NTI13605359);
                      addsubstr_17245214(result_17250056, 0, s_17250051, i_17250058, subInt(m_17250077.boundaries.a, 1));
                      flatCaptures_17235020(capts_17250076, 0, m_17250077, s_17250051);
                      if ((0 < (capts_17250076[0]).length)) {
                      nsuAddf(result_17250056, 0, by_17250053, capts_17250076[0]);
                      }
                      else {
                      result_17250056[0].push.apply(result_17250056[0], by_17250053);;
                      }
                      
                      i_17250058 = addInt(m_17250077.boundaries.b, 1);
                      j_17250059 = addInt(j_17250059, 1);
                        if (!(0 < limit_17250054)) Tmp9 = false; else {                          Tmp9 = (j_17250059 == limit_17250054);                        }                      if (Tmp9) {
                      break L1;
                      }
                      
                      res_17530859 = addInt(res_17530859, 1);
                    }
                } while(false);
              } while(false);
            } while(false);
            if ((i_17530849 == (s_17250051).length)) {
            break L2;
            }
            
          }
      } while(false);
    } while(false);
    addsubstr_17250029(result_17250056, 0, s_17250051, i_17250058);

  return result_17250056[0];

}
function nsuContinuesWith(s_10055016, substr_10055017, start_10055018) {
            var Tmp3;

  var result_10055019 = false;

  BeforeRet: do {
    var i_10055021 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          if (((substr_10055017).length <= i_10055021)) {
          result_10055019 = true;
          break BeforeRet;
          }
          
            if (((s_10055016).length <= addInt(i_10055021, start_10055018))) Tmp3 = true; else {              Tmp3 = !((s_10055016[chckIndx(addInt(i_10055021, start_10055018), 0, (s_10055016).length-1)] == substr_10055017[chckIndx(i_10055021, 0, (substr_10055017).length-1)]));            }          if (Tmp3) {
          result_10055019 = false;
          break BeforeRet;
          }
          
          i_10055021 = addInt(i_10055021, 1);
        }
    } while(false);
  } while (false);

  return result_10055019;

}
function multiReplace_10205020(s_10205022, replacements_10205025) {
                      var Tmp10;

  var result_10205026 = [];

    result_10205026 = nimCopy(null, mnewString(0), NTI1188013);
    var i_10205028 = 0;
    var fastChk_10205032 = nimCopy(null, ConstSet11, NTI10205029);
    L1: do {
      var sub_10205065 = null;
      var sub_10205065_Idx = 0;
      var by_10205067 = null;
      var by_10205067_Idx = 0;
      var i_17530908 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530908 < (replacements_10205025).length)) break L3;
            sub_10205065 = replacements_10205025[chckIndx(i_17530908, 0, (replacements_10205025).length-1)]; sub_10205065_Idx = "Field0";
            by_10205067 = replacements_10205025[chckIndx(i_17530908, 0, (replacements_10205025).length-1)]; by_10205067_Idx = "Field1";
            if ((0 < (sub_10205065[sub_10205065_Idx]).length)) {
            fastChk_10205032[sub_10205065[sub_10205065_Idx][chckIndx(0, 0, (sub_10205065[sub_10205065_Idx]).length-1)]] = true;
            }
            
            i_17530908 = addInt(i_17530908, 1);
          }
      } while(false);
    } while(false);
    L4: do {
        L5: while (true) {
        if (!(i_10205028 < (s_10205022).length)) break L5;
          L6: do {
            if ((fastChk_10205032[s_10205022[chckIndx(i_10205028, 0, (s_10205022).length-1)]] != undefined)) {
            L7: do {
              var sub_10215013 = null;
              var sub_10215013_Idx = 0;
              var by_10215015 = null;
              var by_10215015_Idx = 0;
              var i_17530912 = 0;
              L8: do {
                  L9: while (true) {
                  if (!(i_17530912 < (replacements_10205025).length)) break L9;
                    sub_10215013 = replacements_10205025[chckIndx(i_17530912, 0, (replacements_10205025).length-1)]; sub_10215013_Idx = "Field0";
                    by_10215015 = replacements_10205025[chckIndx(i_17530912, 0, (replacements_10205025).length-1)]; by_10215015_Idx = "Field1";
                      if (!(0 < (sub_10215013[sub_10215013_Idx]).length)) Tmp10 = false; else {                        Tmp10 = nsuContinuesWith(s_10205022, sub_10215013[sub_10215013_Idx], chckRange(i_10205028, 0, 2147483647));                      }                    if (Tmp10) {
                    result_10205026.push.apply(result_10205026, by_10215015[by_10215015_Idx]);;
                    i_10205028 = addInt(i_10205028, (sub_10215013[sub_10215013_Idx]).length);
                    break L6;
                    }
                    
                    i_17530912 = addInt(i_17530912, 1);
                  }
              } while(false);
            } while(false);
            }
            
            addChar(result_10205026, s_10205022[chckIndx(i_10205028, 0, (s_10205022).length-1)]);;
            i_10205028 = addInt(i_10205028, 1);
          } while(false);
        }
    } while(false);

  return result_10205026;

}
function inlineCodeReplacementGroups_17435058(str_17435060) {
            var Tmp4;

  var result_17435063 = [];

    L1: do {
      var m_17435215 = ({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})});
      var i_17530916 = 0;
      var i2_17530917 = -1;
      var m_17530918 = [({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})})];
      var ms_17530919 = [({a: null, b: null, m: ({s: [], i: 0}), c: []})];
      L2: do {
          L3: while (true) {
          if (!(i_17530916 <= (str_17435060).length)) break L3;
            if (!((i2_17530917 < i_17530916))) {
            failedAssertImpl_1305480(makeNimstrLit("regex.nim(597, 13) `i > i2` "));
            }
            
            i2_17530917 = i_17530916;
            if (canOpt_13515054(inlineCodeRe_17435214.litOpt)) {
            Tmp4 = findSomeOptImpl_15080019(str_17435060, inlineCodeRe_17435214, ms_17530919[0], chckRange(i_17530916, 0, 2147483647));
            }
            else {
            Tmp4 = findSomeImpl_14095036(str_17435060, inlineCodeRe_17435214, ms_17530919[0], chckRange(i_17530916, 0, 2147483647), ConstSet12);
            }
            
            i_17530916 = Tmp4;
            if ((i_17530916 < 0)) {
            break L2;
            }
            
            L5: do {
              var mi_17530922 = 0;
              L6: do {
                var i_17530924 = 0;
                var colontmp__17530925 = 0;
                colontmp__17530925 = subInt(len_13930234(ms_17530919[0].m), 1);
                var res_17530926 = 0;
                L7: do {
                    L8: while (true) {
                    if (!(res_17530926 <= colontmp__17530925)) break L8;
                      i_17530924 = res_17530926;
                      mi_17530922 = i_17530924;
                      fillMatchImpl_13935095(m_17530918[0], mi_17530922, ms_17530919[0], inlineCodeRe_17435214);
                      nimCopy(m_17435215, m_17530918[0], NTI13605359);
                      result_17435063.push({Field0: HEX5BHEX5D_3440283(str_17435060, m_17435215.boundaries), Field1: (makeNimstrLit("<code>") || []).concat(groupFirstCapture_15630351(m_17435215, 0, str_17435060) || [],makeNimstrLit("</code>") || [])});;
                      res_17530926 = addInt(res_17530926, 1);
                    }
                } while(false);
              } while(false);
            } while(false);
            if ((i_17530916 == (str_17435060).length)) {
            break L2;
            }
            
          }
      } while(false);
    } while(false);

  return result_17435063;

}
function len_17415162(t_17415167) {
  var result_17415168 = 0;

    result_17415168 = t_17415167.counter;

  return result_17415168;

}
function parseSaturatedNatural_2245017(s_2245019, b_2245021, b_2245021_Idx, start_2245022) {
      var Tmp1;
          var Tmp4;

  var result_2245024 = 0;

    var i_2245025 = start_2245022;
    if (((i_2245025 < (s_2245019).length) && (s_2245019[chckIndx(i_2245025, 0, (s_2245019).length-1)] == 43))) {
    i_2245025 = addInt(i_2245025, 1);
    }
    
      if (!(i_2245025 < (s_2245019).length)) Tmp1 = false; else {        Tmp1 = (ConstSet17[s_2245019[chckIndx(i_2245025, 0, (s_2245019).length-1)]] != undefined);      }    if (Tmp1) {
    b_2245021[b_2245021_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_2245025 < (s_2245019).length)) Tmp4 = false; else {            Tmp4 = (ConstSet18[s_2245019[chckIndx(i_2245025, 0, (s_2245019).length-1)]] != undefined);          }        if (!Tmp4) break L3;
          var c_2255016 = subInt(s_2245019[chckIndx(i_2245025, 0, (s_2245019).length-1)], 48);
          if ((b_2245021[b_2245021_Idx] <= divInt(subInt(2147483647, c_2255016), 10))) {
          b_2245021[b_2245021_Idx] = addInt(mulInt(b_2245021[b_2245021_Idx], 10), c_2255016);
          }
          else {
            b_2245021[b_2245021_Idx] = 2147483647;
          }
          
          i_2245025 = addInt(i_2245025, 1);
          L5: do {
              L6: while (true) {
              if (!((i_2245025 < (s_2245019).length) && (s_2245019[chckIndx(i_2245025, 0, (s_2245019).length-1)] == 95))) break L6;
                i_2245025 = addInt(i_2245025, 1);
              }
          } while(false);
        }
    } while(false);
    result_2245024 = subInt(i_2245025, start_2245022);
    }
    

  return result_2245024;

}
function HEX5BHEX5D_5890068(s_5890072, x_5890074) {
  var result_5890075 = [];

    var a_5890201 = x_5890074.a;
    var L_5890401 = addInt(subInt(subInt((s_5890072).length, x_5890074.b), a_5890201), 1);
    result_5890075 = nimCopy(null, mnewString(chckRange(L_5890401, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_5890409 = 0;
      var i_17530960 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17530960 < L_5890401)) break L3;
            i_5890409 = i_17530960;
            result_5890075[chckIndx(i_5890409, 0, (result_5890075).length-1)] = s_5890072[chckIndx(addInt(i_5890409, a_5890201), 0, (s_5890072).length-1)];
            i_17530960 = addInt(i_17530960, 1);
          }
      } while(false);
    } while(false);

  return result_5890075;

}
function HEX2EHEX2E_5890001(a_5890006, b_5890008) {
  var result_5890014 = ({a: 0, b: 0});

    nimCopy(result_5890014, {a: a_5890006, b: b_5890008}, NTI5890011);

  return result_5890014;

}
function parseStandardFormatSpecifier_11550322(s_11550324, start_11550325, ignoreUnknownSuffix_11550327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_11550328 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_11550328.fill = 32;
    result_11550328.align = 0;
    result_11550328.sign = 45;
    var i_11550331 = start_11550325;
    if (((addInt(i_11550331, 1) < (s_11550324).length) && (ConstSet13[s_11550324[chckIndx(addInt(i_11550331, 1), 0, (s_11550324).length-1)]] != undefined))) {
    result_11550328.fill = s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)];
    result_11550328.align = s_11550324[chckIndx(addInt(i_11550331, 1), 0, (s_11550324).length-1)];
    i_11550331 = addInt(i_11550331, 2);
    }
    else {
    if (((i_11550331 < (s_11550324).length) && (ConstSet14[s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)]] != undefined))) {
    result_11550328.align = s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)];
    i_11550331 = addInt(i_11550331, 1);
    }
    }
    if (((i_11550331 < (s_11550324).length) && (ConstSet15[s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)]] != undefined))) {
    result_11550328.sign = s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)];
    i_11550331 = addInt(i_11550331, 1);
    }
    
    if (((i_11550331 < (s_11550324).length) && (s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)] == 35))) {
    result_11550328.alternateForm = true;
    i_11550331 = addInt(i_11550331, 1);
    }
    
      if (!((addInt(i_11550331, 1) < (s_11550324).length) && (s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet16[s_11550324[chckIndx(addInt(i_11550331, 1), 0, (s_11550324).length-1)]] != undefined);      }    if (Tmp1) {
    result_11550328.padWithZero = true;
    i_11550331 = addInt(i_11550331, 1);
    }
    
    var parsedLength_11570015 = parseSaturatedNatural_2245017(s_11550324, result_11550328, "minimumWidth", i_11550331);
    i_11550331 = addInt(i_11550331, parsedLength_11570015);
    if (((i_11550331 < (s_11550324).length) && (s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)] == 46))) {
    i_11550331 = addInt(i_11550331, 1);
    var parsedLengthB_11570029 = parseSaturatedNatural_2245017(s_11550324, result_11550328, "precision", i_11550331);
    i_11550331 = addInt(i_11550331, parsedLengthB_11570029);
    }
    else {
      result_11550328.precision = -1;
    }
    
      if (!(i_11550331 < (s_11550324).length)) Tmp2 = false; else {        Tmp2 = (ConstSet19[s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)]] != undefined);      }    if (Tmp2) {
    result_11550328.typ = s_11550324[chckIndx(i_11550331, 0, (s_11550324).length-1)];
    i_11550331 = addInt(i_11550331, 1);
    }
    
    result_11550328.endPosition = i_11550331;
      if (!!((i_11550331 == (s_11550324).length))) Tmp3 = false; else {        Tmp3 = !(ignoreUnknownSuffix_11550327);      }    if (Tmp3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_5890068(s_11550324, HEX2EHEX2E_5890001(i_11550331, 1)) || []), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_11550328;

}
function nucruneLen(s_2563025) {
  var result_2563026 = 0;

    result_2563026 = 0;
    var i_2563028 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_2563028 < (s_2563025).length)) break L2;
          if ((s_2563025[chckIndx(i_2563028, 0, (s_2563025).length-1)] <= 127)) {
          i_2563028 = addInt(i_2563028, 1);
          }
          else {
          if ((((s_2563025[chckIndx(i_2563028, 0, (s_2563025).length-1)] >>> 0) >>> 5) == 6)) {
          i_2563028 = addInt(i_2563028, 2);
          }
          else {
          if ((((s_2563025[chckIndx(i_2563028, 0, (s_2563025).length-1)] >>> 0) >>> 4) == 14)) {
          i_2563028 = addInt(i_2563028, 3);
          }
          else {
          if ((((s_2563025[chckIndx(i_2563028, 0, (s_2563025).length-1)] >>> 0) >>> 3) == 30)) {
          i_2563028 = addInt(i_2563028, 4);
          }
          else {
          if ((((s_2563025[chckIndx(i_2563028, 0, (s_2563025).length-1)] >>> 0) >>> 2) == 62)) {
          i_2563028 = addInt(i_2563028, 5);
          }
          else {
          if ((((s_2563025[chckIndx(i_2563028, 0, (s_2563025).length-1)] >>> 0) >>> 1) == 126)) {
          i_2563028 = addInt(i_2563028, 6);
          }
          else {
          i_2563028 = addInt(i_2563028, 1);
          }
          }}}}}
          result_2563026 = addInt(result_2563026, 1);
        }
    } while(false);

  return result_2563026;

}
function runeLenAt_2563127(s_2563129, i_2563130) {
  var result_2563131 = 0;

    if ((s_2563129[chckIndx(i_2563130, 0, (s_2563129).length-1)] <= 127)) {
    result_2563131 = 1;
    }
    else {
    if ((((s_2563129[chckIndx(i_2563130, 0, (s_2563129).length-1)] >>> 0) >>> 5) == 6)) {
    result_2563131 = 2;
    }
    else {
    if ((((s_2563129[chckIndx(i_2563130, 0, (s_2563129).length-1)] >>> 0) >>> 4) == 14)) {
    result_2563131 = 3;
    }
    else {
    if ((((s_2563129[chckIndx(i_2563130, 0, (s_2563129).length-1)] >>> 0) >>> 3) == 30)) {
    result_2563131 = 4;
    }
    else {
    if ((((s_2563129[chckIndx(i_2563130, 0, (s_2563129).length-1)] >>> 0) >>> 2) == 62)) {
    result_2563131 = 5;
    }
    else {
    if ((((s_2563129[chckIndx(i_2563130, 0, (s_2563129).length-1)] >>> 0) >>> 1) == 126)) {
    result_2563131 = 6;
    }
    else {
      result_2563131 = 1;
    }
    }}}}}

  return result_2563131;

}
function runeOffset_3185259(s_3185261, pos_3185262, start_3185263) {
  var result_3185264 = 0;

  BeforeRet: do {
    var i_3185266 = 0;
    var o_3185267 = start_3185263;
    L1: do {
        L2: while (true) {
        if (!(i_3185266 < pos_3185262)) break L2;
          o_3185267 = addInt(o_3185267, chckRange(runeLenAt_2563127(s_3185261, o_3185267), 0, 2147483647));
          if (((s_3185261).length <= o_3185267)) {
          result_3185264 = -1;
          break BeforeRet;
          }
          
          i_3185266 = addInt(i_3185266, 1);
        }
    } while(false);
    result_3185264 = o_3185267;
    break BeforeRet;
  } while (false);

  return result_3185264;

}
function validateUtf8_2805244(s_2805246) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_2805247 = 0;

  BeforeRet: do {
    var i_2805249 = 0;
    var L_2805250 = (s_2805246).length;
    L1: do {
        L2: while (true) {
        if (!(i_2805249 < L_2805250)) break L2;
          if ((s_2805246[chckIndx(i_2805249, 0, (s_2805246).length-1)] <= 127)) {
          i_2805249 = addInt(i_2805249, 1);
          }
          else {
          if ((((s_2805246[chckIndx(i_2805249, 0, (s_2805246).length-1)] >>> 0) >>> 5) == 6)) {
          if ((s_2805246[chckIndx(i_2805249, 0, (s_2805246).length-1)] < 194)) {
          result_2805247 = i_2805249;
          break BeforeRet;
          }
          
            if (!(addInt(i_2805249, 1) < L_2805250)) Tmp3 = false; else {              Tmp3 = (((s_2805246[chckIndx(addInt(i_2805249, 1), 0, (s_2805246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          i_2805249 = addInt(i_2805249, 2);
          }
          else {
            result_2805247 = i_2805249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_2805246[chckIndx(i_2805249, 0, (s_2805246).length-1)] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_2805249, 2) < L_2805250)) Tmp5 = false; else {              Tmp5 = (((s_2805246[chckIndx(addInt(i_2805249, 1), 0, (s_2805246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_2805246[chckIndx(addInt(i_2805249, 2), 0, (s_2805246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          i_2805249 = addInt(i_2805249, 3);
          }
          else {
            result_2805247 = i_2805249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_2805246[chckIndx(i_2805249, 0, (s_2805246).length-1)] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_2805249, 3) < L_2805250)) Tmp8 = false; else {              Tmp8 = (((s_2805246[chckIndx(addInt(i_2805249, 1), 0, (s_2805246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_2805246[chckIndx(addInt(i_2805249, 2), 0, (s_2805246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_2805246[chckIndx(addInt(i_2805249, 3), 0, (s_2805246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          i_2805249 = addInt(i_2805249, 4);
          }
          else {
            result_2805247 = i_2805249;
            break BeforeRet;
          }
          
          }
          else {
            result_2805247 = i_2805249;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    result_2805247 = -1;
    break BeforeRet;
  } while (false);

  return result_2805247;

}
function nsuRepeatChar(c_9940124, count_9940125) {
  var result_9940126 = [];

    result_9940126 = nimCopy(null, mnewString(count_9940125), NTI1188013);
    L1: do {
      var i_9940135 = 0;
      var colontmp__12000079 = 0;
      colontmp__12000079 = subInt(count_9940125, 1);
      var res_12000080 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12000080 <= colontmp__12000079)) break L3;
            i_9940135 = res_12000080;
            result_9940126[chckIndx(i_9940135, 0, (result_9940126).length-1)] = c_9940124;
            res_12000080 = addInt(res_12000080, 1);
          }
      } while(false);
    } while(false);

  return result_9940126;

}
function alignString_11550222(s_11550224, minimumWidth_11550225, align_11550226, fill_11550227) {
      var Tmp1;

  var result_11550228 = [];

    if ((minimumWidth_11550225 == 0)) {
    result_11550228 = nimCopy(null, s_11550224, NTI1188013);
    }
    else {
      if ((validateUtf8_2805244(s_11550224) == -1)) {
      Tmp1 = nucruneLen(s_11550224);
      }
      else {
      Tmp1 = (s_11550224).length;
      }
      
      var sRuneLen_11550229 = Tmp1;
      var toFill_11550230 = subInt(minimumWidth_11550225, sRuneLen_11550229);
      if ((toFill_11550230 <= 0)) {
      result_11550228 = nimCopy(null, s_11550224, NTI1188013);
      }
      else {
      if (((align_11550226 == 60) || (align_11550226 == 0))) {
      result_11550228 = nimCopy(null, (s_11550224 || []).concat(nsuRepeatChar(fill_11550227, chckRange(toFill_11550230, 0, 2147483647)) || []), NTI1188013);
      }
      else {
      if ((align_11550226 == 94)) {
      var half_11550231 = divInt(toFill_11550230, 2);
      result_11550228 = nimCopy(null, (nsuRepeatChar(fill_11550227, chckRange(half_11550231, 0, 2147483647)) || []).concat(s_11550224 || [],nsuRepeatChar(fill_11550227, chckRange(subInt(toFill_11550230, half_11550231), 0, 2147483647)) || []), NTI1188013);
      }
      else {
        result_11550228 = nimCopy(null, (nsuRepeatChar(fill_11550227, chckRange(toFill_11550230, 0, 2147483647)) || []).concat(s_11550224 || []), NTI1188013);
      }
      }}
    }
    

  return result_11550228;

}
function formatValue_11595080(result_11595083, result_11595083_Idx, value_11595084, specifier_11595085) {
    var spec_11595086 = parseStandardFormatSpecifier_11550322(specifier_11595085, 0, false);
    var value_11595087 = nimCopy(null, value_11595084, NTI1188013);
    switch (spec_11595086.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_11595086.typ]), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_11595086.precision == -1))) {
    if ((spec_11595086.precision < nucruneLen(value_11595087))) {
    (value_11595087.length = chckRange(runeOffset_3185259(value_11595087, chckRange(spec_11595086.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_11595083[result_11595083_Idx].push.apply(result_11595083[result_11595083_Idx], alignString_11550222(value_11595087, spec_11595086.minimumWidth, spec_11595086.align, spec_11595086.fill));;

  
}
function quoteString_17413693(str_17413695) {
  var result_17413696 = [];

    L1: do {
      var ch_17413698 = 0;
      var i_17530991 = 0;
      var L_17530992 = (str_17413695).length;
      L2: do {
          L3: while (true) {
          if (!(i_17530991 < L_17530992)) break L3;
            ch_17413698 = str_17413695[chckIndx(i_17530991, 0, (str_17413695).length-1)];
            if ((ch_17413698 == 34)) {
            addChar(result_17413696, 92);;
            addChar(result_17413696, 34);;
            }
            else {
            addChar(result_17413696, ch_17413698);;
            }
            
            i_17530991 = addInt(i_17530991, 1);
            if (!(((str_17413695).length == L_17530992))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(222, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  return result_17413696;

}
function htmlLink_17413712(text_17413714, url_17413715) {
  var result_17413716 = [];

    var fmtRes_17413717 = [mnewString(0)];
    fmtRes_17413717[0].push.apply(fmtRes_17413717[0], makeNimstrLit("<a href=\""));;
    formatValue_11595080(fmtRes_17413717, 0, quoteString_17413693(url_17413715), []);
    fmtRes_17413717[0].push.apply(fmtRes_17413717[0], makeNimstrLit("\">"));;
    formatValue_11595080(fmtRes_17413717, 0, text_17413714, []);
    fmtRes_17413717[0].push.apply(fmtRes_17413717[0], makeNimstrLit("</a>"));;
    result_17413716 = nimCopy(null, fmtRes_17413717[0], NTI1188013);

  return result_17413716;

}
function toReplacementGroups_17415016(table_17415025) {
  var result_17415028 = [];

    L1: do {
      var key_17425259 = [];
      var url_17425260 = [];
      var L_17530939 = len_17415162(table_17415025);
      L2: do {
        var h_17530941 = 0;
        var colontmp__17530942 = 0;
        colontmp__17530942 = (table_17415025.data).length - 1;
        var res_17530943 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_17530943 <= colontmp__17530942)) break L4;
              h_17530941 = res_17530943;
              if (isFilled_10706218(table_17415025.data[chckIndx(h_17530941, 0, (table_17415025.data).length-1)].Field0)) {
              key_17425259 = table_17415025.data[chckIndx(h_17530941, 0, (table_17415025.data).length-1)].Field1;
              url_17425260 = table_17415025.data[chckIndx(h_17530941, 0, (table_17415025.data).length-1)].Field2;
              result_17415028.push({Field0: nimCopy(null, key_17425259, NTI1188013), Field1: htmlLink_17413712(HEX5BHEX5D_5890068(key_17425259, HEX2EHEX2E_5890001(1, 2)), url_17425260)});;
              if (!((len_17415162(table_17415025) == L_17530939))) {
              failedAssertImpl_1305480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_17530943 = addInt(res_17530943, 1);
            }
        } while(false);
      } while(false);
    } while(false);

  return result_17415028;

}
function markdown_17435264(str_17435266) {
            var Tmp4;

  var result_17435267 = [];

    L1: do {
      var m_17435268 = ({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})});
      var i_17530526 = 0;
      var i2_17530527 = -1;
      var m_17530528 = [({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})})];
      var ms_17530529 = [({a: null, b: null, m: ({s: [], i: 0}), c: []})];
      L2: do {
          L3: while (true) {
          if (!(i_17530526 <= (str_17435266).length)) break L3;
            if (!((i2_17530527 < i_17530526))) {
            failedAssertImpl_1305480(makeNimstrLit("regex.nim(597, 13) `i > i2` "));
            }
            
            i2_17530527 = i_17530526;
            if (canOpt_13515054(linkDefinitionRe_17413641.litOpt)) {
            Tmp4 = findSomeOptImpl_15080019(str_17435266, linkDefinitionRe_17413641, ms_17530529[0], chckRange(i_17530526, 0, 2147483647));
            }
            else {
            Tmp4 = findSomeImpl_14095036(str_17435266, linkDefinitionRe_17413641, ms_17530529[0], chckRange(i_17530526, 0, 2147483647), ConstSet4);
            }
            
            i_17530526 = Tmp4;
            if ((i_17530526 < 0)) {
            break L2;
            }
            
            L5: do {
              var mi_17530532 = 0;
              L6: do {
                var i_17530534 = 0;
                var colontmp__17530535 = 0;
                colontmp__17530535 = subInt(len_13930234(ms_17530529[0].m), 1);
                var res_17530536 = 0;
                L7: do {
                    L8: while (true) {
                    if (!(res_17530536 <= colontmp__17530535)) break L8;
                      i_17530534 = res_17530536;
                      mi_17530532 = i_17530534;
                      fillMatchImpl_13935095(m_17530528[0], mi_17530532, ms_17530529[0], linkDefinitionRe_17413641);
                      nimCopy(m_17435268, m_17530528[0], NTI13605359);
                      HEX5BHEX5DHEX3D_17435378(links_17413664[0], groupFirstCapture_15630351(m_17435268, 0, str_17435266), groupFirstCapture_15630351(m_17435268, 1, str_17435266));
                      res_17530536 = addInt(res_17530536, 1);
                    }
                } while(false);
              } while(false);
            } while(false);
            if ((i_17530526 == (str_17435266).length)) {
            break L2;
            }
            
          }
      } while(false);
    } while(false);
    result_17435267 = nimCopy(null, replace_17250049(str_17435266, linkDefinitionRe_17413641, [], 0), NTI1188013);
    result_17435267 = nimCopy(null, multiReplace_10205020(result_17435267, [{Field0: makeNimstrLit("<"), Field1: makeNimstrLit("&lt;")}, {Field0: makeNimstrLit(">"), Field1: makeNimstrLit("&gt;")}]), NTI1188013);
    result_17435267 = nimCopy(null, multiReplace_10205020(result_17435267, inlineCodeReplacementGroups_17435058(result_17435267)), NTI1188013);
    result_17435267 = nimCopy(null, multiReplace_10205020(result_17435267, toReplacementGroups_17415016(links_17413664[0])), NTI1188013);

  return result_17435267;

}
function quoteString_11666075(str_11666077) {
  var result_11666078 = [];

    L1: do {
      var ch_11666080 = 0;
      var i_17531002 = 0;
      var L_17531003 = (str_11666077).length;
      L2: do {
          L3: while (true) {
          if (!(i_17531002 < L_17531003)) break L3;
            ch_11666080 = str_11666077[chckIndx(i_17531002, 0, (str_11666077).length-1)];
            if ((ch_11666080 == 34)) {
            addChar(result_11666078, 92);;
            addChar(result_11666078, 34);;
            }
            else {
            addChar(result_11666078, ch_11666080);;
            }
            
            i_17531002 = addInt(i_17531002, 1);
            if (!(((str_11666077).length == L_17531003))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(222, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  return result_11666078;

}
function toCode_11666094(p_11666096) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
      var Tmp4;
        var Tmp6;

  var result_11666097 = [];

    switch (p_11666096.kind) {
    case 0:
      if (true) {
      failedAssertImpl_1305480(makeNimstrLit("jsonrpc_schema.nim(59, 21) `false` "));
      }
      
      break;
    case 1:
      var Tmp1 = p_11666096;
      if (ConstSet22[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'bVal\' is not accessible using discriminant \'kind\' of type \'Parameter\'")); }
      result_11666097 = nimCopy(null, nimBoolToStr(Tmp1.bVal), NTI1188013);
      break;
    case 2:
      var Tmp2 = p_11666096;
      if (ConstSet23[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'iVal\' is not accessible using discriminant \'kind\' of type \'Parameter\'")); }
      result_11666097 = nimCopy(null, cstrToNimstr((Tmp2.iVal)+""), NTI1188013);
      break;
    case 3:
      var Tmp3 = p_11666096;
      if (ConstSet24[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fVal\' is not accessible using discriminant \'kind\' of type \'Parameter\'")); }
      result_11666097 = nimCopy(null, cstrToNimstr(nimFloatToString(Tmp3.fVal)), NTI1188013);
      break;
    case 4:
      var fmtRes_11675207 = [mnewString(0)];
      fmtRes_11675207[0].push.apply(fmtRes_11675207[0], makeNimstrLit("\""));;
      var Tmp4 = p_11666096;
      if (ConstSet25[Tmp4.kind]===undefined) { raiseFieldError(makeNimstrLit("\'sVal\' is not accessible using discriminant \'kind\' of type \'Parameter\'")); }
      formatValue_11595080(fmtRes_11675207, 0, quoteString_11666075(Tmp4.sVal), []);
      fmtRes_11675207[0].push.apply(fmtRes_11675207[0], makeNimstrLit("\""));;
      result_11666097 = nimCopy(null, fmtRes_11675207[0], NTI1188013);
      break;
    case 5:
      result_11666097 = nimCopy(null, makeNimstrLit("["), NTI1188013);
      L5: do {
        var parameter_11690214 = null;
        var colontmp__17530996 = [];
        var Tmp6 = p_11666096;
        if (ConstSet26[Tmp6.kind]===undefined) { raiseFieldError(makeNimstrLit("\'aVal\' is not accessible using discriminant \'kind\' of type \'Parameter\'")); }
        colontmp__17530996 = Tmp6.aVal;
        var i_17530998 = 0;
        var L_17530999 = (colontmp__17530996).length;
        L7: do {
            L8: while (true) {
            if (!(i_17530998 < L_17530999)) break L8;
              parameter_11690214 = colontmp__17530996[chckIndx(i_17530998, 0, (colontmp__17530996).length-1)];
              result_11666097.push.apply(result_11666097, toCode_11666094(parameter_11690214));;
              result_11666097.push.apply(result_11666097, makeNimstrLit(", "));;
              i_17530998 = addInt(i_17530998, 1);
              if (!(((colontmp__17530996).length == L_17530999))) {
              failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      result_11666097.push.apply(result_11666097, makeNimstrLit("]"));;
      break;
    }

  return result_11666097;

}
function toCode_11710063(r_11710065) {
  var result_11710066 = [];

    var fmtRes_11710067 = [mnewString(0)];
    fmtRes_11710067[0].push.apply(fmtRes_11710067[0], makeNimstrLit("{\"jsonrpc\": \"2.0\", \"method\": \""));;
    formatValue_11595080(fmtRes_11710067, 0, r_11710065.method, []);
    fmtRes_11710067[0].push.apply(fmtRes_11710067[0], makeNimstrLit("\""));;
    result_11710066 = nimCopy(null, fmtRes_11710067[0], NTI1188013);
    if (!((r_11710065.params.kind == 0))) {
    var fmtRes_11720006 = [mnewString(0)];
    fmtRes_11720006[0].push.apply(fmtRes_11720006[0], makeNimstrLit(", \"params\": "));;
    formatValue_11595080(fmtRes_11720006, 0, toCode_11666094(r_11710065.params), []);
    result_11710066.push.apply(result_11710066, fmtRes_11720006[0]);;
    }
    
    if (!(r_11710065.notification)) {
    result_11710066.push.apply(result_11710066, makeNimstrLit(", \"id\": 1"));;
    }
    
    result_11710066.push.apply(result_11710066, makeNimstrLit("}"));;

  return result_11710066;

}
function mkDigit_11541055(v_11541057, typ_11541058) {
      var Tmp1;

  var result_11541059 = [];

    if (!((v_11541057 < 26))) {
    failedAssertImpl_1305480(makeNimstrLit("strformat.nim(315, 9) `v < 26` "));
    }
    
    if ((v_11541057 < 10)) {
    result_11541059 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_11541057), 0, 255)), NTI1188013);
    }
    else {
      if ((typ_11541058 == 120)) {
      Tmp1 = 97;
      }
      else {
      Tmp1 = 65;
      }
      
      result_11541059 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Tmp1, v_11541057), 10), 0, 255)), NTI1188013);
    }
    

  return result_11541059;

}
function formatInt_11700002(n_11700005, radix_11700006, spec_11700007) {
    var Tmp7;

  var result_11700008 = [];

    var v_11700201 = n_11700005;
    var negative_11700202 = (v_11700201 < 0);
    if (negative_11700202) {
    v_11700201 = mulInt(v_11700201, -1);
    }
    
    var xx_11700203 = [];
    if (spec_11700007.alternateForm) {
    switch (spec_11700007.typ) {
    case 88:
      xx_11700203 = nimCopy(null, makeNimstrLit("0x"), NTI1188013);
      break;
    case 120:
      xx_11700203 = nimCopy(null, makeNimstrLit("0x"), NTI1188013);
      break;
    case 98:
      xx_11700203 = nimCopy(null, makeNimstrLit("0b"), NTI1188013);
      break;
    case 111:
      xx_11700203 = nimCopy(null, makeNimstrLit("0o"), NTI1188013);
      break;
    default: 
      break;
    }
    }
    
    if ((v_11700201 == 0)) {
    result_11700008 = nimCopy(null, makeNimstrLit("0"), NTI1188013);
    }
    else {
      result_11700008 = nimCopy(null, [], NTI1188013);
      L1: do {
          L2: while (true) {
          if (!(0 < v_11700201)) break L2;
            var d_11700206 = modInt(v_11700201, radix_11700006);
            v_11700201 = divInt(v_11700201, radix_11700006);
            result_11700008.push.apply(result_11700008, mkDigit_11541055(chckRange(d_11700206, -2147483648, 2147483647), spec_11700007.typ));;
          }
      } while(false);
      L3: do {
        var idx_11700215 = 0;
        var colontmp__17531010 = 0;
        colontmp__17531010 = divInt((result_11700008).length, 2);
        var i_17531011 = 0;
        L4: do {
            L5: while (true) {
            if (!(i_17531011 < colontmp__17531010)) break L5;
              idx_11700215 = i_17531011;
              var Tmp6 = result_11700008[chckIndx(idx_11700215, 0, (result_11700008).length-1)]; result_11700008[chckIndx(idx_11700215, 0, (result_11700008).length-1)] = result_11700008[chckIndx(subInt(subInt((result_11700008).length, idx_11700215), 1), 0, (result_11700008).length-1)]; result_11700008[chckIndx(subInt(subInt((result_11700008).length, idx_11700215), 1), 0, (result_11700008).length-1)] = Tmp6;              i_17531011 = addInt(i_17531011, 1);
            }
        } while(false);
      } while(false);
    }
    
    if (spec_11700007.padWithZero) {
    if (negative_11700202) Tmp7 = true; else {      Tmp7 = !((spec_11700007.sign == 45));    }    var sign_11710008 = Tmp7;
    var toFill_11710013 = subInt(subInt(subInt(spec_11700007.minimumWidth, (result_11700008).length), (xx_11700203).length), (sign_11710008 ? 1:0));
    if ((0 < toFill_11710013)) {
    result_11700008 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_11710013, 0, 2147483647)) || []).concat(result_11700008 || []), NTI1188013);
    }
    
    }
    
    if (negative_11700202) {
    result_11700008 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_11700203 || [],result_11700008 || []), NTI1188013);
    }
    else {
    if (!((spec_11700007.sign == 45))) {
    result_11700008 = nimCopy(null, [spec_11700007.sign].concat(xx_11700203 || [],result_11700008 || []), NTI1188013);
    }
    else {
      result_11700008 = nimCopy(null, (xx_11700203 || []).concat(result_11700008 || []), NTI1188013);
    }
    }
    if ((spec_11700007.align == 60)) {
    L8: do {
      var i_11710019 = 0;
      var colontmp__17531014 = 0;
      colontmp__17531014 = (result_11700008).length;
      var i_17531015 = colontmp__17531014;
      L9: do {
          L10: while (true) {
          if (!(i_17531015 < spec_11700007.minimumWidth)) break L10;
            i_11710019 = i_17531015;
            addChar(result_11700008, spec_11700007.fill);;
            i_17531015 = addInt(i_17531015, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      var toFill_11710020 = subInt(spec_11700007.minimumWidth, (result_11700008).length);
      if ((spec_11700007.align == 94)) {
      var half_11710021 = divInt(toFill_11710020, 2);
      result_11700008 = nimCopy(null, (nsuRepeatChar(spec_11700007.fill, chckRange(half_11710021, 0, 2147483647)) || []).concat(result_11700008 || [],nsuRepeatChar(spec_11700007.fill, chckRange(subInt(toFill_11710020, half_11710021), 0, 2147483647)) || []), NTI1188013);
      }
      else {
        if ((0 < toFill_11710020)) {
        result_11700008 = nimCopy(null, (nsuRepeatChar(spec_11700007.fill, chckRange(toFill_11710020, 0, 2147483647)) || []).concat(result_11700008 || []), NTI1188013);
        }
        
      }
      
    }
    

  return result_11700008;

}
function formatValue_11695002(result_11695005, result_11695005_Idx, value_11695006, specifier_11695007) {
  BeforeRet: do {
    if (((specifier_11695007).length == 0)) {
    result_11695005[result_11695005_Idx].push.apply(result_11695005[result_11695005_Idx], cstrToNimstr((value_11695006)+""));;
    break BeforeRet;
    }
    
    var spec_11695008 = parseStandardFormatSpecifier_11550322(specifier_11695007, 0, false);
    var radix_11695010 = 10;
    switch (spec_11695008.typ) {
    case 120:
    case 88:
      radix_11695010 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_11695010 = 2;
      break;
    case 111:
      radix_11695010 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_11695008.typ]), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_11695005[result_11695005_Idx].push.apply(result_11695005[result_11695005_Idx], formatInt_11700002(value_11695006, radix_11695010, spec_11695008));;
  } while (false);

  
}
function toCode_11690259(e_11690261) {
  var result_11690262 = [];

    var fmtRes_11690263 = [mnewString(0)];
    fmtRes_11690263[0].push.apply(fmtRes_11690263[0], makeNimstrLit("{\"code\": "));;
    formatValue_11695002(fmtRes_11690263, 0, e_11690261.code, []);
    fmtRes_11690263[0].push.apply(fmtRes_11690263[0], makeNimstrLit(", \"message\": \""));;
    formatValue_11595080(fmtRes_11690263, 0, e_11690261.message, []);
    fmtRes_11690263[0].push.apply(fmtRes_11690263[0], makeNimstrLit("\"}"));;
    result_11690262 = nimCopy(null, fmtRes_11690263[0], NTI1188013);

  return result_11690262;

}
function toCode_11725016(r_11725018) {
      var Tmp1;
      var Tmp2;

  var result_11725019 = [];

    result_11725019 = nimCopy(null, makeNimstrLit("{\"jsonrpc\": \"2.0\""), NTI1188013);
    switch (r_11725018.kind) {
    case 0:
      var fmtRes_11725020 = [mnewString(0)];
      fmtRes_11725020[0].push.apply(fmtRes_11725020[0], makeNimstrLit(", \"result\": "));;
      var Tmp1 = r_11725018;
      if (ConstSet29[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'result\' is not accessible using discriminant \'kind\' of type \'Response\'")); }
      formatValue_11595080(fmtRes_11725020, 0, toCode_11666094(Tmp1.result), []);
      result_11725019.push.apply(result_11725019, fmtRes_11725020[0]);;
      break;
    case 1:
      var Tmp2 = r_11725018;
      if (ConstSet30[Tmp2.kind]===undefined) { raiseFieldError(makeNimstrLit("\'error\' is not accessible using discriminant \'kind\' of type \'Response\'")); }
      result_11725019.push.apply(result_11725019, toCode_11690259(Tmp2.error));;
      break;
    }
    if (!(r_11725018.notification)) {
    var fmtRes_11730005 = mnewString(0);
    fmtRes_11730005.push.apply(fmtRes_11730005, makeNimstrLit(", \"id\": 1"));;
    result_11725019.push.apply(result_11725019, fmtRes_11730005);;
    }
    
    result_11725019.push.apply(result_11725019, makeNimstrLit("}"));;

  return result_11725019;

}
function createDom_17506014() {
                    var Tmp7;
                      var Tmp8;
                      var Tmp9;
                      var Tmp10;
                      var Tmp11;
                      var Tmp12;
                      var Tmp13;
                      var Tmp14;

  var result_17506016 = null;

    var tmp_17506049 = tree_10560445(43, []);
    var tmp_17506050 = tree_10560445(21, []);
    add_10550072(tmp_17506050, text_10560582(makeNimstrLit("Kisa API documentation")));
    add_10550072(tmp_17506049, tmp_17506050);
    L1: do {
      var interaction_17520214 = null;
      var i_17530499 = 0;
      var L_17530500 = (interactions_11735030[0]).length;
      L2: do {
          L3: while (true) {
          if (!(i_17530499 < L_17530500)) break L3;
            interaction_17520214 = interactions_11735030[0][chckIndx(i_17530499, 0, (interactions_11735030[0]).length-1)];
            var tmp_17506055 = tree_10560445(22, []);
            add_10550072(tmp_17506055, text_10560582(interaction_17520214.title));
            add_10550072(tmp_17506049, tmp_17506055);
            var tmp_17506056 = tree_10560445(31, []);
            add_10550072(tmp_17506056, verbatim_10561001(toJSStr(markdown_17435264(interaction_17520214.description))));
            add_10550072(tmp_17506049, tmp_17506056);
            var tmp_17506057 = tree_10560445(35, []);
            L4: do {
              var step_17530214 = null;
              var i_17530495 = 0;
              var L_17530496 = (interaction_17520214.steps).length;
              L5: do {
                  L6: while (true) {
                  if (!(i_17530495 < L_17530496)) break L6;
                    step_17530214 = interaction_17520214.steps[chckIndx(i_17530495, 0, (interaction_17520214.steps).length-1)];
                    var tmp_17506058 = tree_10560445(37, []);
                    var tmp_17506059 = tree_10560445(31, []);
                    add_10550072(tmp_17506059, verbatim_10561001(toJSStr(markdown_17435264(step_17530214.description))));
                    add_10550072(tmp_17506058, tmp_17506059);
                    var tmp_17506060 = tree_10560445(33, []);
                    switch (step_17530214.kind) {
                    case 2:
                      var Tmp8 = step_17530214;
                      if (ConstSet20[Tmp8.kind]===undefined) { raiseFieldError(makeNimstrLit("\'other\' is not accessible using discriminant \'kind\' of type \'Step\'")); }
                      Tmp7 = Tmp8.other;
                      break;
                    case 0:
                      var Tmp9 = step_17530214;
                      if (ConstSet21[Tmp9.kind]===undefined) { raiseFieldError(makeNimstrLit("\'to\' is not accessible using discriminant \'kind\' of type \'Step\'")); }
                      switch (Tmp9.to) {
                      case 1:
                        Tmp10 = makeNimstrLit("  To Server --> ");
                        break;
                      case 0:
                        Tmp10 = makeNimstrLit("  To Client --> ");
                        break;
                      }
                      var str_17530229 = nimCopy(null, Tmp10, NTI1188013);
                      var Tmp11 = step_17530214;
                      if (ConstSet27[Tmp11.kind]===undefined) { raiseFieldError(makeNimstrLit("\'request\' is not accessible using discriminant \'kind\' of type \'Step\'")); }
                      Tmp7 = (str_17530229 || []).concat(toCode_11710063(Tmp11.request) || []);
                      break;
                    case 1:
                      var Tmp12 = step_17530214;
                      if (ConstSet28[Tmp12.kind]===undefined) { raiseFieldError(makeNimstrLit("\'from\' is not accessible using discriminant \'kind\' of type \'Step\'")); }
                      switch (Tmp12.from) {
                      case 1:
                        Tmp13 = makeNimstrLit("From Server <-- ");
                        break;
                      case 0:
                        Tmp13 = makeNimstrLit("From Client <-- ");
                        break;
                      }
                      var str_17530232 = nimCopy(null, Tmp13, NTI1188013);
                      var Tmp14 = step_17530214;
                      if (ConstSet31[Tmp14.kind]===undefined) { raiseFieldError(makeNimstrLit("\'response\' is not accessible using discriminant \'kind\' of type \'Step\'")); }
                      Tmp7 = (str_17530232 || []).concat(toCode_11725016(Tmp14.response) || []);
                      break;
                    }
                    add_10550072(tmp_17506060, text_10560582(Tmp7));
                    add_10550072(tmp_17506058, tmp_17506060);
                    add_10550072(tmp_17506057, tmp_17506058);
                    i_17530495 = addInt(i_17530495, 1);
                    if (!(((interaction_17520214.steps).length == L_17530496))) {
                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            add_10550072(tmp_17506049, tmp_17506057);
            i_17530499 = addInt(i_17530499, 1);
            if (!(((interactions_11735030[0]).length == L_17530500))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    result_17506016 = tmp_17506049;

  return result_17506016;

}
setRenderer_11455238(createDom_17506014, "ROOT", null);
